%!PS-Adobe-2.0
%%Creator: dvips(k) 5.98 Copyright 2009 Radical Eye Software
%%Title: Mirrors.dvi
%%CreationDate: Thu Nov  8 15:16:11 2012
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMR17 CMR12 CMBX12 CMMI12 CMMI8 LINEW10 LINE10 CMSY8
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o Mirrors.ps Mirrors.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2012.11.08:1516
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 90 2009-01-30 10:58:51Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.06, 2009/01/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionaray
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/PenroseFill {%	 on stack: scaling factor
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
  pop pop 
} def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
%/NArray { 
%   aload length 2 div dup dup cvi eq not { exch pop } if /n exch
%   cvi def 
%} def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  showpoints { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED /c ED /n ED 
  cvi dup 1 lt { pop 1 } if 
  /s ED 
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if
  /dx ED dy div round dy mul 
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 26 2008-06-14 11:50:02Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.01, 2008/01/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.12
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower IsEndingFactor { pop exit } if} loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
end

% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 26 2008-06-14 11:50:02Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2008/04/18
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def

end
/PSTricksDotFont exch definefont pop

%% end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMSY8
%!PS-AdobeFont-1.0: CMSY8 003.002
%%Title: CMSY8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY8 known{/CMSY8 findfont dup/UniqueID known{dup
/UniqueID get 5096649 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY8 def
/FontBBox {-30 -955 1185 779 }readonly def
/UniqueID 5096649 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY8.) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 54 /negationslash put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D80B73E7B6CB7548
0E1D77FFC695988391DC44AEED8CC947B3D7E198B9620E2238DB3A2819182F03
14498B8CDFBA48926DA721920B221FB33BC21A8456AF10891403501D0F6415F0
7E041AFFE109F640E54FC1A365674711EFF94E752652A4C8DA62CDB1149DB899
2C4A4BD77A06E81E93C5698C05DD02F74A0756082738BDB53003B483752AE498
DD718AEA8F3FB5A6B7E2D2AE8F309065F3D556F9A34AB90C88833A54295E0982
209C466A301BA3372AABEE20D862C6DC6B6FAC1463C8CBA8AD766ED1B4C9D712
2BECB4E6ABF558D8AB5281C35726BB8D046982C0DDAE17BFFC9394125E4E84C0
B283977D31460B8EED4346CCB09F64DA0ACB640C6DBF32F2DC30D54668C1CC12
24C7280593088E9958C047125C323E9C842801346A9CE5F50413D69F6DE99471
65D2E387765E92EA4C43F17B467DF6E266D92551009C0E52E7219AE9F5E2E8D2
88852086FF3600BFB50AF3EAF8C009D8D5F084B510F792385F328F7EFA8C38AD
CDAB2EEDFBC6AA45F6DD7364C2F02DD2BE6C79C8361E83D4267CEC2407689864
B57B5D967FC80AB3BE8CA43955FB0FD3081D438437559AD24A7ADD484C1E4A77
B00BDCB0D1B121FEE983412E1EA5489BDCE5DCB4A7310135956B230C0DE7BBED
516369A92BC41FAC8D73490984942D930DC193BF0C774C1AEF627B969EE4B001
11381AC57815D7581E2372A1DB740B09F4A7FB4318B765DA4E7B44E8805CEF85
44EC3B10613FE7B397BF91B69A5CB2E9086D1E7A1FAE0A9ABF2A237A2D29ABFF
E392A18AEACBF28274E775D3FBAED4F46B982B9DA4602E24094EDCCBC9D6FC0F
67C60376879245606C0B9C9A678E8917516BE1CF097B1C75C9F0DDAD6899F08F
81FB7A198D45FE060CD2A550D9B8D58B882B969D7BC3EC018A1FE92BDB262835
26516FF97AC387EA525FF987E5EB1EAAE4EA5866C9CC043D183763C530F7D7A1
2070E4044507C4E5611FCC117FBE4396E0B24F672CD53D5FDFA56D561FB86D40
90A52A7C7F29A119DFFB694A8C445367746A49CA5FA83163BE448EB19625DF26
609A8C8672631A10411036CAA3D6C2F822A4B2505DCBE8E1CE6916AE515E78CE
E8C894B134BF811671D17C19248853131DFFAEDB24B15FF17EAC194662460642
48D23515AD434C68DF56753806FE96DB3A29F9D4980E0B6EAED7383F9FAD2584
8F85679D6D1933677ADF5D31FE6E43DABF137E834A1DEA632D36EA5728625159
8F33348893C9D1C510501628E4A9A80587DF6E179FAF68B158406A3EBCD726E2
AC17F2DF8B3607072824D2E5A6479F7BADE32E603E54E7A83BB2DFDEDB0D80CD
1F1BDD4F6C9025CC3A8A3685DF10A8183FA80CE0F0FE2BFF2500F76B1037AE41
56D2D7FB468C3CA7549E3599A2AACF66302572F1B35BC8EF7C23F6FC4B720228
1D673D903111CE378AAE83480B4DEB7EA84BB35F4F7BE997DD4FFF5A9B5E7650
3C7365BA0965B242DC369D03215651184024A08EC284F1798B0726152884B4D8
46411B3BC8F5CB53A70AD53BD7B1AF23528849B56CF2F75609FE715878CF6448
38579380688B47AE3D374B0DB6ECA5B8284414090123D47F3F9DF389E023F431
6B4C0DDEE4190DEEF4CA772742012754DA9A44A8F550FADA6D8FB0C512D5BA2C
BB7DF71B1DA41FB6936BA71B710CC6A80751E43436F0F5888F51AB370DD4A088
40F402661E08732C960705C7E0D29B8DA1A8A3E119409E51EE575E9655F47568
023977917C8EC610BEBDB9C1F4EBC192084D63EAA00EC87B53E86620BB5AE51A
579B0F8E1972CE1DA02832FC75184F45409DD9D413402C2FA27BCB0AE6DB4CE1
5AFB114E23232DE07C4674969A1FC94D152C6D3A611F029ACF4D949A2C0755D0
31C7DACDBB4DFCFAF7E87295CCF5D4AE28D87ABC3533D87EEF1507B9FF9063F7
F007DF03734A20BC3A198B049000C92D2849C62DDAA719FC28EB372793E20128
D786670E08948808BA45C4F6AA0DD8A8357CCC47228A760C5C7864853BD9C9A4
285E446CB72C5C9D3F03FAB000810DC5674061FA116153040743E846506CFA67
FA8770E785D7DBC7293F37389A0859CC22275B23C44B57B92A033A7BD194340A
D6BAC6E103402F8396A5394C617CB2A27D9500921D5DA06115EC81715EA8E360
4A95DCE8689CBE268B8E6C8B806CFB0ECBF634250243C9E1AFFACAD65311FA4C
1DB0988203537E5EF12B86FB454D06CF05E4F4FC4143D62920E99304245B6ABC
82E21192BE94F5E980DB21E07FEDF0EB0CAF4ABDFC20EF08A2A44A7940E2862E
08FABA516152DBA899D6CA561EB08C7C8298DD511084E5230CEBF28AB1D84C85
B5BAF4616C28FE05AFA4BABB3BA03F8CEEF3F3EB0D3034BD3D8D06629B8E9EBD
72484057E71C9EB4DFC7C2CE7749271AC926C2419D618FB0B60FD6F81F0F2C04
E529CC74DCC9E4AF32D935D7CA65FBD0842A7BAF162D08F782E65DF3AD9EFE69
198AFA9208B22BC21BC4ECABB9BFFBA84C8421B74748E1EAAACEB59E566838F2
C439579D6C75074F94493F7D5C8942D881AAE6302C37A61003AF77684EE99AD7
EB5EEEF050C52E75E4E842F8174470FA60CB213BB6F257EEB26CC55D1202931B
B981DE2535A87CF37BFF912220C117EE166CCAE58BBF624170FFBC0716726B36
304D698F2CA131675F7B1199E6581B8C812C4FAF75814282477BE2B7EBCBA7C2
FA6356B2876F89698C6C2493989E9EB252DE03BB374622A7C88B8EE9FEB4851E
02F85CF70CDCA7BED5EC94E81170FB557C3BFC6F32CD70B506E56A2CC5451592
130C6F570C679577C44D60A811DCEFB3535D855259B1021AC168DB76DD38B459
F1813E3DB20AD9275D58880CE94058490ABBBB0D8DD16D4A65F680B30057F15D
07FF54D779CC978E90A850A2D8D79961EE276BB26B594C16F56557435671A3D8
ADD3DD0BC4BC73B0652B9DA8462FE614A14A11ADB2214EC4910823FB4CEC8938
24354C5C62547EE5710FB5ECD93AA45DEA7411F6CA8D5B5FA222685E622AD73C
1BD5DFD1C8F253352D6C7D14FF2FACF07CA5EB11392C6A33E9CABFD99F743BED
55E8DEF49E07B9444171D1780C698E5B65B540F41F845AC188DC7C0C8B5BA5F3
546BEAAA4F29F0DF30D5AC12A60862742623100074457BF2D820DCAAB340C1DF
22FF26992DC02F276B40A7C528C84B72CD189A4088C90070486C49A1014FDDA3
5093FC12DAF309FBC063653E6A33E14EB51B081126AB5BCB8016E975060B796D
6CBFDFE6CB9E191F12E309254BDD6660E3227012F5DADE246B02B6D8127F1EE2
248F48DC5ABBD229748444420C868450602120664984FE3A8B2373232CE5CA15
E67172CAF7EA99F73A66AE33B1EDE5E8351DB02497CE3338930147873D4E46B5
E918F5592A21789FA9F46232BE693DFC33240E2649D6AC1940B101D806089436
F0CE230BF6D0363510378822891DBD3EEF3365430E74FB6C994BB40C8EEDA593
CEDAFEBC3B87C7C04F52FBD7D557A77B44855CDBEC8A8D26F44D66446B5662AD
15B6B79D13BD262D79BF51C09F8F690A61C7F11EC2E05F6BEDA273648E9E1EBC
3D5F1D6ED486797F753064ADDA8494405556D43D395B1487EDE877CCC1EAE954
1AEE2513DDA94897B733609E8179DFE1975590568202EF20D58A89B34874CC3A
A5579473AC65E0EE61545AEF578ADE10BE3FB3E2CDC96678F613E4DEF7BC1B38
8A551C93438A0540E292F65F1FA73D9AB30A5F545284085E4930A570C1807995
7108AA8194607304488616DD4AB189F8EDC5F4507AEFD7847817A8ECFFDD2DD5
DE95E04EAF2774F8AF661827229F01E769A32734097C457EB6FF056D90C46C5E
9F936AA6BF2EE8244BBEDB8862E56423F5845BB10C8809730B011D650EA18945
83C320A3F4ED095A5EF91929FC877ECC28A1C2CE74A53245E629BF46C6534983
307B1C94EB35CECDEE86551F0C308F66690E591C5D9D8FE14F534CF3F5DB6D32
39D7C799F392C4E65759B7BF61F4D8312E3B26C31466206A367A0DD7A90D25E2
805D36ED5CE0A4BEBCAC0A348FADD2D2AAD670E28BE6E33F627B4A9F35078B1D
6688084C4C18840673EF9B3526172EE14EF64E97C8B006C27DF6EF73BA6E6459
3608F10EB1EC4B824DD5360B42AFF2084788B165747AABFB2C9C0EBBA9C6246C
08F28143809315D6268E386F09BBAC54C34213438B56C386B34AA457D149CC39
A3C163F56E3C2E637C63A79CF7F2DE969EF3AAFF75F3F20499A9ACA61279D545
866FFE57D25998244F448AAB042B141952BD653007A889B1A716A4042CBBB827
C1ED5E3C616C22D5FCB39D3B3539F9B71D50D25ECD2E5D953C7A5194C867DDB1
75CE10B2C3A20E8CDE15AAE9F549D034838DC066CA649C31EE365D46450AF18B
893748D055DD88C72391FD92DDF0AA1A1316051BC756F87BC9A425019B2FA7BD
CA9F35E89E2229B3021DD24C9DF0DC3217F44DCF510116DDC9E92EFDA3E0A892
491C8961CA484BA29B8CACD2FED2E246FA7414F892AF7B9F08698FDEC82D2E4D
8C6ED1FD9E0BA2645663E7E97B0F780033D025F2EF3B364574C03F04FFC4E09A
3D4182BBFCCCD8CA54A92434E2208803ED36F931D31C7498B7FCEE4B78AECF11
B27123A10F031F9CBA36066680E4748E346D18FD0EFA395D1A9227530618ADD9
64D96C50A0172F712CB427E8F7170F8A1691FB95B247A271499F0E63676BD64B
167438333A3BD9CD9641AC637E0ADB17F1E394DF34AF5A2BD02030DD087BBA02
E1209338B74075744A9A9966039AB6D223F385E06FF359257913E6C01BF32F5B
A3640C7CA41A6C51F296E50DC1CD1D68491CE5D75E0ABDD4C5C4A97C8BE2BA35
D91AF9F8F38E7AB8C1778B06A212D0416E6137087329AAA2679C51D014CC4DEF
0F1543E2FD97621E552E19B29AA1368CB5046C188BA59B1E1875B25FB269DD2D
C0678A42CD310702465694F2BF302AEBC43F714F7C657505132DDA71CD23D17D
628BF3400EB5DDFCE2850F31B40C5913394649AA4241CF646F3939916C2077AD
C11F8C3E478586AA7931E327333FCD8A2EB31DF4B47AA2F31B999556602DD998
5848143C0CBD0B5187DF08E675550F2384D48C2954EA7D16AD2B94DF97C194D2
302CC47BF968CB1F6C9641A87525D5C6972ACCA1D4A4B4DA8EC54BEA6E7312B3
2737754A9FCBED3BA5F8220B751506BB0A5BB5CF706AFCC04BFD713A3BE3C842
9FFDBAA0CA5691D0FCE76134841A169970903843163DE68FF09649E99945DB64
491FD6D8B2DF237DBAF550D1B74263B3BF1EF6211F40D4DF2DEC46E4DE557088
5D458A7CDC6F34B8C3F5C76582C8B7D24A333AAE0B43CA67436F8ECAD7C50B12
35BAAD521033D8024E4DFCF01580AEC63BD5F8ADB778F822AC4FF0DA608EB7CC
1A52A51B9F38FFADC0D2F4D8394C5D598123B483AE5AC1215F24F2492EBAA134
3C58AD4E3B493AABDF753EBF1F04058C6981C353D6788C2D3294165B667D3765
7883A8493F5D772F789F73979B254BB9397FDE4F8B76CA6FFF312F4B012949F4
3EDCF1AC60FFF2681549DFF430B498405E79CB407DADFCEDCAB1E2FAD3B0F4C7
B575A33EAFF9F67D37F50BB06D06834EA683862991C5BE340D4A7F8D131E733D
289F72977870F9958102F5D835739F0F5A642E7194E8AF7FDA2937E5C0712CE4
EE15CB475725030CE0F238C32775D3EC95CE3D0886046E3EEAE322F59D423E83
DE88DDAB5CE0F70537487EBA5A16A9306BA7DDCA14A85A9F83B3BC3600DC9421
BDADA2704A5A24F7174A3A486ACE68739EC5960038CB44D969A594E97AE1F42C
42C1B7E3A456B3CDFC7683537B337AA8777F18CA45B22C8BEB18877DC624496B
9E8EF9F386B7FE4D94ABD5CE3B5786E76FE04A35909C472C04654A4405932EE6
A4A3E0F6DB088603FDD82F0EFCB85A962002A662D1AD0647A2F484B59075A1FA
9F4327D542ED7962620B998ECC3A95CE736089593461CED9B5AAAB05C2DA3820
5AF29B32904E1EEC357C8E282189C6D8F562DB11291091E6897E24CD8F8E2A34
67F35D261E01336152E69831B0CC6B03FF1AC7EA22B745F513A25FE10F70E74A
3FD71FE1EC9999BEDE7CFA6A97EA2DF621711BE950FF8960965685BAAEA71FA6
36F165573A0A6A92DAEE41A9B0C97BF03419FF6BA1F44524D00FD671EACC4233
9A857680DFD27B9F1E7A760058C8277B3761DB9969241D1824A7DADF70BBFC38
89C6DB9091E3BFCB36851CB9662B365A4B7384BDBA1D385902D1E5DABA72A159
63790096B927EA49299AE03E41C7F593F3B995D1155E91C62D5F68845ED3C797
7798B56858F96C2FE2E37D812873B7801767082A6D6B60602CEB94B7F6D7A142
72814734DC584A18D1FFEA7333D4C7E2DFE5B91E9AD92EB52533CA52FA888980
C79FEEDF0FAFB3B20B497F9AB668BDAFA364B405916526D5C48E57DC30BC35B9
BF684FDFAD199D9A28541327F3899AD505FBBBBB22F419E22E0149EE5FDD2B43
AF442E2724EC16934C307FA731F90AD1C76B74569B78CDEA7C19808233C6364B
D049F3F50A68D3EC5F29F2B96BC58C44AF90FE13F244B7129F14B5DAC3F3F310
B330E67CA4EB76F895DAC8025F11EC7630EEB4826B5721348FA38F28B2AEEB1C
5F7CA413C486C94B1DD96988F07F7A08D3635E28624878E55D4FFBEB5E183CB5
93014D8A272EBCF3A09133603CFFEF43A6FF059BCE525706D3795884FB495748
C8AFB50DB464459A5C36D7CD087631BC09C693A11BDF1C6011D9864FE66EE8C0
4824A42E97D16E017C0BB73732D4537E2A5BB283B3568950E5681364DBC1D6DA
058A122862A44ED85029A7B39F2FA7C362D859D0B429E056891339626AE6091D
74F6110CA32F8F3E9507216997E6AD1A2F1FFBE8B407C9880DE230E234F6FD41
A291851178BEAE5DB9DEB22E3443807E2BCEF12A4AE8C490AA9E3D2918329F47
42314CD258A0760DE5FDAC4AF7209CEB530B8508B278952A3638CA8491C3B493
516F461610DBAF32E923ACB834B15E2D169A10F2609EC0ACDF7BDBC777DD2C19
2DB330FD557D3B06B78824D6AB237D8F2D57A7ED35F02CFA9290ED6893B41657
A2485524A3F1642FF5808FDB77015D9467EDAC4A6BBE8A175833B1225A5554F7
2C60207F7A2632A4023255E8EF1F38C1B8216C9B03319B60BEC9799E5378683F
46E698FA75F2DFD40F17C603F3335F1EC70DBA1449C7A33EDDD46CC3DE4A6557
EE67BF349AA8680FDBF415DC527129288B5879500180F75DF80394EC7CF11BC8
9EE9A4ABD64DE3076A2963F83FA333F19FF74F79ECF36A87A31D6F125FD2415B
3F6A6FC33C179F54CA164835F3C3DB62AF444BDF27AFF23098C7212477F688B8
6F48D9AD080D544D57FEDD33D3D9AED9346CBB644C97C951D4AEEB2BF6F0CB18
E2517BA7ADCFD00FE44E290E731D53E5C0D762FCBA08004562DCE6A5EF2FBB74
B3053CBED3B6E896B1C3356DD9E8FCB69691AAF6BEBA0424D62B9F266D560B40
89E20A9F35AD4A7F65A7183761ABBEE0F7EF26ED3565A25516A3A5A57143979A
1EEED8CD52A69E4E1AE4795F3EE0CA21B9F4D166783A9AF54B08B6C56703932A
310197E328C6E6A6BADAA11D66A952964F31FD690082FA02D1E2A4512A9F2742
33B203FB770A3A1C7490ED630D0FAEB3066429D0237E18818EC368D0DA72EB08
1951C70139EB0DD59EB53AF5039A7618C77F6CED9F0A066FED6FEE0C0E328351
BA39746C1224A29D191D8B86491E0A306ABA070CAA2756C3A33990EB6DDF34E8
06EAAFF94AE6686EEB06A17D6D020D1F4E59428D533DB0EDA6434E6E1A478D5C
2A0D08CB39DA7D5F5200199FFFE3F41729478D4F63AE01FC0BF3B378FF6402D1
CCF1BE5F191BAEAEC7FE400C9980E103D8776EC196E741AFE11D249E0C277263
80FBD329524C55943E25631F113FBEDDEB57A006D5FF5633714E48A147C82041
DEBCB1FC8F4FC76C3BC8D80F27540ECC96B748A9950475B8352FE6EEA78B0EC3
06B84B5E529709218B00DDFDE9A86CCD13F919BA32399592595F4A2863730C33
E6EC562756E30B839C9559EAFC4D556A58CE51B16B4EBC9234928172E01B6EC2
FDFB4807D02D89731CC3D93CC621ABD67A8DFE9B42420FC819F9C2DE2B1EF9F9
6D6ACF9C0E3E3537398EDA0F84F978AA3D499D91227833753D362978341412B7
A45AA69317
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LINE10
%!PS-AdobeFont-1.0: LINE10 003.002
%%Title: LINE10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name LINE10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/LINE10 known{/LINE10 findfont dup/UniqueID known{dup
/UniqueID get 5011940 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /LINE10 def
/FontBBox {-150 -150 1020 1020 }readonly def
/UniqueID 5011940 def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name LINE10.) readonly def
/FullName (LINE10) readonly def
/FamilyName (LaTeX) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 19 /a19 put
dup 64 /a64 put
dup 83 /a83 put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE366EF37D4823F376DD9F7E4CBB15
DA8E93E91E84D36BA5A5B06F3A46B45692ED11C8FC76C0B0B3157F699878E2ED
D89511CBE105EB42FD76309DA91EEEE85F1AED9920648285111A1690C4AE2638
C0601A7DBC8D2D41CA8C4F9DC7A6AA5C51015D8BA926831892381DCA7E61E230
5BB3BD5632D276B929D97D4836F9703461BED94450CDD2660430A0D13F49EB47
72EB0371E38B92F488FD6E19C944811D4AA52CCC359210320B484568E5060BC5
4D2FDAC73C49BA0168EC70388AF54EB24A30387A41246830C10472DC40AA0BA7
BFD5FA9A7730D9FDB4B639665275683C8E3CD7E719FF53B6DE1F5835C06D1671
1185AE2114E4BF5C0836BBD5391FB7AC5793DB4D3C5535ECB70119CFDF567D0C
A390B1D9A992250D535CE1C36B028E3E9CFEF1DC5E0626C58FB0F25E04DC1FFC
DB6A1C67E40E6435D2994BE814C695B48D64DE30E3F9A38D4547B49FF66829A4
9AA4FB9432DD10B6AFA88BBC184BE95E34A17076782DCDFED010CC19715BA5D4
5D525F33A6065EC6C6811F7D8AC94F27E4E2EBCBBDC3AF1AED1016C343825BA1
1DF58B80CA212DAA2F4EA1889F989C99972A5FA25617CABA3B52190EAA98C27C
15717FD85CDC8CAD43292A21B341CC2A04EF383D978142D16B4A97EBF22ED674
0B45CF5B2C3F151029B75CFB6FD2C53AB88066DD793B85CB7A7A13694C0B865D
BB3315043A4986FB138775B7354F4AB89AFD27D52E0864D384397ECD9A850511
E96A85AAC591975E185230AD05DD19D2C6883B2AEE9107448928AC6959BB66AB
7F8F7C4BE5E6E4F88D3BA98B117C9F0F58BA8D4A7B88413ACF98B0ED4A5FF6C2
5F96EDEC0AC75AAA7C2F27FA3DDDD0B3BA0683D98F99A282C799183C0952DAF5
A900E23342D083E8454E64F9984EB44FE0929E8C1605B8B26C37A219ED8A04A9
D7D6FDF3546CB443BB11B2E4A1015E59E8AEA265CC70DEADB42D8361F4F54979
19ED22A9E83B7C851A296D1B5F44AC57AB4EC29FFF3C75A20CB3C1B57EDFB4B2
1AB1FC26A6D947D45EE8221185749042F2896A43FF932AD70B16BC2AD7982D51
C390D752102D4A6D49F0205253618EAA62D3616BC1FB3B7C5F3EE8F00D3EED1F
A096AED8381876AD3B6904E0AF7AB1D15ADF3AE26A8D3056F4F2294D6CB67363
BF702641FBD29631CA0BDCCC75E5C9AF9BB470D331B02611C0B5E770A3ADF8D5
15F799C828EB1E1734E6AD6B29C944ED9C203EC1381762211DA58512A111CD69
56AFD4765B76A076584C0880A37F2794BC80972B8019A2A479DBB44C6F6D3772
240567F8730E7C47646E4956B34943E2B8961434CC33E7B48D8DB28487245D96
6C780A2DF2C897416C896AFF44B392D3F4B8104AA3C3A8C707FA0533AB652EFE
2FF716E47E43656800DE49AEFFBBBE350FB0370CE847C9DED870EA1FBC43E8B6
AAC17CEA7CD103CE26253EEB0224B8EF5B8C6E1FB46E20DBEEE170996CE7A061
C1A0463B12054943DD71BB095CB8EB6ACC7BA4BDF4362931711023D551F40E1E
EC2244BB373F504532DB7E4F91F955851BEBA2E6DDD22B3057384D8C770038EE
92E2B713F0C75251552CF7BF0EC2620A2A3180BD13E4FFBF418EB099E3B125C9
6526257D50FABAF291A83025FFA64A384657EEC9061416D1D79A446B69A00690
17486839593C01950CED5B3618F751900B1414
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LINEW10
%!PS-AdobeFont-1.0: LINEW10 003.002
%%Title: LINEW10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name LINEW10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/LINEW10 known{/LINEW10 findfont dup/UniqueID known{dup
/UniqueID get 5011941 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /LINEW10 def
/FontBBox {-220 -220 1040 1040 }readonly def
/UniqueID 5011941 def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name LINEW10.) readonly def
/FullName (LINEW10) readonly def
/FamilyName (LaTeX) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /a3 put
dup 23 /a23 put
dup 24 /a24 put
dup 58 /a58 put
dup 67 /a67 put
dup 87 /a87 put
dup 88 /a88 put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE366EF37D4823F376DD9F7E4CBB15
DA8E93E91E84D36BA5A5B06F3A46B45692ED11C8FC76C0B0B3157F699878E2ED
D89511CBE105EB42FD76309DA91EEEE85F1AED9920648285111A1690C4AE2638
C0601A7DBC8D2D41CA8C4F9DC7A6AA5C51015D8BA926831892381DCA7E61E230
5BB3BD5632D276B929D97D4836F9703461BED94450CDD2660430A0D13F49EB47
72EB0371E38B92F488FD6E19C944811D4AA52CCC359210320B484568E5060BC5
4D2FDAC73C49BA0168EC70388AF54EB24A30387A41246830C075FEEDFCF176C4
F8989C20958FD9277C78B1913BA5050D47F2E0DBF928FB444107A482943A1CF6
96B7B673FEA27EBFBC62CD98532C34B5A3669036ECF5C7A7FB7426BD080BB04A
E78C5A868E2358D23C43CC78A88F20477278F741736149C7D69FCCA638934F76
BB5679344F66C64E71CD35D1F0C060DF297DE15AADF5578FE7C5DE529715E32A
C01411A7B1377C89580FCBDFE62CE82B7F487F794EF34D824FB5E903F3E04E87
E1710ED3EB0C2AF98D206BBF57C88BFC1D549D56CB05868CC2B47662CBBFD131
2E64E99626B9D0C385491CB7AAE47461B3F04335F8312E4C2F0EAE1D0C9CBAC1
39584B5C5311232756B1170CB1765E7BC063D1FCAF7BACCFE6D4B30A2A321E15
228B160672F102A0DF00805157C47AE02EDDF137C0B1DBBA6FCDF4DDA36184E2
44F91940BBD835AB5148424B89CE4AB12559A2E8D980E1A5EB790CF34FFCC780
561302E4FEC39C475A613CE71059D1BCE96DE7A14EB44B37E379397ECC24F134
E04377B8346C2B4B2A4F7AFBBA2E63B8E722B70ADB147749A6C46FEEDD7EDDB6
53AF8166BC54DD3503A3A6D26FFCEFA419421C37801EE0EBB94FDAE8F32FE89B
AC71E22358E0894FCD2CA23AA92E067F4D384039D874AC6FC13068DD6239FFC6
EB48642C0E93A757443AF5156654FF047784DB5A43A5C6068032B9272058D697
DF577C4FA8DF71259CD036AC6FAD7356645D8FFEFC2DEF84ECFA9039069D0B09
1B5668527F3479532F509B09AEB2967338BB1AA13AE633C89BE01AA3AFE83309
863A665BC9DE9B0A4EDAA17004E8E3F9E6D6626CC108573E1A503135B37A761B
B3B5C65FABDED45B0CA3EAC8C1C7FA660E53E1E74DDA750D58DFBD9581F46C70
A300027707FB63E981F17ED4D95703765046AE4CCC911258365C2556AF504274
CAD8F0959CF1F1907585979F1517F6D263165E326432A9AD35E2E5E5048B8FE6
C0A5CBA24DFFC2F2C3F1EA6B9789B10A99D6C47773563623937014712850196E
D0FD33F28AB6F9B381540D1920D240E6BE9CF5E4EFBA1285860C4DA5AE41B6FC
5198D66FA5270D1524BCD8BF0EAE8F67FFA2412B52CCB76762159A1FEE60E788
75C94703F97DF3DB6D694C46DD8B44F1ED7DF2702C858C11A18BEB8C449BCAFD
90BCABA480521390D3638F3723B6B0DAF8B9A1B856697EE8F81B2226543E8C0E
F671890614E1DBF3A283F43284E7878A52FFCF2D72204026318A62A9A21EC0D9
1432C9706A67425E1B39089318BC425174AFAA473759440C4A33193636A9E620
7C4390CA5C923B2D9274ED7C1F668C55F51096AE65E9021D96953F772A5E4F29
11FA92CF123B6766B65EB2D6D08B0F5017636529B303BA134073F7650BA4B872
36D5799DE68CAC0B032E31E51000DEDB2705F93E7A4B265E52396EDE6D903182
FBC208C3CC36BB080B47C8A0917B76352342BB5E367DFDCF2EA2536C75139FC2
015B1040F8106A0A97B8191D0862142EBBEAF67D1C740AC935CE50AD5988B8C4
B7C4B146E9A0BEEE8D00112BB3FD6C717EB7B1311538C90C9205295C36556BD5
2A91D4DFCDDEE2E7E1A65036AB6467A014A7D2F4CBDE0AAB4DE9887C985B7A03
F68B8643DC78309C57C79AAE0BDD6B06B196ABAD4EECF47879F1B4C88E130485
B013EE79DBB39F6C3D965F4975B4A47B5B8F5CAFA6E6A3E346348CAFC51B0790
D5D4EA300CA64785432BD99C914FC096684AC9B201AE554D5180931D9935997C
CD0AF41554F5C7CCCE73D5072D54A7E0262AA73246EA57AAC3CE70C469168BB1
2C5C6BBC41F7A685CAFB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.0: CMMI8 003.002
%%Title: CMMI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI8 known{/CMMI8 findfont dup/UniqueID known{dup
/UniqueID get 5087383 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI8 def
/FontBBox {-24 -250 1110 750 }readonly def
/UniqueID 5087383 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI8.) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 105 /i put
dup 114 /r put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBA9B440A6DD72BF8
97084C906B05FAD969086ED21AF0AA1471613182B26117D7494DD9F9270EF3ED
8DA4D957225F75D060237B6DAAD5A0AE3E702B3D1C437835B93B8AF1F9E7D966
E739CF3AD5E256F90286A34069E5BB4122F94F18F3485658D0D25B938522A879
8215A417CA2CBD20F71C5C5FCDE21EEA7BB27876D93BA667868A419287FE59BC
F538980597DBBA743DBBDBEBC61E3286DA7977833DC8BFC5E52FF5DF5EFD9A92
D070EB769E31E760A50FDE012DC0057835E8B9B046FCC83F1A0C40326AFB4E3A
0CC3BFA35FCC64E32854F32EB7DF10A19F95830136BBB8139DE1663B7FD790CE
464EA431AC109FCA0E03F3E0D355FAE20AC8774D6B1CE233C27680C77DDA7356
560A27C75993E8C980CD1E3B0683F7E8A05119B3AD567DAB4851B66E418687B7
F9B21B3BEF607918D5973421B68E65DFD8B6C8DFDCF1CAFE2637D365148EBCE3
FA4CC00052A2A522205EA3AE3461CEE02042E1A3F11467CB6C8C849B200CCE3D
0BC188EC7B934CBBC0AE2BF5DEA228181DBF0F774119F313516E7D97FF532621
9278F856C166CA6547504F34991D588A0631A5CD06363F3FEE9FA0772C783447
ECD0A200929CB58EBFB6B72008E4082B5D14AA560C24915B9463A92F38237886
C35CBB2D4DD6D0CA8C1D4EC46093041C6181C2F6586EE3E7D4E647A107B6DB23
DAD9AB5A0C2905455FE58075EFF6B48597078BFCCDD84812B98986F34987CE49
7EFB19814F2A58B0233A59331F6F8EB66401F04EE7B1ECAD9BC90A2BCEBE213D
DDDB1F75C83609ED6A669A0CED58B2E269E76ECF73616D94F13CF827C9BF354A
E82202988DCFE856786B8AE569AFF3105B55C72C58D310FFC0E10B2ABAC8DB06
40D5F72E54770E9DED1AF4616008595B8481E3D9AF4191CC9A5BFD9DDD01C9F1
FE7165D21E488DB40879E863D470CB31CA06E5B5F1F8C3CCE04B697CEB0F3557
ECAA358D2EC2B370519CE06138FA702314BA01F1F33881825EAE1230098BB3C9
59666983275CA4E8D9DB34979F86535577E79393A72F84B0F768FE8C92692907
15E9FE9894E98A0EBEA490CBC8C7E5A9F3E43B24C2C5A4BCD71DAAD3CC0B8B82
AC13933543E295C163F61C9FD18371CB514493F90BF7FB460C029B8DD2E2BF05
FD66B451DF277864DE1EE42100BF29E01A50258C2758F3EDE211BB3457B8243C
20BE72983FD6FA2581C5A953D94381E32E80D6D6095F2E93A5455C101BA71E8C
E560D4694E4C167EFA25FB1E9D214AEA745CE34CAA5468FAEF8F6BDB6C6BE8F4
3D58836C26A2392E4C4DECE284A90DDB3858A16D6135FED655A600929DE71605
6CA32F6851A2A6F71A9DF3D5D657593BB729CBCA2F4B059365B7263DC08AB211
9C547096E6427F6AA53CB2EB87DF0AFE2ABCDBD15D7EF228D3396413B83C6B4A
79E41F9BA55A2688F62A10472675E5658F151F9FD6634EC94EC0682C17448024
CC1633077C07A93E4DA8749D974FB8F4332B5DECF97D749C10DB60D4C90ACBFA
E65AE928C88BAE19234690EEABDB30BEDCEF2660D7464D5071058C30C572A2BC
7DEE5384BD7614A4BEC4C84E18CF7EC81C810256E8CE6520466C033E2A36D3D3
5D6074B3857415011D8D9D49A474D994571CDBB89AF92BEA879BEBAF67663F5C
17ACAE809C2231EDD0A76641BA52FA7B19A2798D54A4A9B62C42F9905851229F
2CEE0191C8AA5AC12BB0CE9E5E3E862683AB57DBB4AAD6AC0FA8BA4F408D41E0
755F72B82B7C18EC6B13995BF7AFD66AF4BA0EA7523DA8B75EE751744EBA9CA4
4E8BC1FB37734503A5B24FB9F2C2D07A47CFC477F02413D55BD7DC180B0344E8
50248801FA6BE26C97F397797F5F9DF762967E7CD92CCB8B2E587C92177619A4
BF8046CBC72C6E69DC78B8CB6B7381A290080EF59F5B9F29C1167B261C932E9D
010D2D14BB425D157F22BC0305770AECC5BC80000F8CCFB9930255A68F299ED9
D3B5B83A2CC00E3305EB281E1A7054734661B175C6CA0AF168790985F173DF03
A8693B677BAFE23C3CF833FF6463B136FC370E4F0C29E322DBEF637F62C33CD9
B0A8338FD67EC628E3BF2FCBF7CF0347D5CBA1DBE6DE878DD670176B85F69EF2
3C5CCA1BD2B8A385F113EF1CE522F5A6AE053B9C1E39408C9459DE3E7FE2C4ED
77F026B0081BB80D40185458139C16333EA27F43EF1204BFBF80BC5301B2A3AD
B10F7EFBB4F5B7E04DA1167F68BB6D4049440B0F57385FF0A95E72760C6A12F8
1335BB31CB74081FBAA319180DC00113CF50CC5A41D2E751E055DA1429CD75BB
0060C21CED634FDA106C49A12B356129D010E29F2919301AA7F80222AF3905ED
672FF85C9897A70241E8DDB9A53034B6BB44E140D9E739848E7A782F24B98AC8
00DA09EBE4532787E5CF3ED815705F659D8E52DC2C2D4949374A3BF192BEEB99
1D9A90A4F3250BF8A1FD40D91F5B34AF2CC561FD02FED712500B24330D87DA9E
4AA46B6E34BCB40B1F73A1DDE07E002B9478E9651D2BF85E67585B6ED812BE03
A594874A235B1C1840C4BF4BA6D863583D8C12DB49EF7F8CC24DCBB6B21FBCA9
378F3E2DC406291AB324571F76E0805DF8826090F0E8B50599CA58D124653D16
16C782B01C91A6F3DA6346482E3163D28D95EA49866360147296838A3FD0CC53
920F91D895F839CB61FFD2FBA296CA4C6304EEE579782AE5FD33D0FA652BA7E2
CEC7C01DD0D3E0D56E6177EE5F609A396F7FC8EADABB465DBA7F384E215C4DCB
E64F807A50A461545107F9C3F7D7CC7D33E6EBD6D9228B1DCBFEF160703E6129
0DCED8D45DD54E2A36E698A616E7906A50901E453BDB2A363EB77144E9EA6F2B
6BD927495EB0EBA5755165707CCFBF8759CE5856881117C7F3EF6D494EDDA7EF
E499BCA56C86467AC573DA9C2724FCC74BEB331E736FB093DCB67DAD42296655
415D110F2729BD1D55E5C9CCE2E724116F45FB2E66AE0F790258851A5C808762
68B8A110BD326F8D3EC45004E7CC08DA42F6CB80A6B6E7C286F139534A275BCD
2F812993DD9C9A1AEB5E7E4BDB4805DFF3A7030263AB060C9B74F0C25C5B9005
965284884450CC2815DF28D5F9B0496DC7A3AA85E1E42741E1538797175C28D9
FD904699C771FB066397FFDEE8E8DD1ABBDF67E6BFEF95BB700A7C1BA91354C5
42EC3864F6E19B379E79A1CC3C786C0DA146C6B0B8E507ED58DBB1F12F613A98
0E1F8967991427A22ED323901C4B83336CD343212131E8B59C2F5D232702ACC5
7891BFD4EBA5D0FA35AEF9F3520CA82D121BF6885BBDAF15248A9E4649ADB94D
0735CC4D14E1D7275427D00C8E709579612F7F74DB6FC218C10C278CC63E2AE2
37EC996B10C0229D687F0DB5E38A8C4DAFB3DD8A9E7ED37186FEFC97790A1EA6
636A88FA9FB4D282234BAAD301A1F3AD33F252C5EEC49410562FC52809CEC466
A0F6D148E9AF19D6DA2337C8283FBFF6005C37AAEB0B7F7217A8DC6F949B9984
72DEF163E4D5ECE4288404448C96A7FF0AC76F732D50AD63A1D286C9180E80E7
C218B1F48E3034FCABA6BF262CEECC284AC29E9F3CA1CFC1639A681ED66C1FBA
666F073D45C84A286E05FF809D4764FE819B6A330E73695CCF2F448B4D4EB4B3
F63E94EC289807A2F9A1159CF328C002B467B19D6E9454CCE36FC19E0A214190
B251818DD456EF658B0398E275514B72D9C1DA5F806EABCF1DD56BC025D69FC8
A0C2FAAC1892B64D2AF79EA2F57F103CA623E440307600D50E783FAA998EBD40
51D23A0CEFF8D8649B48B982DC38D613F882DCCAE5F51233A641B3CFD783F830
D984F116DEA3ED8F0D3369AE629A006BAD4523F8E3C7C6B39A6C972508B67AE9
32613F28CCFFC4BBC86CF31A0C25C786554F7A1F3DE97F5CFD1A941F775067A4
784385E2D02EE1FF886701B1E87D966D3F500E15591A5012E645837FE2DBE3E6
A3D375C6CA0ADBF96B33EC3FCFFFD888D7344B31D40427B8A8BED0FEC6FBE038
1FB5F0714C4B5A0E607E215B5B7F76ACF0FEAA4C9790EB7E13C0E3933B7C63FE
5B934EA34F4B741C3667BF1735C685CECA63507E6FB9EB06AA010311F12AC1AB
4CE3FE8D1EA1EDB3C700BEBA516FC71D740B1CA1A60D4578003973CC3EE21DB1
58FB1CF7E2EAEB2A4A6C742EBC3575EE6378531C6EFA6E6986E68B8E25CEEA67
A59623FC1ED2ADDA9D72DBA627D179E47DC7F5551E07EA4D54ADB6CC8109D340
7279F288E552EFD79C17DA3431E53EED66D16F24BF86468C2FE7EFF421560500
12FB048D6CE2F370BE4E560F8B4AA12362ACFEBC839351C1D5100C625B14CFDC
747B66082D4AD5474A63EA0054E9C3E6295AF6B133348487B0471395857F4B73
4BF8337DCE2FE2E1A4EAD7E7BEDC822BDDCE42B79B308C11897C98E3ADE253CD
09CEEEC0CB1DB66AB072E36E1E04911F40B535B0FD85982C21B8A587D65C38D2
DBC5A07A0A26DFFF7460F10781069490AC1B611CF7312A14B4AA6005A4582C5D
336BCC30EB47749193BE8D457A43F54204B070DF5AC2057B6437E23705C7FE8F
7BB150560F7044BE3E48EFDDA539FEEFB0D2A7856CD4E405FCE0F5EB190D91AE
578E2EDEB9ECA218573BB1A8EF116043A27DD17A4047BCCC7C5F3C563A910778
45ABCA32C7347E6180ACC86F9D665FF025DD8AF514FC3724B5C3510F3C37E0AC
5101D1667C6ED4E8F37F06CC2BDF66CB5A9FB7C52CAD26344FD1557571336A1E
1E340EBA149B4EB99016D1A411FB874914AAB2A415CE3F5FDFBBF5AFD7959B9F
CB127BDC68D2A2F3F07FF3D4FF32046C0371CD2E68A6471E46B08413FC3C7A80
A107EEE57979DB387B2206D2810DB310B7232B2DAA385256C8A58964B512003F
A0C24ED21809E2576229627278118107B9C32345C1EE8C0CFB452CA362379369
31320DEB5371037AFAD093B61E8AC7A6DCF7D49C7F8EC32DC0ECEAFD7E892810
039570D2956289B15E078C2545911BF535F72F7DAC619BBDEEFA855BBAA81704
18F7D351B0936357085A32157AD8E27438A58B2397D69264E748B0B8D01B33F4
D04DC59326A7DED39E247A1C1A1AE49382BDBDE9478A1CB48F88BDF14A268B40
A40B9FBFC4C87FD3DF1EB2464C3C14E36CA41E09EE0A9B75FEB0769F9ECEB1BA
EBF73B818427FACDBC33BB95B9654F31C59A766E931C698A8608F15290FCDBD3
5C535D9036A19CB7B55BF54E96F9B2206DC71624E2E55FE632FDFDEC8757AEA3
1D83D190ABED5E7A7AAE2F41FCEBC7C18626BF58F9E9F02FBAE0C8AA85E9DB21
A3D8907522DCBAE4923C6A2A09FD2F08FE32215C544AB577B337D929E625E704
E041C2381AFCFEA37F3133B6CA20093EFD457C772E428325E56C9CBCC447EF9A
05A8C3F28017DD4FFACC51B38E4896C5044266EAB4EB7C13FE855E790DCF8A17
B61B1D30DD866BC57397EF6297C4891451FD6A5C6AD6D7446F58F56A68650908
224D9F4C31C6906FD29BB51DC947465B808438E6260325752808963C808A4AAD
60422ADD62CAF315F6AE92FACEC55D5B682089AC0BC051CE1E2C06A3874736CF
0DB5F7C8F178479E4F11665402781D80397C75456F5CDF0A4F382A19EC6AD64F
71A9275264800E178F212269154DD8352167C57EBC0A38BE794AAD1601C8E541
7E1AB8E969A76E1EB4092644958FEA2AD29635E70C4DFE2EB0D9B3E1644FAAD9
B27AD5466EFAC724718962B62E7B8C32F412B69DFFEB792587D571FB5C591D95
4CD441662CD1B07595E245FA537FA9EB5A20A97E5C9251EED22C9961B48B25ED
85BB7524F635F9CBA3714C6D60A6BF920C45A64F4C366C1F9D22F53084997C9A
EFE2D79FBE3347111F5093E271DB7E3770B35D253DAF93653F6A23FA145AD775
AF11E188EA0428137D9A14542E3EDA6F7B2E5AA86C9F3D3649A85ED2F020C696
01A339FE6D7E42BC548C8F92A4E3809C67A986C99418772403D16D0E8662595A
1F37563671D6DA0F36CAC99DAA8FEA215DF7D45E61314915A30A22FCA86A50D5
2FF2EF08E240F9FAC030D92BDFBE40F1972DF413E6B452024CD11792BFDAA2D7
C82716528AD4B3D637BB43E748336DCC86A952BE96F1EA423E31340FCACDC1EB
02EE932F58734AF3A5B2279361B63F1D824EE3BA9F4D2EC7B33A300A1CE8CA43
24616444176DB8099D85AC68329B1F85E4B5B16F3B396FE2AE7774F3065D0203
AA140DC128D6F935C44733EF585F89E8639A2096A225A2E5E49D447D8AF9FD44
CF6C1BAD5C5E5262AECC5543EC8199B00B72BE32A0F110F64A1D0D5CCEF38FD1
155D6198E9A343702F8ECF5052333272CAC2FE016681E12745CBE14E1065EFD5
407DA3686080989F6F6D650A9F1EB3A813B070C30C0D3B4A1E9C206E2E4DFD51
D8DCBE9AECF956640A2E79F1B4FD0EB8E0449AE1B8FFEBC43275743B4D7F6605
0673B61EB3189E74F51F3780A91E6A5C6464C8CF7D563D9958D46F39B1A12087
6BBD4898BA9ABA468AE1F24115891FD3CBC2195F75958E26DF8BF1B93F7B521A
C12112237AB23A8E5A7B7D0DC4C53692B35F3CD813EB463C0BD3A6486B0476C6
3B36DA71FE512E5745D097FD4AF5D056E434DEE2AF926B2EE79F7FC4FEFD4130
BB4B4BE01E5C720325A4884507CB51CBA4FFB615B78A4182444F0ECBE4161A58
E86FE1DA2E39C2BECBCF1F1D7B9B776A26078FC252128FA8108CB83F673CFD37
CCDA493234FB93E1550EF8D2DC049ED95B00A8A57834B024B277D3DF062E748C
B61F183F2D72AD075474F8165528CE75E4F40B38B0FAAE45751C1907F8D31619
E88EAB02EEED415F3EE3BC5BECC6AF565D34E0BA2958FF337A2B06012DD1858E
C53DE52C108BD5AAB76C882198C72CDCC958D68EA8FD26F76F04EC1A08B2AC3F
A6D0E8724D2656555DBC0C8C42A3E22ACA7E1BC8E9F897D9AB692E0FB9EC32EC
59E31CCA4516A3C3BFD5411BAC3DEDCE374D48681CE7D67DEAB93F5B5C5290AC
FEB29C5EA2C98095692873D36C7DA24847B66F31E4CA4C7AE5C79D7CE4F0532B
78620582E3731A2A6533A03E7155B33E7CD142FE79F72721862EDB24959B9783
F834CB616FFCB2A23497BA6D99AE34DC459A2F7B3E4DA2B54BED118ADCD92178
66C40F4E60F6E1327D5DBCA645A2A7C770807E6D7E47E1265C753F8793BD2D1E
BDCD749CC24D4AF9315A93F01180A0F9A7F420DA1B87664DA5FD967131273271
9DCC45C3D57EB9B8AF14771E8E751D88B98D2FFDC72F5011D402EC34FD010ACF
D3B0660304725191D64FEE106253FCB3470F1A16EB7B45C1489D3534BF94F740
C2781DAFA5E8A9E7B25A85BD7935DF3ADDE08C960E283D8FC3976FDB4085DBB4
B6B35FB239C28C785B18BE4FC98F3A5F410F562DB5FCA04E8074E4E790F4265E
F88117B3D0833AFAE6E8B8A71D7731BA6F14FD6F217EDA3F8CC687A494FC3914
B84FDC37C8C335AB1E7E0BEC7FB6B7A595C50CF8F0080C8D461BCB8B579A5155
F963B6587873FA31C3A6572740C63EFBE58A2EBB723B7517D2A243F6CB08A038
54F4DF0F6692022B2EE8C6F6B73735ED3166BAC58D9216A06EA6FC7B63B20031
D0F0F99D83D9030B413C2360DD2C553E34BD67851B743C3FDA676AD63C5BD759
9131358C6BCDF05FCC048F4EBB9005899ACDD8E9EC9BB8C5A08E83485047D263
0ED69B4D1869A38068FDA03524022A1D32FA2AE0BF7785FCA8F089152A57EB8D
5467C28AD44E890380CEA0B0E0CD0F6427F2C3BC1A5257BF03D902BE94A449C5
EB8F33DD607BB4E0A1A7A24431E1DC2F03596EB2039CC1A9D524E10B374E34A6
4DFE6694F9E158DD6678BCB0B56BFF435FC4F5EC442E14391B45178DDA235B7A
07AB6EA76230B60456344BDB08C929F9453553452C97E016C26C11B68186024C
D1AF6C638EF54E26AA88856FAF1FA9A0DC5A9EFB7130EE72EB3313510EDB1DF4
8D8E512036A986387D8E96689E912149A342974F559E7CA473A1FD2E01CB1197
990EDF8444CC83F1AF738200D6B01348FC84249D77FD2C3792BE507B455AA8C4
8A47C53FF9832AE74389132337E4FEB6F45B5BB29D6F597BA179C6592145F301
A46ACFAB07818BBBF40FFCBD118D4DD0F87D65E1D0E9B88EC830AFE34BAD1526
2CE90D193D88877AE17FF093AFF181232A335E7A2B13520FE2DFDF2600CDDAC6
68C0665D9A85BE2D2CB92AA47DBC9DC58C73FE498C0188AB7FECB942C019740E
545F68F08610E908AD44F0692AB573634DB703EC5B7AEB112B68ACBEB1C54F88
D715C1F56885B3EA03D98953EDB5430B34BCB70C0A59376FB1AEB72D084BA9D9
A56BFCF3CBFC04947FF9671DE2CA91DAF56190E972C6B15FE334538B8B10694C
B6A53AC7C2EF1D24A9F3B062CADE2397239AD9E408F60AB24DC7B486F8C0822D
17889A326B96D7F4640579B27A1655D7FE4BBF446625551471A5FE6EE58E7A39
72F1797DB375263C29E1F5D21031EFF6D7F700A567FDFF049626B8BD13B00D86
8231293540610326FDE796F44EB75C5301DD14E0D1822E556EAEF6AC4F0ACCB0
5F028409AE9EF9466F3DD2704FAFE327C842DAEAFB7FC1C7476830E0AA40152E
0AA32C63D6DBA76ED872397E7E185874ACDF197331F963F838A2EFE3FB2598E5
332654128904104E263866DC27F39E04C6688067F1D4D178B1314B6491F574CF
9853F1B99E9C22EA5F3E64BDE1830C9C663EDF2D49E4D5E3E30A609A1168F98B
BB3D9BB496CAD6E094692CB921093E990B05A3E144504BAAC853210FC7A4D261
0A0A2159DC0AF442E34D1F8D2FD22173
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.0: CMMI12 003.002
%%Title: CMMI12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI12 known{/CMMI12 findfont dup/UniqueID known{dup
/UniqueID get 5087386 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI12 def
/FontBBox {-31 -250 1026 750 }readonly def
/UniqueID 5087386 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI12.) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 18 /theta put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBFE3573BF464E2BE
882A715BE109B49A15C32F62CF5C10257E5EA12C24F72137EB63297C28625AC3
2274038691582D6D75FE8F895A0813982793297E49CC9B54053BA2ABD429156A
7FFCD7B19DAA44E2107720921B74185AE507AC33141819511A6AC20BC20FB541
0B5AAEC5743673E9E39C1976D5E6EB4E4D8E2B31BEA302E5AF1B2FBCEC6D9E69
987970648B9276232093695D55A806D87648B1749CB537E78BB08AA83A5001F7
609CD1D17FFA1043EB3807AF0B596AF38C91A9675E2A53196FEF45849C95F7DC
182A5EC0EC4435A8A4B6E1CDBF9A5AF457564EA72BF85228EB6FD244F2511F5A
CA9B71A65D53CC06EF5F7EC3A85106139A4D312378BC22183C09A229577B793A
1B7422611C03E84BF809F46C62CE52D3AE29CE01C32B202ACDAA5B72733EB0AE
C31D7EF7BA88D2D14F85313F7A8B9B7A5B124B03AB923744D336C969E5CE304D
3AD977A46664479EDEFB69F113024E761C05FA48A54072DF9E12C2F352ACB3E6
D04F6EEFFDE209E7FA3DA22E5B1D1409461F4286B7F4F8251B44E5CB7805762E
E129FF4A06A7458F3191926B1CAF70E32C6571AD2DC07C34FF62840896F4D200
761B1A7FA356526D1E3AB4C542AF13623BAEB9F61B1BEEF79A9205B1FEFDAE24
8799D516A9ACC30BC0139C63C9A0523E9D5439213B67D490C96F902958779B8F
68BD8E9FDDCE8A3A2E35877DB6C94B7612382ED8F218EB1157D2ADD090A2448D
10B99FBC9211C5629ED1C61C74FE93041E5AA03EA4AC3FFDA00C2B6E719CFAA4
262FE17F66804A6B54D3669836EE4367D2A2991580C5564463C973CA0DA38AC6
922716E13B4A807B50304B8826CEFEAA47C305FC07EB2AF25FA7945797237B16
56CDE17AB0834F5C97E0CC5741B061C6FF3A8DD1A79B9A173B66A6A750538E26
32FBC92E75BA15CFFE22A7302F47908547007402569158F62C29BA2956534FEA
7DACF1E507AC309DAE8C325F2A6023D2FBD81EF42146BFCE6A16A6310A650460
7B07BB7647C8760FADDF0DBBCD3DA6CC4645D1732DB3A22D8B76E1D2D48E4D4A
46F4BEB80CE65F3517283A1AE08391FD1C10ED452133706BC6725AABC80107FD
754A8BA47B0281D479F052CE26A723EFFACB79B213041A536542AB334769A2BF
88505D82C498ABDD5A73EB539530F47CAC52825D16A969C8BB56D4A7F2830B8F
CB63B92B576E7BD922A4B25E634751F8A3B7C4EBAFCB373EDC8B8281B1D1371A
7844E9AD990CFF09F0D7ED73A5CF873D2D5C9E8A9923CFA31E1A4B4CCCC40760
8B3AC8FC3C88BC08BD7407725281BB879A1A822D94997826418F1B89D303F2C0
BE7A0102E6F529630CBF1BC5BF3E4578C164A3DDE45E62A957EF3FB7F0FBBA6B
CA1E79A1ED195B6A11CFB345B663C5E72FA55D80476F604F6C4257B51686AE25
8F7D159FE605DDA0AC74BAA5034F29FFFD403070013C6E2D8EF6A0990D91173B
D5A3AEB98B64E412991505C3CB7C2CDE13C091FEB3DFBCAF30C4C19511102300
135BD5D444BB55692013F52056908DFAB2ABFACE81A58423ACEC59344CEF7D4A
C5A3EFFFFF70759BC3E593D878281225060B97D1BEE6B26EED90571FEAFA1812
1115C0EEC892F5DE6FDD68321A0B3F10A2D771B79BD85476AF6018472A499A86
07D64CFF4550866AFE590C471C80EB12CB3A989A60BC7BED39097C12D9286E39
14C7952C4C64820B4DE44A1827B7B0B535244E93FDB80036D6332F90F95B472D
7031E7E3819E881BD0313CFA112EB3AAE943C99C47635CCA7E34DC0306C04E5D
2E9F60FF037EB11602BE74E8E6B711392E866E3E55D988F7C856417A2B9C186D
639819B4786D039B77F8578EF63C088FF28BD08D8353031445C8498A8F445BC3
D08923D32AC04BF3CAFEFCCC1E77EA894F4E846F47EF62D6841B8D8576FEAE8F
90044626869D04D61D64D56E8C51AF8C18D6CC3FEF3B6C4F7D56FE3260354948
10104F69B117FB8269292579A7D52FED688C663B643D8D99F13956612271073E
1A337AED059B7A93819A28CDF01569CBEB51069D22ADAE25C47355560F402B2E
8C9900DA82B79C64497C8494F42FABE5AC41791C2010D98FB7E593C744F250DC
D837DB0EAA4F75D0016970F3AE8359878A08CF9A697A06C5EA945819151265B9
1A12122B98F79185DF852257BB4798E7DC03712EA6ED34F6E6AE1476788DBC33
9229FADB8D581BE1A63F596698DBD6DB98A092F67197A4FD4A50B648F2691875
EE2495D6BB310078F516785A0CEC7EB6E8305FDBAEB1D15690409FE32DD9CFAE
DBD3866FB63EBCAAB73E3E4BE5D7F3AA44793938AAF3F8341683F0790F1D46A3
60CE083F9BEDDA22E0639A92393960F86602216FA51E2754BC2F4CD0BDECE3D8
FFAB7E0E49613DD4956C9A10AEA798BDA1F756C755BEC12147ADECAB0FB73B7D
203A11D84DD2AB5AA98FD38C1C2573570FD49A4924A94A106D2A7D850E793608
FB135853E8C4204441CDBE697FD0CB330B1C3596F32D2BCBF263237EAB362D09
DA6F531B40384DC91F30674760CA7B64BA1968F6A7FC9EBEF431A1AFC5E76D7F
2D44DCB7F61C7F6B16196B3E8B47343F572DBA8B8B21B43E35BB6B2DD5C7982D
244FD4304D254D6CCB5E8CF70E77F50812F41A988EEB3B26BF0F6F69BBA18077
31134B5A5823D10FEF6201D045AEE7A24E0F25376E9FC66340C56C05F6CD810B
724D85CC4BB8D789834A447CBBA159565D08BA5793D8599035BB5063271518E8
F6C50E7DCE71B1D186270DDC860C6DC0CD506010EB5B1FDF6BE47A9A18CC15D7
D657E58BED9EECAD5CE5D49F63139A39BC52C6584BB2C3264D51BD584B40F8EA
AFCD8B83F548594386EB2B05CE803105E84931DC6E7A1398073D48E130E0D907
CD0F1ECC3254EDF5D4DDBF44415DC9BA66C673820CDB0FDF033D59BE2B5EFCEF
01FF9D33EDC88F8D522E07F1689D024DBCD09A16A63519E1764C8630FF36058D
CFC07027E0ECDA01E0E85B166C613B22F587B4D355EB018BA93E92A36007B4DA
287FF5A91F7D8A0EDF5554ACCF45AC8066E88865C5692E63EB99CAC81367B605
8E6C19EB98EBFE0D2D161B447B9A70CDD1122C7B78A413369016E6D8481E2AE9
9AA97B5DD0ACC9B0820F7742CEB2F46F89F3E2092621969A88DC0156B4F941A1
6BF1546D4B136657C47B082A8A35FE96016BAF3D9679B8C32EDDD6AE6DF3BFB5
7854074FA019707FC22BFA82299E72ADF9A980AE29A8E2434277E58B01F6B03C
192E1E25DADD49F6E3F69799AE62B56E00B60A031BF8721DB8B2CB6D4A4C15CA
AB1FDE010AB7DC0DDED977389B101B8E53A949222FAA126656E02817DD32B0D4
A49516CEC2B97EA7C78FD66229B044EB92F502384BCC6CCDFFF995EABE3BB7A9
50D5D1AED861E7D3BA8D333026C673C5762712E763E59261426044583D789C67
A606B96F97663F92BF104CE02FBFDFC521EC0D6670B7D4F85A229F51426DE912
3B729C4A535FB7C88D0A5E78074751B58885DD6BDD2DD9E9C83F105E8CF63DDF
CA7DB39D0319CA7CC2E73F42747F007574DE25AE1538B4D493D22D0D5F0F80C6
5F6FA3937C8391DE2F0116F81DB2DB0EF751EC838A7F85F163A6F48804E84B96
8D715EF25B7E2A5CAECC558D80F421052A1D698F3B8452AC27E30A4E6226E3CE
084C8A83ADA0818A110923CF7AC7AD4CB92AE4ABBE0A9EC1FF935FD02774C1F7
92A278E513012AD17722A23C55EF82E18F8847B5CCE47F4FE3EC508BA563F7B2
AE56C94285A18DED4D432FB0CEFC05A20BC17DDF9FF919C724810A8ED7358A27
97EC93C1A13C443A91947FE1F6F528EA7B628917FA7E554A1D7B31ED46C5ABCF
92BA57961C8876DB4041305EBB029B03D8351D5E2819FF87E97ED214D8F1CEF5
7F7668DDE223721C0B810F4A4AC81CA4EAC86EAE546E1B15D91E626FB9A31824
5BFF17C4E79FD56ADBF6DBF01BAF6453A81EBDCB38A5FC0FD0FF0646B3B0D199
13E2E59A1B5CAB6DE5329BE389BA0E2A2AB55CA40B711ED746C24F1E48892E76
6DACF7DA163CDC90CF076763008E7A899870CDED5A80758E6177BE6B93B07EB1
5800A3BF7B9AAC3FA825CE594EF5B7546B181375FA8F37608DF17856D2F8EBD5
6030A9E6F6BEAF224AD2AEF76D03B023E2FCB922CB8E3C6816AABB61FE6E4F83
F21B4935102C860ECA03DBEFCA461F0E5B93E5A8D18440BCF7D1D6252A24CB6E
A64FDAC8B67C4888519AA368D9C4A8C08C7155DF5BACD75C5196C571C3C456C4
7CE8D90215FA6EE8CDD72C48740F7F5930EC3632DB63A9C8D2DA125088C0F05A
9FC83D16B7F53163F4EB6FF372C6C3115F1E68EB35967D11126EDEDF0BF80817
E68A698183B3EB0A207DB43786E1B9D289359D75AD5E465328CAA90E712C2962
AE2A466173F2FF30EB535A6054BB0B875DC8552C16B49DF17CF84D98D35497BD
F55E273FCBB0C735899529A69990E09149FBD2DDE64B7FA8D50AE83925DF03C8
0B63EA158FBABB12A028803DA4B9DD6C48C0FEC469C4E730729F4BB420D5B003
1918B4AE9CF35CFD31E8E62A44C0484E3D00143BF1D330235E821E5CFEAB4D31
7CB4604DB1F310457FCF9075A3527279644D908DE847CCD00B6F50DBDEF91D3E
38238CAF550FDCABA2C3A46237218DCC5A09AFAF69997E1EBDA7EFE6FC99ECC8
5D4AFD5EE35FE2346BE79B499EC8EC436868154A947D13BC02C780EBA4B9E64F
3026F1BF5DC1F8D64FEA1281EA40B4BC355638A3A59BD9055BCBB232FA45EA0B
B405131B64F105814019BC55466EE78E9E9ABB62DB30EA452F7EFD7196C76A85
15B2CFCD89922CADC0F392B0C54A231F3999AEFB53C24EB0C63B0C8A1A1ABB6B
AAB2F93E5ECC7AB90EADA320E918106BAAFC1F8C425C617639984629018BA674
6FF4F338AC43E23BC3740542911C058D43A49A11CB3A0CC8E3088BB5BA6048D6
CC2AD250DE956BFBE83BB24C945C20D9C22E7105983F284EF478F9B68BFB0322
EEB7D62802CBAAEFF1C2332159DCC7243EA40CE15C734EA905E04C476B178B82
A08ABCB0B86A7330C75E62EE7844C9E22DDB013ADDF20AFE08122EE1B930A81D
806A0F8CC584CB7FF5F56F9B35E5FF78FD93E7E4A40C64537464EAA275FE88F4
461FC6A467C8A69B9A9FBC10D44AC1B753D313A8E7D97F5FAEB60F82855658D1
4DCEE043C8FCDFD8A29DD091F3BA55874A458B2B8989F35055C72FC411382361
9AADC717E602B48D7C9521D3971A6F7EB19D539445DDE9EFBC5B58FA9E5E426C
172C45CDA24985FC4632287FC3B15849DEB56F5A061993AB10A6BC59868534E6
69888175053108B77E4978D971B4EC57224C0F93EEA4C15AE92254140A94704E
ED5666FC06C5341F643F779CC88A9E81891565C63B6F7F6286E664F4E0A48690
356DC96F1B98026C563700772485B83BFA06435D4E0793EF822F423C93FBACA0
E5D889D2B76771C6F0EE997A5DB43C2F6921132890406E3C33F6F159B14C5D78
7C151BDFFDD02B697315F191B5490073EB418A4FF2A398C68D44F0CD1B87CF9C
B52F12728B72F94D752D23151196A256908135C87991E508B8906CE2539DCA8A
31F86809C8C6C18A09F6129BD7CDC6B37E76B648788056851F22BD3E3B5772FF
EC01D822B57FFDB3BAE624F05531292641FD6A7E3666152D18F6C653048DD7D7
98A942C840C4A0FA662F260B21C64214152BB86F03662A330109C5AC0A5EBA30
C6201F558858130703DF76AF4FBBEE069BDE45C0D9467077D85FFED4F9BA9C61
AED87D67CDCA453A6528AC5BA153E1039D9CCC556CEA5CBB542265FF54A1B208
E0E13740E7E7C26AA00AEE909F8F3ADC2726081A744D8EF6BB711BF5F611A900
76F91C26A338DA13A7160A9F42410CCEB3190000D963D036FDA05A29F598EF40
8FAE6F8E7E6F50C99C3304A573501C13A00023085F057DF331E3354CBE65D573
CAE73BF15B3B96B502E0AAF2B4A86237E98A997AAEFFF4227D5A26E8972C48E7
761F430733E6EF8AB2D903C17FAFBFA21C25F8A0AC157D397BF3CC1AE7598F0A
2BE4FB46B29443CE57F41FD5F91122E9D86F903E94D5B55E2BB95949C156D138
89883BEFD634311F9280C7F028DCA6408D3A682DF5B55B9F7ABF08F019190F60
D39E4F0E80F0594235B09A5320109638B938633A2C196E4ED2B43DCD8643C3CF
C6123B076B7F73352F906D96FDE0FBF50CCCA432712C574D5857838BAC30B485
D25024EB254A7EFE57D1DF0892C275CDB3DF77602F0FED0FAEBC644BCACA04B8
B424DB125E487794CAB36E01B5E1A26F5E1E97A739AA36D77A12F5B45338EB39
AF36CEBDED55DCBFCF497FD475FC6BAB5530AD6153C6BD982564EE8712185F1F
D5EA7ADF4104661168A01994C1FD773A50C8AD6A3E4D332E4D59521BB8BBC6C3
866EB4AC3EA4532477E6CBF6BBF0860031C3B916AA25E3492670EA67F55CF4FD
207C684A0DDB6F4AD21B2909CBA71BCE2E762012B0927BA72367A6AE0AF87F73
756C9BC85E4EDE35317E2CCCD138C02C7A8013AFDC1A48C3A4BB8EF257BDEEA7
60E012F54D12D31D18DC59D5E526F12567B8688B4B67E16B56713870300016BD
A3B9DA87FDC865246AF8E94316799110D86B1DDADB8A673402D4226C519C058A
1D1E5A5778584FC28AF12819B1924060BC4F54B1054EA6AB0149E04B8C4302D4
A56D8A347EB5D3D2A0E12CF7E35059BDB53D9FF6BD25F6D9619BC4669CFC1048
C6C9978B8751B840F27D82A69075832BE59F55C1737CBB1220FB8FF691FDBDF3
03BD7D225A9372AC221C38245E48320E1CCF898D9EEDD678E5B8C65B7F588321
1A3953EEB9B39EA9A8CB72DB08C3E9234DFFF5FDF9DF804C021D57E97DA7622B
97F4CB6E0EB640E0DC9EA15C5193F92A3A7565F4C7A4C9CC327F7CD2C44900AE
D9E76FFE62FC37FA376E77131B566AE67C3E09DA80F198BBB995EE8FA47EEDB8
4B467C6C7DB8AEA745CF8C56B8BE56534E9C56FCB2B7006426DFE93D728FA4CF
94F131C549814E54ECE7C914C5FE8E4961D3437CE7475D03534B62650F551D97
201C794AA877445DBEB11C85ADF6119B05360700F8CEDE4766E3A1D7A35CDDC7
9ABF7C619E3868A39D1852DBE1EEAF5D7898C78323873AC005542B68C43C5000
CC58F675EB595F87C879694751494676465891E8A897158B481F11A171CCBBD7
29603F00210CFD7FF31FE3D273933ECC34AFBCC4108D9B76D9ECE63EA06CF939
4799092A54A749DACB82C1424E9879672C8BC084C360014C9C1B6D5D65C68AED
66CE329C3AD712C0A36BE7EF03FDF339CAA2E0336D387A693B1DFAB5D5164E31
14755A158168962C9B399F8F1DF3FF5060D7464D5071058C30C572A2BC7DEE53
84BD7614A4BEC4C84E18CF7EC81C811724463BD46CECA5FB57B0F55EAE20CC74
6AD815D1897B037C197D2456797B992C20C70B663BF99FE28C513B4E221C8E12
49779F8C0AE8517048ADDF7CDF0D698E3EFE60071C4997B7F5EF12B6CB65390C
224F13FBB99FFC034C0710F05019899689B6D3350BBA65C7CE7C2AB03D81B9A5
5F3D65E4D462DAB189006669F7390A78A1B8908A4C913B15DB8827DFF15BB9A4
A6037DDB643103B937257A7DAB025F09D53FBBC2BCB6B0BCD8D56B2B2784E498
1F6CF8470DCC892AD0CFE11578718948BABF9C1427084643B66BB9181094E29D
5FBE37708E1D8A6B7518A96876844CB66954227A7A6AF28DD075A462526DD5D6
40EECC56FA366106E55C7068997B54B7F0D03AC1AD45D28C67C7ECA99DBEDB1C
E18A79C353113E2E05B837E703278B202112B1C69E42A69D64B62F0E7D8F7E5B
C1F93F0F99EC20EF312046F4B0CD7DAB31E422070B629A7FA96583CF3F1519CD
CF08806F40ACD7BB5C960F21E9DA7FB3C72CBA0801ADE83DF738A4EC94F2977D
2B95A166BA4EA8C6F489A6B992DFEA31C5C24F873E1C41DCDE6D209855BCB17A
923C7E3BF0940482DACD989FE0E2E3A714163917EEFBABF4EA368B113AAF4830
8C1ADCEC854CC7584F7F813E84FBAC4EA2F4525F531A72F5698FCC45131E299E
8FB344FC7048964A4AF6E1D7D8A9F4D451BB6E4E1D3EC10357DD7D3544A63DD7
49458EACB7769BF35BCC21659AD265FFFE01F4359C0DC03128B8047A25B25866
284EE5D461364FC50D8D6281564D713A2045DD0A82386B0007561B3A4EA42DA2
562381B523E523880BFEE76F4528F036C41631C0F3E9CCC93BEABF8F07A54FF5
B85ABD87C3FFACF78C97D5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.0: CMBX12 003.002
%%Title: CMBX12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX12 known{/CMBX12 findfont dup/UniqueID known{dup
/UniqueID get 5000769 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX12 def
/FontBBox {-53 -251 1139 750 }readonly def
/UniqueID 5000769 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX12.) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /fl put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 69 /E put
dup 73 /I put
dup 76 /L put
dup 80 /P put
dup 82 /R put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43A151FEE81296FBE
0CF37DF6A338C826464BA5198991445EC4BE80971DB687336AE8F74B516E333D
2D8AB74D362C559AAE6ACFAE49AEEF4F52E28C869222C1301D041E7A0BC1B608
1BF728EF9E98F3A12EB2714E7F16B14E055FE1FA0EEFB058860ACADEDA9D0E4C
42E3C6F1E4869471BFAA3760175F3FBD842755A9D7847EBF605F18293B42F557
FBE2715002669091BB033E1AAD657532F34F7C66E4F04D63ABB07E6CB9D9AEAE
78EDE8B79DD9BC87A1FF445EAA05B5572BB880E69F4DE1F82D7F0E9980AB0C18
22C448B0B1722D3CC33C56FF287CECB80658B3AF5E7675BE82CEFF3DAD5942EE
A03C955FF979E41E54BCFB5316A9AB8945C403A73180D0961416EC9C92F49811
4B91BC4C788392994587517718521E416D469F69952149FF7F9224377EBA1065
4A727BF806A112A7B45B0A1BA1D5A23683960575368D9EAC8C04753BF7465AF7
95F25C258C63E4FDFFD0B412FD381946AA38C0B961652BCEC30322C47BF4755D
9F91880688AF066E32FFB22E1A52DE741307AD3ED830D6BAA1D1F562919666DC
5E8FD9862AC8600B0AE0BC7FC779252AAC57248744ACC8A8AAFA836BCF09B0DF
9253DFBB1CB77EA8A59D42D1B18FF25E9AED72FA62FEC3F126F030F5D7DED9C3
CF60FE890BA4A48E39E687BFFAEAB96AE542A6387F6624486037C8924002A511
BEE5FBFD780AC1D4BEC3FBC47A930BAD0280D444259528B6C565DE11DE36BB65
9BADC55C1EDA1A80458E98896D782DFB5C137897419602809F9BF8CA39F00C68
EFB9E076FB324C2963F23CBFED28B9EF70EAA4E4B903225D1F199A7162AB239A
D92D71C18B1B682D04C6A48926275BCB16D413B2A0E953E1257E0B12D8B717CE
2EC84CFBC046A4338A69F454A469B12118E562B4F56C5FFB3CA5D357513E6FFE
947A564B229C7FD873057D5C7CDF03E958294A1003B37D8DF565A70A00A3734B
0138AE5277D383D10C2BD853EF806D3CCDC47739F0E374A3DF3B63638B949ED6
4EC25869DC1C0B1F4DBDFFCC97382841D8F10F3635C792139A1EC462FDBA379C
BE0990CA2E70FE73137AFBBF30CA54954D7E7377CC50BDD780DDD4C7FDC77AD2
F3EB1169F14A0041F18160F43C24FAF556DB5D621709FBC544CE55424F7446D4
6AC07A51C8CD5161AB0AD5084A96FB35D77F1CA155147DEF8D7A590EA6939514
D4A226588295CE0007BA8A550895511C8D80BBE5CDFB8A50D249C3BDCA974415
F5557914A9B805782F399E4078DDB6264F1A49A9A5BA45E284A5196E9828EBA8
481D357B8D9E6ECA631A6204439FDFACE7D7E6A2392726107CB7D2517CD19A24
FBE592C119626DB221BBB635B6EB84845C16A9585282E34958B961F4A543AF9D
419B6A9105BF185FC767712D923437BE08A9C0EB92AB6792DBDC671029B6FCA6
7F717FCE379C0F3B51C6CF042A762ED04898FBB4B0105C3C4ADDDC18C51BAA3B
70A93666669547081D9246732CFF74C83EE90DA17F5B4F8BAF47FE4D81590988
2858C9B96071341FA0A0D23BDD4947FC9BC2297913CFBD4FD6CA4303AB3179AE
0203F1BD502065F90CE9BEA3B52DAFE4A29446082EA0E6B1D7AF1F31D0AD02CC
9A7FACE2CA86E5FE0F6A425B28A5940ECA306891CECDB3CFC7A5BBC76B5D9E8A
C754379ADE80B4D72CE493010317BF21A0CF4A0A55C1246218839DCA3F4D626D
1F4161D38F54AD5142C1CEE95C61D8BB10FAD4B772F4955777AFDE8AE5A837C2
A2BBB11D0BF5DA2E63D0B75ED421DBA9C789B281B01846B65DC572BA69591969
21265DB722AE86BD8CAA3D887C975A617ACEDDFB7AAB341F47532AC0F354A530
7662C089DA3939588774FFA16FC4A52555DED6D6F51DE718BF5F345C23C90198
17B77CB8B5D53A5CE7A79F3E286B6A59F3F6178AC8BF15C0A15C1A8A95D03B60
30EBE53DE328CE085CD9A1D49C69AA299C5B58B24334A546F6E274C1B534DC8F
3289553F560C2F81E413ADB92FA0E7DD1C2F39D5FD268EBA97AB7335ECF28257
96B4EADB7D0778706CB41C7E9C882760E7670936774A1088FFB2011115FDADB3
B69EBD5108760762521C25C968C3E282DC3400001AC8FB1EA27FF643E3025950
1D617BB8BB321281708E496277E11DD3AE0023DA9F25AD06B39C7CF527FED27B
57397E88D3DF70EE4FCCEFC8A0927D6B05517E571B3E70ECC99F3CBA32CCD4DE
B8BF22626B6C94FE65598A88AB90D238461EBD9A098DADEA4091AF1CDD7560EC
8E1B9BC2321686E1759E6B8A270C8CB4A254F7368039602EAEAB86ED21CDED91
8F2DB9889F46981C494C7EAF5E819B91C129F0740B8002B510014985E5791F59
B16879CC6521D8E9F1C4C1890AC85A78022BE614BEFF318AB2616F0C3F02405E
BB425D1555472A2642BA7686E431DC3FB8A1688B76660D9957C3FDE8D58109AC
21B1234C9DDF3F0FAF93BCF7B2F88A001F23162E1A13E5E9118D51B485B70A91
D0CBC39CF44413FD8686D9030782DAB58064F5B987E0402AF5B264B17BD31BD4
FDF63951BECD73ACA6138854EF35B062D01F33073850D9C09A818828C581241F
A625AB3638081DD0F00F946BE5450D38489CECEA4E66B4D85CC8AE0157E2AEE4
A22A9313829F24D573101D84CC1784D1CED7DFAD5DD966601370C6CCBB723082
A86BBAF0A5D867D0D2E3CA16E14E5109A29EF02649C47E12E88B3B397D65CACA
DEB9940B92100744D686066F8250FF30E5F13D81428EE238A2E4E07ACE0F5C38
7D79D4A336D0D26AF9C2B84088ED8ECDF94A1E3FADB45AFDAB46CAD6FF950B0F
07AA2CDF82374DA76C56D29C80138841EB13F0D02ADD32F88B23E282ECC845F9
BB9AAECE9CDC644AC2D49577A92307A83A99434F6493156DF25DBF0FCF2EC21E
8C50A312C3D19E0609C0038554CF4FEF3ACEB7A833FD54B06EF0D617C2971C89
E4C06075B09B84A4F78A82152B9A9C540B1D881313C2C74F20ED064A9606EC2C
B56D7BB4797F1EEF4A9B13579CCF311FA4A4DFA62D80FDB7F535CC6526D1AAE5
45C008EAF024B48C377522F74D939A475970533E645B1BFA81997549AFF26F67
2AAE6C2EFA357DB3B525276EF330905688777057F4E4CBF584520A534A8587E5
5A8360891E75A15205E8ADAC4A4E5A6E27D0C4A7D492216E4BC023AB027F37AF
A8DC7579BA50204D5F45A51460C5BD8A5A7F87668CA6451137F2F59E117BBE28
5C40820882A5546FA76F0CF49F8A6EC445F0647CC3227C400F56E7E9B84A6975
E85E243CC1666DBAFF4E07EEAF3AF71BDACB30DAEA792F2B8504CAB071544F01
5D66243D529C479D276FE22F7E275D9E7FA9C6EECA18716B2F213916E32C1D94
6E32397B41AC6779543218E506569E3544803BBF9B404A983EBA62A494187B30
8D3DFA4E1237A2E5E08224A60492C09ADAD8775B7CDB830520829BA164209ACB
BCDEB2D574CEBFB7AE4BE72DF4EB1945FEF2458761AD8DCC0D378AEB7DA002C6
9C14A665DAAA532B0ABA98D7BFB5A6151FF6703385AF7AE8FD315A492FCCDBCB
B825707F9566B3B4943A3C61C3DEFDC31A843A2D67AB06891F3E110DD8C73D3B
B5E4151B51D9F13905D7D94DB9ABBFCAF35F43B6EEE256B1A80ED6D1739D8D5E
8C767F6F0E8704C5345D028A2A6DAFD9BB7AA048B8B895FE9423A7ACE858BADD
595CB074A128DAFE08FDFFD6BDAC0114159A702FDCBF8013804B0CAEAD7AF38E
FAF086A3248AD4FCA1401A85AE2F72E3E6956DC0996FE8ADB18F89B14A208A15
13F81AF73D0DB72F78C4DA634ADE3C73756CAE6AF2E149C26316DFD93370BE1A
FB4A79F77A67C07CB0A53C78367F21661D4AFE9E27328E077B522B50FD9AE2E3
DA087BE481515B5DD7BF894A96A84A6C78874100505B7DDE1D22EFCE8D58B3AB
313AB5495F72E2CA4E6AE22C0CB854302B9990372F1661D9F0A517F90686F248
C5643008B3D29F7296E5C8FD4049886662EFDD4106E17C879F5D41CE84F87E89
F6A3117C968B95A35940CC29C43E1E0DEF51C1E46B676301F40D59615C3F73DD
DE37B72FF7105DB84227DA5241583272AB1C3CD97AE11C1EE98FFDB5E5F44844
8FC41BEA5C54B26341AFF6830D9D0A5A2901B0653D8BD0746838194D240FF753
E99750D3383373F453723D86BE97B571B8B84D8696089B5CFDD53E6C562A2197
A8C4FB0CC690C27761A816B441029D3D306245052E0C41B53025D8CB7267CFE3
C17FDFE348E765326F91AEB700CC49162DF748171214252CBC821493DD01AA20
417D66DF47EBEFFF3E9BB2B0A2BE7D9B8C68BD570FC2EB0FA54CECC318F04C43
19598BDE93F2F13DC7847354C99059AB20593EE51E94F9D4E9241869D605AAF4
9D9B5FD88C3798A039A67993C5EC68B6326B132E647F67EACCA7F7AE7F718D85
12666E90D7C73EF210E344964A38228B236679A2B18F5E081234CAA2458F8D83
3F0CA308D19663CB12EB904076EF88E556407C33C9380A6A3D68A9EFE65387C1
A1BCD2D26DFD2AC0881EC30E81C0A4E76C244A2BD822EE88C4A60B480D107E68
90E419A1F512E865BA922A7830909BC2611A80931CB2E9344529586726614D94
3AC5200FB9FF68AD9686506C5EFA8788C0AD0251AFE7F95E84683380CDB421C5
B1A783B6D5F3A6BD1BC1C14B363DB01C87C0796DCDD5BECF41A1A9F43183CF6B
82C2AE49F0BFDC5DEF7729F2E638EE6EA9E4D059EB9BB1B992AD8C82D501A550
1BF73CBBFE740179B54E193E84A55DCD61B343C1852780FFB44248FC9426AC94
AA2B3FE20FBA30F6C4D1E0FF3EDCDD8C0F57CCB50CDB0EFE2E04A8927E239C1D
9B026C7929BB48461D4D695FFC766C8A0E545B1BCC2AA068D1865333108E7985
2D93F9B00EA0A90939D0D3840D59B6CC0CE2C147B2E1A9A4F14270FE3ACF51D5
99F7349106165AD627CBBB0ABA01ECC6D3A14C1DC1ED23A9DB9865BB4396C51A
31ECD001EAC94B33C34E29C5611148EF3E55DD61813470B8F3CE32564C749414
3C93C77EA5A3538A0B5AE3FC4DA32813B06772E0E48E25BB39F3F6FDCC077E86
F86FA50E18FD19EB2F37311CE87F18F3BC85CE7FD71CA92D5C3264E34E04A2E5
70C79D99F54D6C6D9D527AE45EBB48411221134587D2253E7C8ED7658EDCA34E
5E768DD14E0200470F73C44D006CE8CB35DE1CA3EC10ADC668B0662A7774C891
84EC95A31DD872F0728D9F65CA80940080E04630BE4DEC77A2C49E3913C39978
BF145F8832AF2C4385EBCDB15F9D32C22CBA0CF950877717D6F1591D7C0B8047
8C9BFCB16AF7124ED83137695F3D69228DB633053208C29E0ABA1B06A7FB3EE7
5625CB44927E2DA6E038A6E62DEBDA2D96A03177982D8FA33BAAF4426E05F4B7
9C1748B3FF7691F9888E7FF864A10B9DF761A41E6B5CFAD2BDD7E1C4924AC97B
F4B352705316DD1A58637CC12D71C18A5CA691AB2AA8F171590EC24582B1123E
94D4DC587D8F99E18A711776BF4013C96446BFECFEE4C809EA94B169088024DE
0CBD20199A915AA406F0BD5F3D63D1467C49B4691AEBBB35ED6624F2D7BB74BC
E80FD92B9FD04DD9C2BE9B6FD29EC7EC07FAB447511C61DD299C783BC09AE2A4
7B3CBCA6A20C6631D06D0B2E2482A50612BB7C29B7E7D0A205EB0E8436702581
596BC996ABD58CD8D5BAAE4B1478195CAFF98FE0141287296C4EFB8D2E7A8442
F0A3AA9F9264329982532295A176BA1867EF732BBAC49AF485D9D0F7130F617E
7F7DEEF935874D55A22240F8EDE4F247D5F73481373A392D40A8076BD91079E1
1CE5998BA13D48D56B49A92B4A18430E316405D2E2E391B496A1934671FF1785
AF42BA3B2D14B8E04014437FD194455C50289DFBA61B5C377BCBDADA48E82DEE
4E70EF5E9DC03064907BCB8BE4D59DE069FB0C0CB140DA54708E630767313F9F
744594AD8A499CFEF733E640A11FD74E46A749F9C7D18D49251BF85C6EB4668D
67598C31A8F90922FEAEAD4B83B6E7184567DC798E4BA1C4C9B3461A478D63CA
054F13B502DACB674EB49D6BB935E5EC82BF99FDA7D47C581AD7F940DF4FC6FA
6C6D25D647033AC69505F0CAC58DE99087F365531A6283CB89CB644688963C3B
8B2203A94294E58739EF23C7803630A1F9121D62BE1977DE2F41687C8CAF87FE
CBD7AD3B98E0D95C8C6E1A7CCB0E09465AA874DC90A0F5DB2C5E7C130297FD39
EFE63B0350B5139D09E6864D22C3F1150B29196E40EEF9723E71158B7ECFB8E4
C426FEDCD439420B7F1C251FADA347C9A2C49738B5A17922E1EA93CA7B125B76
57449EAA9C1D591CAD327D0E98EF2D44D614EE9ED49DD31ACAC0B956620B6BA5
5BF6D08CA7541059D5ED2EF00AE2EE95488F5645BF6837D9241C0D3959B7580F
C9ECB2BCF3E65C07D52EC9CFB21C11CD4C883E44C173214C900C44D2E1E43DD1
CE8DFE3DA93C38B548BC4EC46FF91F30CFB97525E1FD4E77686433B20BABF8D2
848C1CDF1BCF185CFD7A81D2D4BB826E837E2AF35CFC4F419F698DB0C43E9F9C
B0FB628AC9A3CBE9B1FF4A067016E70333E78B32AB2D89C483834B31F5808FDB
77492E099F1504DABCA5722C7860CDCEDB2DDEB512FFCC7D287F4945FD711F28
87BC3D36173566B81FC2C1290C717A09697DAC6072408E20926D39270121CE58
3EF97CE12EDD7F87F2C8CFE36C3C0400869C0D813B71C425343EE0CDF717BDD8
409D5297D0F8F7FDEB0257C0A391F5635E0DB1116058942FF3E7C94D5F2873A7
A3B0ADAFC3835AF2BE474E6741319BC6695FB37F59AEE388F81F6E66F910000B
72E6BA7531B4378CEFEEDC79CCF4947BA1703823B5AB4F4AD73D9615C66C489D
99D68E49C9BF765B7FC547BAB9640D51D5A7A2396507AB5A4DFF3D14F52422CD
8FCFEAA06A56C6C7FFCD29C9A7A59DDD2A909A9363FE5F1E9629616D25ED38CB
E754C059E4379318CC491C3B1A90128693AC53F80F8210FAEA7EE638902A7D3C
82B95B3F5AE340EC1B648DBB9FB679D6E80B7F426D8671FE7136D97F51E2D2F3
C9CE9183E4061CA40091A2A70DBB9ECBB19CE3F65ADD0FB346B54BAB182E2CD0
EAF4C0F402C25573FB344EA771B297BEB615FCD0595172E84ED2A62FF8962634
23C19076C2A9ECEED5135994EB397303A9619C76DC55E032DA83FBA441BD484A
59F70A5110A8927F6239A14D4E223E189A5462E4A92EAEFFA4B961A2A32B320F
C2B4E8C1821FA67A655B5042C15E4DE1FB3652B55078DB123573C4E986B19DB0
1C5131F3DFAB271C30A5476B4A19D8FC922E31879C34BAED94C07A4841B8209C
403369FB8E842610D1EB4662B6171A4465FD0E819964F62EC5B0ADC92F08CF90
1DE0B410FFBAD16F6D355E8AD72CCF67961EDB6CDA82398021007C2D0462E893
75EB0710AE4A6CDD15077C9DEFC5774EF4A657734D703CE42174259B58E5277E
0DF26BF59AF8D1A3E7DC12E3C12AA4B67CF35B19962F6950C2020B698D971B35
82FF84E72F72FBB0C54A112BADBAE6C4CAA358BDE6A705AB59332C3850CA3D25
C7564499BC1319121CE0D93218210C68080AFF33420E3CB3A48BF9EB66BC07C8
A79D8CD8E78C200FF7CFA3DAED0B9E87E6141C88B436D8FCBA50AC195FCBB9BC
9512B95FE3A37FFAAB39850FCEBD4D50A243EA416E73F53B4B00F3B6EAE0CA06
0693A774D95B3CCD3EBCE6E4D0B66D4A77C0D54F9300B1A5B26124F8B0D1F26E
0D181D08FDE3D629286E320BE4C2F2B0568943DE1A68599EAFE8F764D4A1BDFC
B3233B9397EBFE8DC4F4C411F79B1D23289EA3FAA825650D8A62496EAB5EDBBC
A637CCD068A86773A3FB74D01A7D06D59729E5AC2E58C07E573EF02AAB806B6E
A3E14F7D7C52096CC941F47D98620403DAFC454A30381E07F915846DBCB2C690
16198828BB42507B524B622F10AC8781B19CE8AA275D02388930141B4BBE3E2E
D75093D9DF32BD82288116FBB7EFC6E67AB3B2412051E7B3061BB6599DDE3A81
9C1154D1959FE6E01E639A11009281F078231838B6A6405E742F8864AAED4DA1
4AAA966ED2C03C95DED79E46D6E14D8E8B0ABF40C84FB2CB114ED1FA9A24DCE9
7738A0D288EC5651DB4AA3E1BF953EB0B33B05902E172538B399848B8F0A69CC
736E5BEF4F39FA9C32374204E051C4BEA869A5C6AF84707039F77F1589C575F8
72E2BB3D8BD168D24F84841080694FC7B5FCD90C4F53E519D31C4D2832107B05
1286D5D8C007B554F7B42BD8E084E59D4C8BC1D4EED3FE0E358B4421DDD4530E
1694BE2F0B4523022A5183C9F37831FA03503FCA622A66ECA43C963FBF98D316
C045CC1EEC39E87BF27907810FEF1CEB6778EADA65F85C22FB311DF823FB1D5A
0CA743F26592AB8023F7E531FF2ECEF2762A0B9F432C4CAC8935143F71FDDD51
28648BBB16A064B9648B89AF622FD5B1EFC7B2886777A004AC024A14C8FED23B
044AFBF46DF2A8543997265C3EB41F9B0CFFEDCB33F02ABEDBDD53C1C9360578
82134DFF4CC4DCCFA7D52DEAEC93DC69B554CA159659EDCFC67BA7775AD72CCA
7877A01F0533AB0410B303567674EB18FF9F27AC3506E3082E90EC66C894C77C
5ED2081589EE58252E4143677DCD7C6451B48F2BF0F746FD44AD330B5658E6C8
E6A86CA11247055C08A6A0DA33B97E58658021DF93A16ACF621BF1912705624C
9EAFCF5CC22F2737D5A322F8BF684A4DC92BF186068C71523B7EC4007053CABC
AF18086E9D05E4D0AECDC1CBCB23DA10BBBB392D488D3705EA8966702843672F
94CA4254B15F7AFE8D20C301F570D31B0EA1CD6AB60495CC8221BAE3A85FC9F7
C4023F0E9AF216F0A1C31165233CB81BB06A8B0EFD614AA1B6B7F0455106D828
E694C1031C93D9FCC1F991600CEC66CB9037087CC14AB94788C35E23A65AC9A8
D49723501158617B76A428FF23B12FAD8D0BCC15919A98A8ABC0862FEFD4760B
63BF8E627CFAE12868EFF91E9F297AA6188E7BC501E2688D11A2D62162BBC2A1
F3C78DAF675BF3C84738BDE1EB4FD7FAFF9C4BCD31CEA3495A7CF599FD1928FB
487B2EB8818A74889E847F7B36C61E5280BE259D9B2A50CC97F743E5966E753D
6846B8720CDD90AA5D8F17DDA8445D88D9659B81A1C898323D88B63F4ACEE52B
CBF6CFC8527DB430081B5F7E0239F464EBFC71767C21832FE5F908AFB1F0A21C
20474E28DFCD6C0527B26E6A9C12CD6A8AD3876861C8036DA3B59E48EFA11C44
E4017AEF800C44D0100118E4A121CF80ED3141F8884055D1BDC8977AF2BCC6CE
45D306EBF7FF91A688E2299F1A166CD28F1F6A576035D25798D8CABFA8A598FB
1C94727A746D0D1748AFEA3BD291E8DDC9C303526C1FB7B5B300E0896679D460
24C7F0029BE364D5FD92D71A0EEDE4E77A924D2B50F8B7224BC9D603DE209302
1A85A6CAAE86540E9A01C084A9913C9F4554CB0DA59FAD3105AFDCF12FA66B3B
E7AC6494B717A069B3F2D760C219083314018E47A55C9AEDC57EA593D374C9B0
FEBA8C8D492D6D64D1CD4148DB76F6819F52BE0AAE26F40E6A333AF609DEBDD2
EDC6FB5EEBB679CBD33DCE257CF7B132C0808CC56495663152C7016DC2D07A2A
CB7BB5E5E36580D69F8E5C9750C4C92F3EB4FC260F80E5A873EE6059C16211BF
628C7189D0E7814C95ABB3B82940808CD341B0BAA470AC8A65F3F266D69A8236
388F4030401B9252145FCBE3952AE4494A4182BCB6E9EE04E16936745A2391C4
99F48D9597604A69BFF789FB9C67717470AB0F4DD41A8CB164FE9FC1A40C001C
91F67394A5ACE8FBC3E154AB4975D896BC86B97BA8B3673A6F1C1002CA5AAB9E
333E10CE01EBC7FD3D834CEC164351E9B3C56F1CA25FFA5ABC15931E282BAFB2
46F4B5D01BEA7E8C383DAD66CE36230DF2369ACF7EE9D54251AF26B6BD83AF7D
44A8DD4D69CB7621EA3F6833D6B909ACD28427DFC4F8A14944A237E1C8A43E85
20EFF8D28957C5B21388BCE778F3B514E828CE453A033CEF56C1F5BFE077E33C
931B6A94EEA1EE007B86E21F2A1A01E0A8621C747E9A8E559D6AECFA080FA508
6C0962ACD0194B6DD044FBA05014C540571094B535BA7227AF668A5A3AFFEDAD
F295600AF54DA5C2F02FD7C368D22C06ADD0994BE216D80AA8FC957A09FAB0C4
870C8EADF52047CA363EFE4E8BB628FE25AC80CAF21A1AF780930706370C6978
9474FA9A707ED178B2632F6EE032E8E1FB6EBBFC434777BB72E704D49273089F
38AB1A1019083C6DC90C1A18836C0493C0A0FFE162BBF580A2FA730EE4724F15
F31988592F2AAFCCC5AA340926132516F6774464086767B3199E7A3C142D2878
DDE27D49896D65900D7D4D2645F618CFECDC45A8687A1020D414C81E6ACDFCC5
577A8154A7C7CAB13FBF7AA525B6E8BFE79F8D52F9BD93F748272705395BF999
8D4D6DCC3BBB22C0930BFEDEAB1E26F976CFA5B54DD501A7AFBB3E10968A3F90
B951F992562514AEDF64764D96CD4D1E6599D71EEECE5807E814B53D92C4BA11
ADD27668345B58A7C8B4DD1E1B8D4EC9C962F0F2888F6EC73FB4E78770E14136
A399E8ECFE62543F54A89E80FB8ED9A401017F06A4346DCF7843A839B85D6E5B
FF28AF4B695B1382E7D9D3E60A5A28AD6EBE7A30C063B9C0CE1D54B63E068F15
E7BE78E568DC5F5B399ECEA103B3D4D559DDBDBDD1DDC919EFA7EE281AEB268C
3A66C58989AD9A0045AF6D187D2A4B47817D42C29E1502EB0CBDFB4172997F8C
35D3C59D6A132B8528A24D785D03E47CD7FDECD34A04E5F432BAD525F00A156E
3DDB2B5A7CB0F0650B7FF0A1EFBD4743DB6AC8045322CC1A2D4C98938B4BC4ED
89C6C9225823F4401A0747BE410FD1170DB26F78B77AD01CB1C7D3AFF98D347D
E8185772757F805130FFF64EF3A95A98FE65D238E30D56671E7680FD79DA6FE5
6A3B3B515B81DDAD5BA28749C36A04E1867320B6DBC9C724622B5F936BC06B0C
7D3714C4171FBFF98F608AA48A2606939F993310289AE8392BED00E078AB8B43
ED091DB21C34BF7C103378C39B041BB20AD032F8972E9C838E5B7C7802F866D0
7C700AFB15DEA85AB1AC81F09DC968139C58704A4527D6A9F7B1A4BA5C853F33
F50D416A1954F3F18C9C2EB2ED615586BDCA8314206C178EB12E985EC3F0D6B1
282448B3A2727057F81132227C34059FB9DA79C24CE01AECE11FD6EE96D3C48E
5905BB409858E531C02F7BF2BD206243EEB421FA189D48B4447831622B11FA55
53E3D59FE6566B0ED8D784A9E112B2356B6D2113E81FE252703EDAA1703D7B9E
8457226FD646001FEA470C2DDF8B8E166339AD9DBA2AF6480B80959969DB6C29
FDEE4BBF402DC560445D55088C3B6B890FB10C4C045DD5334252CE27CA867D69
7E79A5F4F65FDC8B9DFF7F69157923A6EF5D08FDB9127B6F6CF4D04C429B66A8
2DC974674ED61BF583FED9C31C450CFBC7715E01376F532CDCD3F1CCC7070F4D
E5EC1459F68ACE77FF64F2A907FDFAC0328F86B060E9EB6B5807E9DA1083C9C1
505D1189294AD99CDF8FC01556E6D314FCCCF404C8F760F3338B865191991FE5
5C2A4FE6290897D04D2D0F1F9271E2A27C8CA247142283B63BDB575DAE9F7EA4
DE0B1F8D7C4A2EFF56AEDA8F665D238C3EDFFE31B413768C127CE0D38CFE2D11
B8C1D53BC392E5631194A1D40051342A481E7475F2A06AD565E24766147246B6
344D9CA3FC467E6B0E69AFD79BBC814BD50790A1360446E22BC85B3AD9054114
2674CAEBA22462052FAE2F17B8FDF3D9F0F64DCE2F01DCD7DFF96A4E662CE6EB
BDE055DC66DCD7C8E65217DB2746E397FD75C0299B71FF2AB6ACAE810DFB588B
F85FCDA4926363423F68CA917DF69F0622954918ABDB319BC64526E9663A8D8C
36C608C402A72CCDAB17C2A8C3044612E8EB5CA65E7FBF5C6A5C20774CC16532
36D2EADECFA3F72E4B6E7DEBE4E64C741AD11B6938F335D6F0E2549CFE46DA54
0006AC8C041CBDD959E2A29698190A457FACA4093BB5312224D08911BB4C01AA
270667F11287530EF183D4BFFBF23FDA9623F6749E42F5029F75CBD710367A2B
8018FE65D83E00389E79066B2A88C69B532EA10A1DD2F3EDD4CD3A50E6844772
E5E3173C6002EA66C3218852BAF997093F5ED44FF223694C3489DFC566404121
E2794065EB00574B04B95FDEB26A4917BF039EBCB7BD4B5E32CEA6DDA2593A7D
1C20B94DB8201D2407C87984999B15963C01FD4ECF0C66985EC37E58C570C3D2
AAB194482A5F9B4201C638DF37E36B80433DF5D91E1693BD74CEDF66D92516F0
849584D703DAA6A0212097D7E4F2AE2FF8B435A8BCBEE83019C77E70F4D2F57C
112A47FEBC419B8C6286331723D004D3E3663BCEB45FD72C608FEF7C8281726B
3442FD95A9092208BA7E2D9976906B6181D60DAD9D199E66CF331CB42E266150
3521FDE288D5B214C795740CC5D4E7FD77BE9B7371365E21D2028B958FD95C7C
BEF5816C15EF6D6D27A2F70B7E702F5D2D4167222D67844B0E63146C49B0900E
CEE7FEDD7AF117E92121A60538F04B6D1DD3FAD5D195B7AF8BF5B22127EF4E15
7920B42D3C728938CE78308B72E2E9D0AA17727DD1A5F9E32A3EADDD06255C6F
918CE5062358F7B68D835B9172371CD6D8921B42E2F9CD0101B29437BE3F9B18
27720183E6FE357793C62F3B7032603C73476B29EA38140D11660977DA2E5A06
303CD1BB43F7470A2D40005BBF74F485F8A27B768569B8FBBFE6B03A7D09D3EF
E79F51B20298AF69445F76D2C2F3FF552156F91D6F98D6EBDA9D1F60490FDF07
F40BE3CE467332103715622770DFD4FBD30586DCCC6D26647BB268D20F11B5AC
8CA5D138FE9C7326ADD7857B1F4FBBA1DDDC5F657C4ACE5B193D521DA0FC9FE3
A9F11898757DBEB2F14244C766B5A6BF557D406A9F82350BF2A4771CF854FE24
BA5591E05C2C8012EEFCDD12ED5D8A0DC8D56E1273C30F81203E0797A653BFB6
3E03C0CDAD563C80D0B6C97F618638627616D2B82C4B63C5C4B859575E975CB9
08A1A63CEDC07DA3F555E1451B96DE2568C7A76A1E07108631B0DB6E007F731E
6A06BE4BD7A7D5728E3761F155D706C641CF84A04502D0137A0B52F04C4A89FA
412CB4D40A4A0997ACAFC064F42E9F93DA27DB7DDD5BD81A017944C8E2C33EA2
B27FA9D55CF0F4B8F1423C1D90C4097688FFF930FCC3498A11468CAD09681E3D
E5B8951C3F1FAB08C56C48B1B842FB0E27695D896DBE1BF3691F55213120C997
857CE4EAA89D4F547454622B8BE51144D95068A9C0D5FAD0468528AC7CA453F4
A48D639C6DAD1224DB08D3166660278283B09DC90DEFC5210A2957F21008FBED
848F1FC846BFF3AD937E82DB483C18EC9F9387B4B651DC33F193B999EB7CC614
C0B1580DE43682E1FD17A0A28EB5FDFA7794E813EBCB0B5B5F16460BD0F3823C
1A287EDE98CD07113C4269F0D30925F12FA7F3796857CA58ACDE13808385FE6B
16C0B5D542773E6D4D1A115EA5526D4725E22A6757A3E6AAFF26540FC8FC9DD2
D929033F261D63DC3F08725738B66FF5CC4B1D145A1118BDDC70DDA126B725A7
AD94CA0F9F8C6EF610C992486ABF86FDA8DC01FF3DAE327AE587EE53EB78DEF5
E024266BDD0AEC6D61E53574F1CF601F19B0F8CD4C13C81609F8FDC82012AE15
7A83C2DA70ADF8B9F3B62280BA8451A6E2A7B41B63683ADAEEDA2BB0D91DBBB7
34763E80A9B37E8A4F1A0DE7D1612508D586359152A72B3D62E5FE8358631362
D2C0B09C37D52032A4F747656544093C36303E7BC0C6309835F84E4312C57B02
0CF5FC0FE5F3EF9026B2634257306F2777CF22739180DB3B737BD7653475599C
C3121A72514727CE0184E248B9068B6A31C831173CB6022BD4A1D31D47F0AB98
D801689466AF4A2986B57B6F7352917AC31C2C441CA13227061039FFD41A3420
4D82BDF31A1363C42CFBC6526807CB1D82107F481748248790B194D9DD0C4198
E6D8FA4EC6EFD2EDA0021FB1652E781A2F2B98FECCD5BE2EC93AFDDD0B5C9B90
1CE14D7C1C95425D27D91FA6DE478E24CC78AFB334593938068F360D9E91C67D
53D2E356C75328C2AFFB0BB643879E358C3AAA88D1424CE0B1F40A8D846A7E72
23A095C5E1FB53B4D44B98EB816CE2B783E45ADFD209A62B1D9D4C513A494041
6DB397FA43366C21BD6528D9E54CC8920535277050AE35FD676EEF465ECC77BC
CE1E08A6DDDF1007968C2F0B26DD65BC63214B621298877406885FF7408BB2F7
52DC5ED1D54FD1B07FFE4E038966879F0E47B68E59E6F49025CB309BECD58C1F
51ABC8187FA2F0D5BC47439B7C46F7477EE9F45D3DACABE9703B481152EA7C20
52E1C3CA906657A93E1AB6B42899765C3A785E528D0C2436FCD634EAB48453B1
E368AC02A0D47F60B7A23B15C3AF33E4E4E1BCC284EE47C085D55605300A0A1F
78DF812D2E4DEEDF287D7BCA3CF7DFFDAB3D50EABF924917B6DEEFE0ED4AF911
A0A27520A18F9171ADBB14F0DF339A814BF653AB54659E6E1B29FBCEC754DB32
C8FD06DA863E70B047F21BE57EE802A568339340F82DFEE76D56C72BC3E8DF61
21C3569C5D12C8BF38A36677F41C590B4975D899C4648874AEA0E380D95D027E
A797F9F6384BB63B38DA919D2A6CBFDD97447886FE244E4190D24AB6C06FB152
1756B30CF0623FE7D11ECDCB542DE73942BA5D22E658D03D6E3B8EDE25E93673
53AD7C57C89F6112B3AC1FFD9435A14F09FDBF894328977EF05BD11BBAF34E53
750141A1A4C5BD1C4441E6976709B711A9605993A07E7D9B11D88CE77A8CB3B8
935966CCB211F1730B77B21272BE0DA8505FF8623470249DBA064093B547A54D
D64CBFA98FB47AE07A67D94A87BF5E1D32958030FC3B41539F6CB5054CF8A54C
F0A4C93CF8428248DD810C933D9BAEBCE9677AE607FF1925FFD15D50C69A2EC9
554B72AAB36095A4C7BD5E329521D62133261C96826929772817E95EECF5234B
538101A5D505B9E59165668A1DAE831F0821428F9114E99A570FFD1D4BA5B476
0DAE1CE9FB4E2B59133C7EF521D572B2B5AC0339ABB1FA710DF2B6733EAF11D5
329C0FDE5E250E5DA5C1987F0320B31A3F1A320FC98E72D03F7DB0985F0A3C2E
27AD5BD3767CA71080B8632F71A95063509E33F6E03D4CBD09BEC6F392FF8538
7834860B428C9023F54C4B11DDD2BC6EEBCE16C2799A833F50A2B388B1404CB8
3F1EB86C1E9439337BFA94B1740F124C2E79958EB98EA24F2CEAAE64D0EB2D42
36AE7AA2D8944BF07DD72143DA8AF3F362FD2F8EEC0EBBCD7403025A3ADC793D
F3D74BBDE192728A155D1B5ECEDBD914452CABB5735A5D1C11C30CC8FA2CAAB5
D0E32AF9A53E730D8E150BB09BECA93DCEEF5C5FEF6A8E2BC832B7822A29324F
FA804319305B7C14EAD53F6BE3464F562F9E2279D247FF6715F78E61046CD606
78F1EFCA11223905896E38CA09A7CE4CC98F3078EF3B48E22008242CB30A44A5
4D2EF157DB116AAC78659039C98093F6C332CDC1AC19CD2EA064CC1B4F527E5E
F029C1A5959665E40FE3239B565F13EDDE6772EE8083397137AA2CF186639AA1
A24CB44B9943CDBA5AB48B88F104D60FAEBD0D39DF9B32CF91E7FA7B3314DEE4
DD49B68F8693CB2320E40C4AFCCEA0A36ACDB2AEADD04904289168D9809D9264
268C31C4399A8E93AE08B538492DF820712D7A6F9E6717A6A3E963F0E4E91C5C
BB5715E77C003F7D05D041FDAF940D6A36A873B09036A02A616687617272ABAE
170547B24BE8CFF01057AA498636819DE4E8A56D1E313AFA37B71AFCCCB933EA
2DDC1BE838579C48414BDCFF8E63C307D9CAF058E830AF9F78936A948E5766F1
D37DFAEF60F64448EA2C39E47CE64E926D45DFE9362E7BE98487C68F8D3E2896
F0EDC329C1B362EA74298D15588AAD35B8945F294ACC4E815E02BC9EE8534F9D
F449BFCF7F5C7017594CF55BBCDC5A486F1CEE1F7B83F1968C6D75C49B17222B
32E5F6B6D871C81A525D1EE57D5687C7F2EF669003FDBDA5D05AF4FFE95A2CC9
085BC4576E1F67ED2E892EBBACE524D356FC3C3FB195AD2D9034CE9190E40587
383EA29D3021DA0AFA460630E9ED121D2307EF2AE88735DBF657445AF7C8A1A8
3D724DE61A80AF42123B822FBC6B450C2C8A7FB96D7538A0BFF50A824FD02D6F
8C8688680C8004D9DC09FBB60F617DA5BA02D506BD0A2A82E700DAC5161344A9
CF89F67000AA83F3E83FE55D3ED3F116E957A0CF0D23E73676EAFAC1DE1BE709
2CAAFD75D771298DDFF7E938114E07D12D193D0FB8E9BF16122223D9D9A38395
CD682969EC9AE8B42C473457B6D89EDF81A85EE1C54864AF9808174C7F3B6A99
0C4DF14D2AB4115BFF40ECE2BD02170DF70D13B31C770FB18BE1A3BCC83BBBE8
B59041D79BE342E6974A61E0406A4C3676FD4BC4DBC2639A4931106133CEA60B
7834AA92CCC2B7C792490ADE9142DD9BCF61CDD4A3C472E53DFAC4E6EB46AE5B
E56FC44189A02765AD02E97CEEE78FC02D01F06E7F603793E9D19DDEE8697157
F2931089AF9D74160536A06B9B5544E4FE8084C46723FE00320118C529BD0E30
504C2C3F9BBF7E1E5840E20978CDD3FCE2E862901A7899037882BADAB1BA65E6
3F1146A15AC5A9AC6102278178EBE69A53D9B211020D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/UniqueID 5000794 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 58 /colon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BAD2E141C0A7B647030FFD1FEAB8CE703C40802E0D32EF0DF87BBD5131CD110D
BF5A11D66FC2087779FCA72E245C6BFA23F60759FECFDF932C3026D4CC21D843
9789FD52FD7A85BEDF58DAB6334F4880C2C99F49C0F64025C76E0550BC4B8AC8
5C7E817DBABA0E78F36954E9922286067E92E69D23E9FD278CD5F26788A7E5D8
476DE8E21397716DBA03B23D85CC8B701EAA654C5EE74F40D6C3AA3F46E30A2E
E663C2CC64E2DA3631AB809AE1B70D89F53B1D72088642CD07D1DC4C7263A7EC
9785A2EBF8CA24D40E2C60CAF478FAFBEA8A27A55CE0320FE47E2512D88D1244
95CBCA87983B8795DBE8C15ECA68CDDBDEB167512E91930A7FB226994EE4487A
D1E69C7E7908AAA5D45BE3B0D1072BF1F36C6368AF31FC583EC20E6634FA5777
5ACA6512C5114593C89A9FA5772BD7C4C2FA987C6CF164C2564BD1502C3042FC
860D2A57D5DD11805C7D225023470E66EB4BD8E9C213A951CE1224A737C78C39
B007A51A697AE01DB6E596C681934CE76B384B80C793ABD583D6971C21193114
3BA01D7D0A48DC7D765078A751676B5DDC7C91503E433D4F8265BA984A6DDE45
F164C0547AD7BFE93CE82A9E6C43BF0B5B58DF7D794E1D7F0A4307D118828993
06E5C8C85F7FFFF7E24BBB4DB0D3EAB8B0C23AC6FE239E323DF892892456AA0F
1FFB85187E69ADB8AAE114C5D69EB17755FFD1ACE4DBF2419F654511CB0D81D6
FEFC10B7E5B883E4F758640C06B86DFB4AAB1AFFBA303EC13AF41CAF6648E5BE
FD68188099807F68E454FF99FAD0D7A5DB1E6EFD359179DE13F915E1CCDD9968
5217290DA156F7C42735CF7DE8289BB63EC0C685C3669F30ADC84DA9CE87D81D
CFF2480B4402317CEDEEFD4473151A723FCCBDA11C598DE69DEBA49340BCDE95
C5F54F0F4AD36FB7DFD5FA7A5C81F204623DBDAB207FD370AEF4CF6CE6D6A00E
59AE99CFF888041AEC2A202B4751BA162189E918588E2954D68448C1CBD7B54A
F42EBE8B1F35D87B599C2D554F4CAAD409F0B396EEC2DA6C9EF9E0CBF20FE5B5
C6EE300FD12F16E1F43CD70056C766CF7DF97301796567E4CF1C63C8D8F559B7
36268868397B73F18FA524CFA44AB5915DC72A0D5520A3A8A00BE6287A0ABF0B
92C5768C302F8328491B38620F96D7AC70ADCFC4DCE8592821EAB9D0DED569FF
FC75B45BAD6426A9A91377ABC369E6E9BB0B24946FAC9946E2F4BFFE9C2D8CE0
3502E98A3AAE57B80C47E013356885B8503F57DA0F18BBDA8EC70511FF6DF762
22596414D8E2BDE0A683141A2756410BD5C6AAFB75C4295088F87007CF16EF98
25F6B2003E9B2BACAAD3B89B83C55B83250912277DA8B1C3878F5233ED56CF08
CCBB3B6DF4520C9FCD7E67FE7CB7569A9402EFB1A5D1EB0E8B1BA97F837AD85F
62E07087D3DAA3891D412FC3D166AD1DE590F6C8B2B0E1641F6065297D30E7C2
438EAF7A5D50A03F338FCBF153F9C8CFBF72F1BD95D89C8BBC24AB22DB3D5D7B
C7280907BE1E98604D72F4136AEC10936ADA9A5B41FA9C207F3D961AF7823C41
25FD601CDD7E21E1D30D7B85E66520E7DBD10A65CEE518446DC88DE10256BC81
CE3CED3B5A33C21C7D562B393D1EA32A91DB7F8BF4AA4945EC810B44050B6217
5FBD95F812AE83838AD600DB975C46261B57C5218A36803AAA8C6605EDAD3970
BFDDB032AF7F300707CD606756BFC29CCF17E9AE5573C5E18CB48F6F17E3FBC4
5B42649984AA117CF54800D12E4823F5E6AC5B0EAAA00B214BE432897416B903
72306F1306837054BD9FD5D1ADB8A901B205C4B892C31E0F41F141A7ECBB8C58
5BC85B0FEAE4E559909BD5A3D158F48458F4D9CC63052410F9B22DC744F44C1E
1748382D75F9D24E567DACB0A8E1F3D4B17F3075C4571E96910EAF066F4849E0
9F5434B65832994EE2F9A48438720D9066A0B814DE14BC289FF6561115C8BC0C
79B0FE836B17D8EB0C9466E79DDC3847848E96F54C1149EADDABAD101B6A47A4
46DCAA21B465730AE1FF4E500EA0ABF8D431986DE2C722A324E85A19C342F2B1
BE5B9FD0D277D5469B184DB93B36F923813692038E7B1D3FE7ECA58E357F642D
8DFC155599EF88109DD43014FACFB3ABDCE13D9B38CFBB3B6D3F0F8736CD90BB
35E75CC4EE0B00908005775AF1CED400D3A4527FC1302C7A1F287DF479CD65E2
0C8067EA6640E3418810FD54406E1DDE2E93E1B678D7931E04F96FC05A946E01
33797EF930E2C9A26AF33BA7690770F43122C073E2DF42FAFF938A2AFE399D56
84CCCD954D61AA78A2DEB2C4C135EEE5200047F769D956676D9F19FE28C8939C
8416BD19288527B040B25B1FBB48FEFE261067142B0E6915167052278BBD3346
C9BADD5A4CE7B397C86DAB0A361B27A7C1BDC4D1FFCF82D112B446A8B501C1BC
3EE07814993FBAAA5D79A788555612227C409FEA8EC27A95F14BB6261C2E3E03
48C33E652BCFFADB40D2F9C91BFBA6E0608771B2AAA52493703A92FBB1CCE342
2DE1DEFEE6B3544F96CCDCDD48DD08579571BA183782DC192BE7F1C56A97D2FA
1F429C827BF6C09035AEB6FC3AB050F37F5C81E6450EEDB842B265215DA4C2F3
91D0448CCBEDB381E13963ACD7E7868CAAAD21BDEBBBA926DF94AB80FD76AF39
70D0EF434A0E72FFFF83FCB8A384A8ACD5910F0675F63B25F0B9F9898969BD04
917B06E46276FCBED993600ED4402158FC972BF8BB5F68CD4379DA9027CEDA14
BFA91D5D49F42DC5D87F118C0015827F9DC58DC87AFF07BBD7FD73759A9BE7CC
F63E449B19E828C358AE447BD2A7C39B380619D3DDE98388EA7C248712C257DA
E6178F9F79D18F5F7308CAEFD89B92E71E332108164CC48FB8A08542BB45A594
B21FC6E32CD58CBD773102A2314593928BCF4F8391D4A463094635F498C06DC8
1D1F3A7B5EF356B1039056E6231BEC5870EA62889173F5A47644015D1C88D4B4
5E53FB5A4205D2955086E4E0CF50B3036ECADBAD1FC1BD92A1349F7498FC0261
8A0F9061F9ADD8B36B4F99664E64F3BD1CD321187A7F47DEC356C50734A1DA28
F05532D5E75323FBE4970631082BF3EAE9C08C9F52C1653304EDE621A85F81C4
93C6E5BC1269981785649B34D68D2DEABC1276BC282C71A44C0E9E8DC90D2DAD
1F5C63FB93DAEEFD2FF78F104E83784C43802F671A418B93B83EA6FB111958FF
285FF956F3D75A773E66327802517D7BDB6EEC0B16138ACF51C0D2B344D8692E
24FC297E17BCD95E0522F75105932C385F6BF817DDED4DBBEBA1A2E6F95FB8D5
33FCC84573AD0497F54FAA81C7A90BAE66C0A862D6B2C1DE7D9164BE4614641E
556BD441DC0CEE70291AEADE70AC458528AF246209494C7A604D8FD056807E0B
199EC9361FB397998B93BA54C6EDE73C57FC7C4D999F0BAF997A425F392A672D
B9983DCC4E5C442E9C0461D50E91848C6188EA853081E6B135D5A1439CCCFDB5
6925127F43D8FCB1DAA57BEA26FCF08C1C0F15EBD521AA4B669752124C3257FF
A0744480FAC744F870D5944ECC1CD441FC0B86278B95632D377D401D84964586
2040D4167E37409EFF18CAFAE31C48BF614B8334745AF7121A2662EF11B732CE
657051F729CB833FE4451FC601A6E68034ED356AAFDB7A76F37ACD93298A61C5
AD1292520372D410F6D971BDAB89EB42C1F40A5AC4324E2AB55A8B183C46A47E
EA9E789527D3720AC3509A532A1B8BB0D8E49832A0EF7D457087D9630DAC6E91
F2E7F2CAF7F5A01D9104EE73B72FDE4D25BBDECA804FD491D5C20F9EACC182AE
6930654ECEB453B81ECB10C3C3EFD75EE295DB7238572E18CFB9905FED0461B6
603121F2CD1763549844AB834FA3E258F3049DC8BA685DBAAF893745B30B1C34
609B79077CECB1DC1E41F1CE0F49F41EDA5538273A2883E1301AE5B56BBE852A
AD7398F6F50F6F8BCE68B403D7A0417711834B7974FB2DAA816FA6559719965F
38E36893B683D68A21E9CDCFB3EF5D074E92C6A596A036BFD471A16D7C6CF1FE
52E15EDAB05EB1012EFFF895DF3846CEE5737064DFEA3606AF9A5F60E76EEBFA
D30288F2148A597F5FEB38AB6F76BB256788415AA14FD450A5BF16A759B1636E
4BF3B4ACB7E6B0B24736AA179FEA20FA8BB505ADDCD6CF3D5B39F561A39B8CCB
5D76FAFBB696232E87A45A22ED99B0489920737EB4F60AA3FBD6569DF1CB30C4
63CE9273B1C7FBC6D9937CD073CF0F97EF0D2868B30C472481EABCA214637817
FB284F2B272BA1D7956CBDF545395A5BA53EAFEC5FFAEDE7B7C097CB4802F35B
3719246CF13DFDF6A43189CF078AD66B81969DBF33F71F00AFA11CA36677E2A5
37A619E44CC2C66B8B0C757E3E3A488713A6AA72118D9F066BEDF1E2A0476EC9
C9529B6AECE33F69EFFB737A56407C4BA8171CBF2E369B2BB993DB69DC5B3C25
DDA9A7B09FA3442969CD69C365BAFA7EE030387E1C281CCC5F789F67B3ED1D12
3F306D050E723F38D58A7C524CE585BDD785835EDCBF79F6106CD5D09351D351
FA604C071AF0B976680538B0F5FAC187F738F55E5F59E8A90C5BA25C1E24F677
3B59ED85DA9FD313B50C882BFA8B392C265379C05ED311E5A6500F72D1A41D78
D8903E9B44CE22462E84F769FEF15E15A303C2C630693B9C2CC161470262EE37
46406D133E96F8F4DEE20D35040217E287CD546487445B49922D86E782F04125
973A3BF39E381DA806C8CAA2BE1A10DF9DBF6CE40F52D53CD87B75010E27DB5E
B2DF0914920107880857750A00A56CE90578D459B27DB97039B642ED9E534EDB
00DF42F2E66AAA8E40FBF2A353C3510BC878EF19F20A59628B229ACDC890A5D5
E205BB209A474A192E442AF30A2BE3F13DD5D61E607F11B0435DB304EF0AF77F
F89FE921759798FC72037BD9FC5F252B27070EEE64A8321AA3110E9CD6D926F0
4D5B88680CC932E6B5A1993CFE978417A4870DDA395027711739F5E63D9221B1
8487E501C466EF15681277FE5B50019ACA31D25D4890D65B3CE0E1F146F40795
00AB97D35FA625ED0F780DC28F4A3B612665E45DD7C24353F3ADBF04BE6D6E68
55B5846E30FD67E54857F75BA5FDD906DB05C97B69AD7C58FF31A9C82EDE9A72
6E46CFF6121C7ABBD40E3860085A1B69BFC5648CE4A751591A505A7AA46B2E0C
B40BB42D02424CE67CC7EE16132EFC46B9E9641FB31F5627A0329A31BFC4BCA6
AB72079D578F7E5BC8C9DCCC07407A11E37C5604DF996DF4D3EBA74793AA792A
7E9FD6877DEF4AD5C199AF66C42B0742C5B2AA80675649173F0041C28D510E3A
A034297F10A48EFE7FF7292B5457E587FCD91AECAD3B3C5287A1A8CB9F4AB8B3
353E262498558648A542B7EC6E313C11CC2C27448C39E9CA5CFC808EE5FD7BA8
F6A1AA66880B72CBFDB1AD501BDFB873D1B8AA203B2908CE73188848C0AFFE0E
689F96A907BCB1ADEDE0B6F7F0E597A097E11F6CDAB1D46C618FF40AD8CC8B32
394D00AC4523CB2CE92A769FFA56DA5A35555AA80EB3C60FC7D55A4B12E55AE1
6B86B9585FEA997CF399E74957A3CC0E826805D055BFD5D199D435B565B8AA89
C7017383499D66E4FE17D996164535BBB5A9AE417C87F18ED5988C4FDD4CE2E2
EB14C97623C5758E62DFF90231AB4F6613FBAA7E9D46A3088BB23F9988DCBA85
DA7E640BC1AB2804305198CCDA2665C618BB2A785427AFB0F1BEE045DAC56002
3217B58F58A02F77882C389804F1F0FEFB2E4FF20ED8BCBD11F95BE0A6280905
3EF5998073C9F86D8F5ADD9FEE885B021E0CB26856BDC1802B13580094C2096E
C3078E2C5D2B3E89BA3C09D7F69836AC258BFBCFAA12C494E392F98D150C59F5
C2347CB07C802968A3E83FC0004338230D67F689AAF8AA9DC3988F3C12D74B51
908E6990576D2621D258CE66340C704A9942027EA93EA95B6EE3C270E5FFC476
310A31C53D0941E74FB6558E626C985D2A7737446F3724349F621B2EF1F8F842
8CE545790E09871F319CC8BF28E2B7F48C8AFBDDC03B42F7F059BC754916BB1F
63866D961AEE6B5EC2EBCDF0B6C9945F0C5379F4C7071447EBDC3C70944171C4
A3EB31B9D951DD700466491FA06A6DE8D8E52A041DC1F0E1A86F75E2596FA3D1
21E4EF421A1C12386EB813E59C7D54341486879D59399CECED9119FCA7B9ADFF
7F4ACCD2E6A490BE8B84BC73BDFE1722C96B00D890599529E044C5C9F0242CB5
7E330CD6F271F3715D8CB1D67D5C1084B95682D300C61084CE12026BAFCA49C5
4D070C17C4CE694E402089815B508BD2FC08A6106761EB436225720BBFB27EEF
43FE88C9FCBDAC8158F8C8B00A4A87030B33DAB8DFBDE43BB32CC1B03577A9C6
5873E4EFA439DC5D84B353B6C09B5465BB04DF28C3CF73F8CCA66B7A87A5BD64
819EE72AB5AE9D9549B0FA2AC5886EB81CE3E0976F535A762845EF78E409BF48
A035172AB97E3036E177DC5B8C0EF9D40DC111F8576BEC5A7FEE75316637F776
2272F8AD84231C3E1ACD79A683F32F54D7655ADB76B7E5EBAC3665BBDD0C0001
D5F8D2B70FAAED1CD5D1BB4A4FCCE71E7C21630EB539D7DA4D2DD122878BE460
46756EA3F2FAC712E16F9E24B9382588C1B0E692EE74EA8EBA4CEE4773692CE6
C1E78927CC8E8738EE617E60A7C8C382198A923FB1C20E1D1A61E50E6AD79B7E
7FB1815AEBB9AF7BCBBEAEB150109E1030FA68B838A3CA17C4C0284A625D974C
B9BA6F90CDE26C8E5533069E702E19CF83263FB2C460D4BD175C07B34847B296
684C52271507F7D8EB86AFC5B1DC032D5C7F82368457A2473E5DF2F0B6527EB2
A4197B5AF4F41CFB9A083B609F6C712E6E66A16047D16DDB168FC81EB3CA8CF0
92AE9CE32B214AA99E1741F699238266A68A3C5AFB5E309AC29FE9551D60ACEB
5836E7C3431F6AA94C2617182A1A6B6EDCCA24844D8CB55CB53B1F96090D69CB
00E3696264C702448BCD8B7DE193CDB2C5350BF2B815CA6AA822D5AB6472B504
21AA27CCF0FABDCBEC3A31F28FCF3989DACA4599A3311AD672D3321A02211D7D
5759D2B34823E15949DD671D6BA18CC921611B30B13E4C76CA8913AD743624C0
7CAD4F4E0E3C8A663841388BE235DF78D06FD1E8CA129EF3EFB2F92A84B49171
680FB8A5508E5373AB9CE58F75100B65AE54D2C2D144519C9B3D80A4AC72D2CF
D12F0C66DC346C56DB52847DC7578152CDE45CC815D42643282BE0BEBF9B8E00
3492D37A9A60F943ED3B79141A6E274E5734913F321068348B30B2B21F88B7E0
689D60E290F9D89ABC6F6A6740B61A584746183EC4C16A5B65A9BD879C76E8EC
B6A59432B2D4866AFE0A25716C1E25F331F8841589FE146D059ABF902BC99615
82B3E1553020375D9563DB0926C1E91BFE329E0E4C44F4A4996A45AEB0EE4259
82365BFA5008A0B3185C58964739AA9AC442B0B56D0F813E36A353EECBE1C557
686EEBC8F22316292E013E271405B7165B7082B0F4FCB705B6899A5411E2B2DB
BB6EF1AF545B4933B3F7CDEF0660E61613FFE892D230F7C6EB0E457B31F18A67
2D31DA801791E262667E2F4E5E1BB3981CBA68FCECB72E827E376799BE2E0505
D21133E953214496BA9DFEB9A1788F3713EE391DD1F1FE061816324411495703
130FFD62F4F2B4D0F245B8BF72F1B91E4929F821DD77B3C097C629856969C732
4FF1EE081C08F70F75194525EEC9863F7E25E617C814CDFF9808DF9EFB721FB2
A826AF681F12F3F98D34A109BE79DF2A83FE81BFC7F1AA19803B0E7ABD19108E
C97C2C4B4453B477CEFAC8D43DFA58658769F507067DE01F6EB57ED22917A928
939FC3988A888B9DB82420F90FAFD41FCEE48A3B6663B88BAEBB3A510872992E
BBB73F7FE6767376E3BBA02F2D2868C898B253EB68F06E4351590ADFB6244A42
0E3890D419BA0E408BB6765BAE0B25744904F6125B5C316F02BE17A2F5657CB3
63D99C4052A529802CC863E54569E81FDF4ADDBD0D83400A7853AEAD2D82C7C1
49670597A209B04054D06A3CD26B968F9027A0053F1FF98856F7A820BBBE33BA
ECD7ECB7857E10D37DD30C477ACDE8841C614BCE435153695FFD6002A57E9B27
28899FAD47558D8104FAADF83F86908B4C91342B06C584759D1021253E83B0B4
4B7876DACB86597D2E3D9632FC2637F63F87DD8808134FB46C4ECC41D2A68F4A
1E445156ED522FCE261A420B8AEDFA5B867C72AC4940A2199E3973E8ED6BC291
010A1150E8E31A72312502012A9B39C4A5B45430FB1AB46E482173BA40E5CBA3
C202212105DD6573DF266648AE0BA03A4BF11212C01EE33C0FA51EF3A6F68ADB
7450926935A3C58DDB58BC388CFD607259CC1ABC699ABABF4B4364938D03DF0E
6738A591E3D367C55B6EFED2EF3BDC0E3BF60D03A5807B8DA2B7CB0EE9CF38B0
E4512FCC7D373AA8661AFD7113F9C33FEF9BBF1E2C44AE53FE34D50F4EE4FC8C
B956727C271C1865A0BE764BDB202DA9DB66C04533BFE077BBE8EF2E0175B410
39C7A9D16CC70A9A8E00C546998C80617FCEF4BE86C2D144C21EB300A3DA223B
578560AB4035E06457BD06D9A638F877C32D8710CE703AFEF951178061DC2302
3928598E116E79870C074586B41CDBA5EA3DCB791582080320AA67A92EEA7FB7
366A9865DBFDE4FDFEF9ED2D0C52C63C2A2BF20D37168571956DFC0E8A22F65F
A5CC29F03CA5FFAD3937B600916563860F2B574F22173691C659957D08914383
F5C7099B93BCD10716A9BA36296BD8454FF85AE3D62A862C9FC914C2A01E4F91
D74D9EF01FD330A0AEDEEB6186243B7269BDF5B1F16257A48AC6F1ED6CEFB7CE
845EC24D23CA65C432CC202E22374BA424E5CA6991D86AD9771379408256DC7F
E1248490FCBB4C004E71F09C3B72B28125BECFB6F174FF5F6926E4EE5C7AE78C
084462A23DFE8C37D832D7792A6A649BF9E683D83B151BF456BC9FEFAB078251
6AA3F62F494FE88D9C92E3A40F7BF9FAE9859CE2227C423CA265F957C199FC3E
EB1B89BBEDB512526B8CC79F57169B75B1F8BF2DFDC184FEB821694D0AB2F7E2
3E0144012711E25E8E1ABA38FC21613A6D3AB2B14DC25C98CD3223FE152011C0
AF3E54D038FA68584912F81E988F614184F8799515D71DB0CAB88C93C26D4AA2
BBA91452C8269F0021C9AB09FF2D38E9919F95D090E1B88485DCE79B9FDA11F1
E93841964A501587658F476439EF2ED85A267C154241DFBFCDD7F0E03E338B56
46DA7D8F3577FD9994F9430188E1FFE4DAFB13258E62F8F4ED170B65A9C82C81
DB947712C231695DA8BE1FCC0989ECE1FD27897C3C9262D980F66B2B99C379E6
A86E18597C0C18BF05E944AA0B5BAFE8E689F1F09B6F40175198EDB1A7F0C184
3D9E86D3FE5822C538D8671A355E2807D8DA6ECB9BB71EC327A1E5603BB82BCA
CB2D9871F829D412BEC7DAA865759FC7FC775D62A0B160D5236B4965A6E5EE3B
463EB6209170848CE8BA4A2B2AD0C66976AB54F1AA02C36A3AF3AF772FC161F8
EA6FF7B6E07089935B32566CEECBBE3EDCCA90E45CD889ECD6ECF61DB16BBEC4
6F1531B1E2CEDFB7590F8D52C91D25DD8A36C4472328CD14C283C6D1C440167E
7B649721BEDDA5D1AE804C03DA694030574A177C2C3A57414ED7E69E8DF3B8CA
0A93904103555786F004A657AD7ECAED13C2AA117B385C99DCEB0AD16065AD11
9D8B57411A3203E73750D342CF1CD6B1974E260CB715DCE545BFB7259A79E1DF
1B239615EB317B62955F2ED1B58529D126A8FDAD45A0B17A402A7DAC0C053F4A
179D353294B9DA93B279328EFDE66662667FAA823BC7E449112DC5C3C2C86A7F
309A8032138868E9A73BA6BCD3F8356923DE0857DBDA09EC8D22A20B5D658BA3
2E82F4B2424FB3231946715BB192A43099DF02E6667218BC1B304A93F4D60EA2
F96740FD6B0C34BB010D5CFDE0C251A00A426FC47739CA8E931FC9FADE7136B9
F9648B550D18FDDA4E523D6C9BFA18C59A5A6CBF6DBF28E17EC3B29B2F5884D6
55A3E70D2A31341DCD4987CC7785386DD0A2008175E24633DC90217AC1C004DA
ACDBE353B8536EF49598A29E3A8259B0982C08DB2BEA8800EBE0F35C7CB0BDEE
89C8051FCBA92814646495E799D43B3E21C8A208E5CFCBE2130253D9CEE385C6
4F84F3E1D437537CB468E36C2ED1EA2198641AE884A0833458B84A19870E8E3D
475C9B2CEEF5C051DCFDC8C0E1B1EEA08E2F1758906649B2BD297C43E7EFD974
3ABB4A2C5C1031A2F65B49E92F5A96A8DF3E89FE8EE38FD37B9D56B3AA8B0050
482F27B78505D4A9DB90C56363682F5E524200945E08B538492DEED01767BF00
6A049FD3B35074644BC8396E58C2DE59ADD8566ADD83B7F29E7DB217FAE46202
62AB8C8C70960063D174836A0C0C356A64375BFD766080E7001AAD104CED2677
EF2A96EEE84615E76E879B335590D44DCD83372C054807665B00CF75E8C693A9
055794CB30485CB15220BAAB79531BDF77463F4BAB2D2FF0C81ED96D01192AA9
535104F6CFF15E265662F6BB4DCDFABC0062C5F1EF9F0A8AD395AAFA8B962DD8
E21700E146B8778501E9F3DFFA11AD7311DE1E29EEE0633A4E4AC35EEB9E8C3C
8DB596597023DDA8F12EFE5C3AFBDEECECB82958D59954543FF882A649CAA939
01D3DDC3B86C2F5FA878BE7DB3D9A4A99ECC85385500D7AB11D246DA63D7A8CC
232D316BC1ED8B6A4579E8B3F809B28E42B2F70695D81DCBDB0B582CED604AC0
5B273AAA4F96C735A6AE48DFBB227F3ADF6A0FD2FAA060532A94C468E66F5EEA
4954BC53B8EEFB121487E93370D716331E4D17CA6A32E3E514D97016293B0B89
0CE78953EB8593CA1306FD943AA45C58D8BFDC150A6ABF046105231E68193C8E
EBEF41957CC145AFCA7CCADC7346EAEB3E7B2196F6C372601699CEB9FC08D35B
712D25703B674FD0E2C5C0166B7AF4B129EC8A566AE2ACA37A3C0D7D872755A5
2DDE30634367C7088C3D6018568B83B552D4F6C8AC4EFF1C61035C2647DD77F8
7E65BD95ABDCE64DF3F93859391E056A4B4C0607087D6BC71572E81736037ED1
2B579C05D15EBAD3E15B62A8FBB6AD17471B4F85A6EDEFAB5D4480194A583957
F9D7C9F9A75E31D2170D0070A19E73D2716518DD599A9E7EDECB991D37BE937F
40B1CD45A63C222C35C66366BD24D636642BB9C700C50FDBF4CE511A02CD57C8
961D1E0E07D268F33D468289199EDC5A53559CFFE30F29AE5380A60C1E7F961F
8F1520B5F198D086E4E128E37686FA693750F59BE83CD62C693BE071CE3611F7
D16A1D59A054677AAE23BA52F41B2C372BA8328F2C18657F8F06CB700E39FB9A
061BBF1F4F1E0DAF4855AE62E2B444E342E205AEB624B73650E2CE5BDDA7CB59
9B4D6AED166DACB4C50D95DEC3B7167E36AB227E8DA56CFA1CF350EA1C441A00
88E5E96D6E293DBD6269037326716A117884CFF526BD28FC378A96ABCE3AEF89
129037B97C2C1BE6E1E3B6EF570259F37362B3F6A8CD404AAB6BD48DE3C2D414
1D203BA99AB75EF4F2CAEE0586CD8459BEBA297114F284CDC5B9018C7E1A82DA
613FE061D45AACDF0BFDC53DE14A04971B1CC91015C3A80A9CDD4E9E76A30B53
B181CF2D30C7486438C4EB34078DF387F1E1BC62F0614AC07300656253D7494D
498787ED3D494660E212BE409675EEDE19C0A3EDE206BBBC649977C8B87F1DF4
6E3A38364E7048D84E759A3577EF0700E2D391598A8010F4457FE0BA0AF38FFB
9D87FFBC1838F95BD63B3C3EFF0C9F6F20645A48B28504289B0A8A525417772E
F8D27496FA6BC5E34F5EE466A7F1B966EFE9E1F451E8B88C4CAB8F861BD5B922
D3634AC0F5F894E9F02A16FCD837103FB6056740AAC999FD099790A32EF1399C
3782CFE02530E7DD663CACB73D17608A219866DA73C8F41822BDB734532124BA
F0C4BE993E05527DEBF02208D82F3E7DA123124CC6ABA152B714CE4C80879EEE
F41298F75572012053009BF1C4BFACC6B06F6E3B9C9FA3203275D99552BE2C55
747D7A53B65A153627F1A574B2E19BA57671F5B7BBCD7A45D53D1167436D4F11
55C9D9BA31F41DA94A5E9760089303EC080F6D1AA3E783795E5B38EE2BED2EF5
D6A8E0F4ECBEBE5CBBB350AE49611E4759D33F26D2B3B216B1375B83F2F6A413
B7E3E2541A2B5AF255C81A814D2B2415DAFC49551AE989739C6ACDB824FE7DB3
067B2120E69D9B6E01E54780DA2989DD39B2E3F48903FBD8F1DF058D648AA8A8
AEC21CCA88DD0D589CE029AF3F3425EE41A1AF0D8B5D3831A23928818A41B97E
7153BDBBB59C3985626BE265D5B74590C27AE8DCFB9CA60CCF15567797367A96
07232522E42E8B1A18559F7CEE3FA6E9BC02805C9D4E08869D381F1E17A0D9A4
326E5ED243727D847347A6F35DCF3D7BBCC215A8293DC5F226786DAAE1E7C9DC
A84F6B9D26BEBE19D2342EA40F813420BF869789B14DD0AE5CBDB33AF6FB3481
6D684B0103650C647C3213DE1A9A75B508CA53660C4FA48E028A18C58C5C14BD
8E1913F40D3F8D619DB73942F1572DA8DA013AE1DB0CEF5F9B5A7D7E60B59E3F
8B4CBE053AD460BA7AA6B4A438767DB03C1541DA919CEE4B6B309E8AB0C5541A
04F9502C7E0BA40DA636ADBDC4341CA471A102B496465E26E5C9BC18C52B18D1
4BF245210202EE20D2747FF576AF1807559F2A430A703529E57715ECD2DE6A02
8AE9841E1BD8B87A8C677E0179628D15D35A5A6DB2F16709D236ED766F7BBC1A
EF7CE452B817E20EF2E4020460666D6286F41BD181159ACCACA452A66ADDED3F
9AC29B23197E5B7C207362BAFEA44E7516A6BA599FDA565025ED992F4DC539C6
32B4AAF194233E8C42E490F910D9F39CD1D551750AF081A3BD1663572B6D0DF2
0AF1593CA1908D3ED287C7706E10423336B4BE0E275FC6D5133F6B089ADF6F5B
2E78EEDE07F53726C5A7DC63644BE7BDE5949240FBCA2AEA86D4ED607CF873EE
1DCD953EFC6E877055A4C661CCD911359F01441A820EAB4AA92D65153AA7000E
6E44B17B157768FD49357572F1DEEDBE15BF54A1D12FC36740DA0E431877E0A4
ADF2C50165192D221E3D64D048CE938C0C5E90F841F815021EC0FDC5460BDFA9
63518B41F871D22BC71B4B30BD4707F233E9294955F47EC698F57E587980AEAF
E6192364BB1D57A7DAABD0402A31D1C5B55CC38C3DB2BC43F9472D300141375B
E136ABEB19DCCB24723099D68991459490E6619A7196EE55648E642124AF544C
464C371258FFD5D42E2B27EBBFB3746AA29E6C621D5076CCC5A6946FFCDF9A16
547C35B5538BC8E21B5D920BFA1537A977F5A7AD0B8C332B39C9EF2C6F92C678
8BFEBB8FA94301BE3F09D6B472391AC4649D5DEA30DA7A58E3EB549F041CA344
E4964A4A5B32B7771013F90DB76B1F2B7683FE525EA947685988EEC70124B6F3
449B9335ECC362E0DE9FB058F3227368A7F7A484CF3692979D20E5F65344C269
56E74702DBBFB7523913B0D003FF022D8E111CA1E73A29D31CFBA157B68FC0ED
A33E853A451FED40BB819BCC6DF726141953A8351D97CFC4CA950114540E791A
00F315F08C10495F5408FAE349D42CDBB4EB6543AD312BFC22198702DE9FFA6D
F6DE96A1CB987D9390114FCEB3A966A9FAFA1FE604CE1A6F285175DB3F8D9732
91DB5C0AF13C5EA729266042B1D09010D3A78796E8876589B44D38E6F078C5D9
9F12785FF0821B9A03CE5355A4B8E694EF3D0D69D3AD4542ACA31C52BE2E3877
45A0C2DD0CDE146BA38B49F4C61CEFBDB3033F4E4CA60DBF0AC827AF1320E49C
52D4DC197FEE670E99BF3BF1EFA305F3CE7733C373987B3F3687E56AF289A43F
22A8E3A31686A36989A5728A8E32C54CAFC7677237AF75CBE06B85793933FA1C
68C4DBA786393851B0841B9DAEB6109917FD2F3121137542EA87BAA5B3E7D67C
0A7AFA76C04DB9B341742848A7D7797AE01C72823FBA12FD215FE1D4D3A0D710
197E7C1F9FA4159D45064D955815FA53BF647E490AEA5FF5093EB4F98DBE4CDF
8DAD014E228AE64552EBD743D52A4E057A40301B5D380471303DEDF99570EADD
D954AB61900EA93EF5576CFC1B966BA218A294C0CC9E49A0942F5B156C165C10
94F3FB808C41B622082CF10EDC00AD942402EA14F0BC0FC51B5D3FD74C646728
0FCE1AA7F08DC7B007337B68A0C4ABDE463EF122A048F0E31121907F80FD4999
82A74E118138EBF7C1105CF9FA7DB7C5F6004D05FC24BCB41BDE210A8890AB84
36EF76A6BC0DF5DFF79385A5F086951A4114D8C7121E1CD1F42178549DFAE1D9
0BE03B94043CEFAC50616EC6DEE018102190DB214EF61A6CD72AC5BE42C5432A
B3F697AC88AD69009AA54732C78145C4A27A2D8E2F0DC60E34F48548B7A2E9B6
BB2712DBEF697634AD3C747F7ECDDCD060699BC22307A08AD934D41486E17A14
46CB452F85ECE37AC5A29688E833A34086048C1C2B7E4B17BD3E6C91A72AEBCF
86F821E8D87F3BE2BD35CAD01DEEA34DB56EE7FBD203294A87F234E09DEC18CA
CB4771359CA4CC4785B50FFEE286DACFD08D755DA3C06C18D6F300A87CDA03D2
F699BDDE1F01A861C909CC247E8464EE310B4B81C129EDEA5B471726DB50AE50
A37D9D87F8E7D0CE1A91D0DD14419327648C764075D628E89774D9022ED55523
23CDFE5DF0E39449E466EEB8C58AF2E1FA7D1D986DB43A90FB25667BDB2B79A6
C97BF80701DC7B6ECBB1591E46ADA22A1F1CBBA4F942D98F15EF0F29268753C8
4C9A3E83C3F8D581FB1359CE7304E593D300DC18ADE034CCEA5DC4CA66C3B6FB
884A6C1B224ABE4A1CE9BF35C36C68BFCDC9FF9FB1277223CE76073F008BA5AF
58EEBE999819962FECE188D97A0BA0D057271F7C99A522D0F03F66C22CB7BCE9
5AFFCBAFFCAB0C5416292E240AD8B1E89D2DBF79F2C7D190F9B4FF67DE0B2772
B05DA60F3D6688C6D3149F9E4ED09370BEDFFB517CF094E9451B7E95A7377665
4C6650ADBDDF2810DC9BA743ED8FFB140DDEBDD745296C9EC16D2F69367E2815
8C0D92EFFCC7FCE1D046AE4BDBFE3BA876DE6FFDA2043E231B1D77B442BC30F4
7562155E12B3BD9B2B980AA417533DA3860B8DA39B0BF2B8D14379A9D04CB045
3540544922333076111F584A1169DFB478EBBD17BF383D9EE24FA4D740DB8E80
5B3C77CBB239DAF54846689FADED004AF1C60822A90E77F05BBA24FB93C040DE
E7343DCE2AA58B5908B7CB84CDAEDA86706DABD84DB77E705E0001C925C4197B
251C0B7A55FD2CF13B2BABDB6F4ACEE49FFBDD86279141D880CA9B57FA9F25D8
04AB5A7D3B26E323B6A54E30186B2FCCC92B8EFAEC0ADA35DACE4489D17BD41A
7646582C559861B42C50EFEF1E0F82ECC4588AA1B9BECEB12D6A11A2F0D99638
099ACE904DF20D34327EE08CF7CA9B2D62213472A706853E9CFC0F5D830BCAD9
4F37A55FB1942ED1EB97CF916E2A0976D7C9C2E0757447943102458DA37248ED
DA253BA367664CF153B1A48F651654554EBBF68F17E8A69CD845477E3B9E8411
F0203E83DE3E0FA8E422E621C619649FAF3BC7D36687DB6B2FDA38B20099E70B
E4834A2CE64FB1941D8D5F11DE3978A01735A715041FB8987FE66D635762168F
FDF4725391BF9693711A1D8D7A272C1C361309C4AF01FF9FFED645BA707000BC
5F34A8B2264265E2575064E3F0ABF39BDCDAD7012FED932CF9FCA8CDD9ED6732
B57CD534280AD405E1C7E9CC43DEA0C20CFBD681E9D37C40A9E327D468C06D22
FDC16B5E08007C1C377A319E150D10A7665BB7306463677F7C70FE8CFEFBA4AD
7218C5E4F8441E7322A15C4FB2F07491AB57EE2855412C303AEA6B907060047A
7EBBC12D9F4D4B62CDB152319EA5F256818F9CDA83F6CB4D8C61D4146F5D583D
F388CDAEFCEF06CEA8BC0073567DDF9C3656D52D97566FF6B07020BE34719326
4AFF79C9F710A633FB7BE790B0EFF6CD96CC27B272AF00F5A943D6D842EE7F3E
B07F37968B1333D38DF13C673DD588E19C989508928A08882A02421FA581F9EC
A89B251289FFBD27C118054F0FFF35999144586C3CABE21D700041F7405ED921
9B62495B4BA854AD658E6B7C6990313E9F9BF16F4577F9F2C876A28FF0701942
4CE14B4C6A90904700978FFAEB08515EB4032DE7B356DD3272FE5C00AEE7005C
54990EEF63D046F0392B9E2EA57E24E71F0C1373E0BB73D4379DC734E943E41B
3761566E93E600459EBBE4CE6D87D38A4C4F844EAFDA71EE74AF872569C650AC
9F6BAD8905D99EDDC1A228D37AED24A6B7F087B2BDF7E1EE9450F089219161B9
605F5EA9DF230C2D9E6154F950497B1738092A55455EF34A1ECD642B3727B271
8BF52FAC6D34C04B138FA2FE4C8224F2E50DB9EFB77FDFA6A0954636FCE2317D
A044F00DAF674674AF4F89006666B2F9267A9EE1A8B37D6F0865F8265F103CB9
95D8F917ED4E9EF7911F98D51462ACC3A5AE0452561A9043BE84155F9BB60048
F23741C92E6D2A126EFBF47A44F3BD48CF173259A420BED3555862ED77876D92
010A4D3EAB199371E32C4AAA327B1E22EFDF998116C91F79A948AEEC640BB959
0C9FD5532A758919B7C91FD9FFA7D15DACC52228EACB2BA9A63285FE761A80BD
7DBCB17ECC16E9B0F8D0AF5588297ECE6AEA837F9BC2252FA6BE1642E03D2EE8
810B688E3090923F3879E4931EB834A6AC804B9E229AD2B0D0065F6317BE210B
CC37C0AF5716B81393BC1D789FC1CEA3CDFD650CBB9A48200B36513865C90004
8B27699D545DBD6016DFD0425C26A60178B8E8F88AC2511FC73FE1122A3F4282
494D17AA42FA28D50427743F9A0851D876AD0BB13B211ADBC860DC589087DC90
288B63788C3ABB5E2D02F5C28BCAA5C60CE9FC236F33220F534268D8476A83F0
17B2F479A440D568E305BFA18E3E354A95599CD10FA457B065CA91CBB4297C5C
69A600BF1792C96B3A6193C4CD3CD6145141800F0CEB95D1D7366A3FB12C8C4E
D44E275BCEAF35F9BBD7059301CCF8AB4DC65A0E1C2AD03B9B645A3A43A5CA4B
FE99E4BBA3167BEFE5EA6FD9A2B118E30F3A31F505ACD2236AA0DC46514DEF58
9D5DA0CE7F5AD1E2BDFBA05F01C3C4C355F24B6E0F11E89E18CA9939DA7ABB6B
1C7A07AA273F2F29EF2F4386F0C46562076F7CF73A84A74374FF68F77F2028F7
779BBFC94ABB6B02CEC9A7DCF01A1A4138F601E00E16EC4F20B33C4249DE0B85
F41E5E01D58DA4548CD3DC8247311204D23DAFEE89883895D45E9E23207AB3FD
E058B7F74C12CAB35096FF862C7B7773ECD5891ED4C507F794DA8536AC89C557
783EF19A904CF0EBCBE94AA777A67EE1831775CCCF1DDD719FCBC9720164D892
4A14B650392A9D0000082D8E0D9B365F189477D7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.0: CMR17 003.002
%%Title: CMR17
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR17.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR17 known{/CMR17 findfont dup/UniqueID known{dup
/UniqueID get 5000795 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR17 def
/FontBBox {-33 -250 945 749 }readonly def
/UniqueID 5000795 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR17.) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 77 /M put
dup 105 /i put
dup 111 /o put
dup 114 /r put
dup 115 /s put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9D6295729076BD8E
CBC0F4C1BE246922D2482233846A96D867B66D9CF25A1DB661141D36B8506E61
A022F9EF8BC1F2F674EDF1533E67A78CA29A612AA9268E113C5EB84DA56CEDFC
D7A111403E6E2A8682DB04368889747E003A124395ECF0C7FC81218552EE7C6F
60BCFB4120893528670D0E8A4117EA5676915E3591AE5652D003EEF67818A41A
8882E102AEEEBECBD15DCF632ED246A6A58B6A7780DB6F1F9AE3FDAC8344585D
E104F2BA2DF06D68945889A2A3B6C262FB53FC670BC5EB7C56887FBFB7AA7026
84115872CFB0652C6BB330447AFF8F0F665EFD6A41D6DB6877B08052F402448F
CB21C26BDC900636C99CA347B79AA73AFCDE9762A992CA3DDF7279E5C50F453F
52098529850AFB1F501A442D6A02E0A2896F81C8AC735AF1E7EE47208B4CC944
649DF6802EEE813F1456205C6126D7D0B1821AB62DD65468F3A30575E491623E
0054E2E680E4402E1C8C538DA389B81603BE88D6DC287A076F92B224CD58A0AC
44B8D490197341808DEF243660971F444A560C747BC6F52707ED42A99736ECCF
EBCB694A561C3A70A319D204CD40D402FBF937A00BBCBE85DD26C9E3F91B7D10
D85B9D314BC3AAD5A58B107F5F341BE2C53490924142566417D6BE03BB4977FA
6635EA58DEB9508E40B9FFAC75FF44C683680CF242FE210519C9BF92483B0A54
83F48341318BE16D2F8C988FE3DB2E7914581F579D5E323148A31E4ED03BC24B
C990372DF5F3B0C5FA32EB2CA4FA0EA33316569133C87697BAA2292E685C26CC
F8CD40A2366E60B47D47CC9D0FA29D2836011376A07F78BA7664DE96E775CF45
9BC91559A063073A4C2FAAD0893C517C5C46A1425D07EDCC2B57162E3A45103E
FF26A2D2F98B194256A4B052AAFCC08965A50EECD7B9E8F35AFDF7B6568B3983
8030655E7C2BEC961A2F20539D617626E8454E3FE9EBD3EFCEF7F63498441DAE
16CB509BF239FBBE25EFEF07A3E16C9C71EB8D9DCB8403916FB40FD7F4E1A52F
72F2DFF94FD14D7D49FE775390C17C37C1BA0CAF35CF75D682B7833A83224158
D54CE962CFBAFB1B2CA50B60CBEB1F8F58DDB2F5470C355ED9632342D9382AE4
5D33BCA3A0A25EE9E5B39BE5370E7F20684C664EDB48E7973FEDAD9676F9EE8F
701CD4D8CC9B9EBC06E8C86EB88AD56E15CEBB8E1930E8F711CB6E01D5D14967
D7E6C1BDDDE2C4D00384EF4CB02877DECC27AD53FC981338977BA0CC0257CF7D
B42E9BC91AF45D9722461EC3CD9DEAA8011FB855FE14B74BE0A102008EACA2B6
0E287BB4F466FBFDD6E65A5262B9322F95E20DAB875A10A84572D982E6FC7ACA
23C0C37E5EB47B8E69C07507B53CDD98CD1B6445E1699CF35B3DA3E0DC56BB76
F997C40E2ECE47DBDDB707EB527055960113F2DABC87FD9EC7D0AB36B400CE33
0D54D4F197B2830B43DF0AA802DFB2BF747A4C44B31FB708B2C8BBE1955A6A28
379C91AA4CC065A50098AEC0B837E180B76801865A43C74859DF18FE1DA1483B
C17843BF1C7E1B11A8C6D8BB8CDB1D552FE6A1FD0A696A8F7405F2320F8621EA
17C1A32056C45A9ED35D2BD12D02D8B26489CAAEBF4EF33B66FF4BD9B46E4823
6395831A8F3366EEA0D0EA88D612DEBF63DA7FAA24DA979ACC1A52544BCAA007
6C39946BEA6076ACF45722B2B8E4D0823EA2D12B14A98367BB0433A21FBD9F94
18DF298C56F67ABC9DB1868D431A854DBEDF8E1F49E359A545C75A7AA1FA4D5A
50F1EE6B45FC68ABF65FFF257964E4E50D8B0C1FAF498DFC554073697C2F219D
4A68DA9E873B270B9C56F0DDBC9927ADAF9203FD684DE615F68C24ACFFB44690
89C0D5322049FA69E7FD00EFC9C9B2BD177B5B339907F81C31496662847BEC1E
56B5DCDF4FE618970F4268F475B2EF7E0F28CC986DDF098E59DDAD818649CC35
4080C0867A884B8177A6880F06F1E5CC130AB4243EF8DD8032FCF390765BAB1C
1F0C9728EEE261A09F8C1D7ABC7A6B1550551BE2A7D19D45B656650DB00B3A5E
B3E1186043E173BB4DD5EFFB379654F88146382AE3F7196F099BDCD6D245FB6B
AA2FA9B6CFBC9F0CD52798DDF2F13874BDE5B124DFFE0DD93E24C9DAEAE4C3BB
71A9A13AE2860F620B4EC789F95221015D9C510CB4AC775EF69DB9E32E59C896
1AF82C9F0DCDB4812A37761859A3D3BA0CA57F244489C78065346FFA78F5F7C8
0B2E8CBA9EE62FF5C27369D0BCD52857D40F1FB8F8A1441B83565A4150AB1945
0B54D6E49F66389E43096269EF5CDD39526A288C0CB81E324E75D326EC9A182F
2CD966368CE300B41873B08E17C3E6BB51804460D2562AF5A12339966F44CD09
114C6809AF246B5BA6937631842CB9417781A58944B6BA4FCF961465C208957C
81A662D560D0F81BD3CB53C06B6D979F04F6121CCFD5D52702CBF6C70C01EDBF
2040AAB9CB144321E68C4010E0E98CCA2603EB55DD62E881DB621C37EA4108D1
528ECC7A0121B57C6BB1E26F8AE7161ABA7E88256D2D6A8B7CDE2E730D137493
3FF628EF6030DD2330D747FABBA03B44CF600418C245C388F33EC5559E7313BC
4B530C4FC12530D38B27D6408548F25FC084DD0523B27D29D6518D3115AE7755
37162CFD4CF528214466FE525B13782F9C3CD78F3D6C7423E63A134C0A371F15
10F4ECE1D482C647B563D3D15586F80BD9DF7381BD53927825D5AEAF762E1CDC
3BD184F345029A95B3AD4D1B66E79AB4F0809418C0CFD4D503457A190D02F134
3F57FC04FF655AEEB783D6791E4EC300755861837D3D50649F6B7F60766211B3
8148F8E575E28D6C2DE75B15E722ABFC6DAADAE53D89FD295352781DCC2CFF6D
982F6DB778D6FCBF1B7BDCB53F3A23AE6EB499BBFA96E8BE04C3C8E5B660EF24
01EB842DAEBE979F2C2DB72AAB4D21627063B1D3C6CD40944E4CB81655698FBA
A343766CB22E392E5DAE01DB33A00918D6DAA07F2F38B336A3C5DF3708865E75
0DE04D3AFBCA27A249E97377D5785B4E28EE0E93F7D353619C200DB967372ED2
153BF8BE945474266EB2FD30F80042A11B7E3586DE4AB1FBD4A741D36DE583E9
1CA25DA345520AA60634EC819E7EB493CDB128BBADEC3890F055455F060A1100
D5A41D7B180027E08AD6EE7E393DB9F83799544404FE397F557773BE6A130541
157C0EB37E036C94825B5090EF85F8B4E3DB72895D86687758C20EDEBD6D1079
196E9949DC6ED0113571C70B150B37E446E319EC54D44CC0CF6A14760953DF4A
D0E1F33A54D240E236AB63B35BA8E071D77776BE5B9312245F2C6E4FDB4312A0
0D9CF723E7D9A3D8546C4739C00C301A89ABA60A02757AB1A0AC40B24CE6CF12
5850485B11E16646D7150795EABAEB08364A53161111F46A7BC3423A0D3BEB69
BF15726C1F8363914945DEEB29CB8766328318AF3B344FD6D77BBB92BD7FD161
93356493D4D8252AD125708D47C124E44232FB2BF7DD75F87889496DCDB75D03
F58A57D4122CFC194B75A9E9C4789C9A33C0435FB4ADA16AD4A6191928D1663D
05FB8152C0AA176FBA4755205F8A66713404787070757D3721ED6E6D55A59DF0
C92BA8F05EC7BE05D0A2E66DE85E75373483EA3BBEE0F0DFC7E2FA5FBAFAB118
058D095AA71FDFC8AF37E5A98406B64E58BF476C6926725D7EF3C2346CE3F662
1E5A4A18D966479A37070859014719456EA2C7F23E68E1AB2F25ED3A0C00A18C
DD403506923BC983F89CCA125780DC76A411472E38173BC0DD4CDA7B43E13419
B5AB0B9A35E77C58BBA12AA4F5C7EBF8A29996B059E4FAE6809565570442AEE5
D56CBF4407E1CD9A4398B1F3ADFF023F64B230E3D29F526B62D964F5C8DF801F
E94295AD85BD9E1C18E6327977260A871E921C0745CA06A263E335E344686E7D
D6FE3ADB4EE0A7E462F3C00873C3E95D183CCEC71C0E5DC1D2FB310B28FC3611
67C23DE336C374F72368F4973052B48E39969305791C986E6EE35D0350571860
3A8ED849712CF21AEF444BA390644E8646CCA16559BA4642A5800827A0DDC453
7CA0818BC47DF6348A5209A2F0A10CA39840CE6346E89CA0E842BE8692DEF25C
4623A5A0E0B98708B9492E9F564324BB3872D6B953CA59E9F393C477E2AB85EC
C557D333E88C111CF995FB79D9432DC94C2BDB3BFEE13C0D7D1BB920DAFA6158
8548447AFC65CD5515D5021E0ED7D213B0C08C35BB424AA91885CA023D7AF767
B83E619B15DFEF5588D2F0564296E14B5A6ACE03751E1016105C51BE76EA5ADB
4167BAED2A8899031FD7BA05C410ADA25ADD94A787EED1A7AE133B0568B1DBA5
44B41BE013782CFCA3D81E8E8210DD506ADFCE7DC7E792EFEF438221164A7D1B
5E7089F476240C5F94988F081943F24DBF7CC3D1E58CB89E1C0C1624682CC3D8
C95815ECC9183A4B3E353C7F920B7E64086E01672DAA7C8A81319BAA03C1FBB7
8E5E84CC5BAE0E107754794C755B7AF00953504094E1A9DF357D51B578259613
8D26F0BA26AAC459BBEEB90BCC98B865EDD26AA4DF533D6624EDAC762C446B6F
CF9F86DD2D8989D4655775E662B93BF51805EE3CBA0AE2293D95F166E80973CC
82C53042D0249C598B0821E9E7F218BA6114EEC86C158F277934F2651490B723
7F0D0288560DA5BEBAFDDF243048E590871AD18B3B220EC56549004DF122AA03
BAAD6971D790BC644369FDBEE74A324083CFA9496C2A333774F06E35299242BC
F4B26578907CC5AD1893613F2B8622CFBB7B55810162EEBFAAEAB2A6D69CB72B
D7859C73843E665125FF450631F32E64F13A6207F368103C7A7318DBAF2560D0
F1CDD83C3E48CB30C62AF1E0896E1962C655D9ED98E1BB38477C1C60ECDB6B95
067D3A638AD43EE886338F7AD2D2A574CE6FD2E21F6FCB4220EFEC85ABF8272A
82081CE70E4390A74EC717F1DDD168F4A4A080A79EE2ECE0F98A96871DA4B52F
78441601AF47763C2219F5A167604C32F478D498835EF3A6167936994F7C7139
3019FF43C97E7978D3CDA641C1E391FEA572D308E759F28DDE2B40B5BC207A4B
C5EB6A93EEE26782016F8B6534420BE4D790A2E1A65B6CDBE9468152230384FD
14E9AE84418A44F94E6825DD7D77D0BB5486DE26A692B3DA96C81FA4440C5D44
8E7F3CAA9B8DF38F87E09C4D78841F629F78F4E7CC8580CC44E59E5D9AE8B2DE
C0682F793AE7AEC12A8AE688636197E8A08FEB70EFDB6203681A60223B9B0D39
2DA656E5E99B82130D4BE38D7AFE18568DD30B0CC3C73C1E2914ACE11A65334D
A9F18135E7B86157122CD221C33C62012FFB16D2D2F3473A53BE3E7B9FD4303F
66ADF0B07155C7B9B002EA68C6AC7247EB3CE7D2670A60138049DAA964F86A05
22983EDA7242E6BEEB90DF61C937399B2CE1061DF1E551CEED4A80D86C2D4649
C9FF9A1F93E96773CD392478D5B70D5336A03A274E0A6EF44BE8CB2274324142
706BC2E340DC944339D647961FD7BF29944503B4AFCDC69A706AA6B0F6AB2CB5
D220A96ACC1EE5E7826F6F75F044224E5260D581AE761AD0C752A06AA03FD935
FAD65C9EDD4E5505396E331D45DE88F0D1A4303D766ABE0702C17E2A7F53C0EA
96A4DEC5A6B6186F5DBAAB05DD78E38AFE630465BEF0EC66ABA9C1C9232214A9
795D105C33CF069F6BE20B179F4CC9F484AB63ED25C1212C457DF62CA0D56E20
608572216F2D4C09010B03A8AA6D287C8F514BEEDC1C912552CC2489858BF4D3
084882CE4F4B6FB9EE27C0168671E6DA154018ABEAD013C88E1D3EC918371251
63D95BA0FE20212C20AD3F4DB614EE36B488A3F55D94C1EDFCA8E68E54A1EED4
7DD168DCCF07C3DDB5E2B499DB5635C5C5056A7438120DB4839427D07F96AB8E
F842E285243E40259F6DF029E27779CCF3D3BD7206B2C341045A5A4AABACC2A5
91C6830FE05ACDCFDE99046F16F2AC183426ACA4A89FE5F09B7EB2F811BB5FB5
AF073BDA2886070B2327D582DCBA66B47E8948C3BE05E837BE4B81402A583403
74FF9E938F0E9DC3B1CB81B93DFD4070F9EBAED40BA570DE8F9A5C2C0A097311
22A6065139A6580E332473E9410D9F4C734794F79E41D0D437CEC7381919DF6F
A24B170E2BC97A6396A4E3AC3D844AD6E2B8FCE1C6AE97DFC5319F49130C3D6F
AF2541EB2384D5D4CCBEB976846EF8C2165DBF706112BDDDEC9A57D157F5996D
95229FD5C71B885D16B177BAB06B9DF5740A45C2A005778EE879193290419C0A
A4A339029E37E685B8A05B111DDF94AC19B1D85C8E6026E57E3D3B373C08557A
F96E6FE3916695ADFC1F0BF5D558565F42A71C61ACFEFC9026424397F0646642
7EDAA05794BCCD164A645860B57EAD53CB6899B18C6E9496EA4DAB0A0C272639
DEBC4FCBA94B3BF123F7771F602E7667C8F56E12429669F2219C7D8E294BE07B
71E88EA62F5616CAAB7C0198E6FF12A348E36B306FE2684A401399431B6A84CF
B46EE4BAA0F4099E65E9AF3B70274EDD6B6524F4FA38C23F9CD5273EEDC8C6C3
E7312B6E0497C05AD3F3C246638F01387CC11DBCBD287ACF54D8E24759F51415
35ED64132EF4158F54AB9F4D567482B3057880490F805822F71E7E2C52F7BC38
8B1F803AC3731064B90E5E97AA3351D17E73DC2FE526CD6C91158636E395867D
C1150FD3BD12493FFFB813AF0D08C8ED0B7418A2CF90BD5B783364358605D075
5DEA95A9299C0654EFB28E2FE8A41358A0DD124D0314A27558E42ED5F2D74BB7
056DE04D2CF13B9B804A3CBBA29BC155A3F18B8B48283194C33CE8291677E1EF
0721138F8E0409D49BB99F217607586D2DF00C29A25536E21924B4CF6702CF85
C02DFBFD2AA4DE3DBED1D2C02E21052A8D10F96629D0D18154923638FE0C48BD
E2DEAF11663E20717EA77A5453686AAA39D6FF7919AF09B1AD956FDBF734F49E
262F3076F62E77BD45122B55A5913902D9F91C4246FC235BA9C0FA4A96994291
830638949BED423387DA2D455A3C9122484EFF27F5367D1D3DD27D207D973815
965E1CFF36F43C653ED406F65348671D9FFAF55BA3FC266D438AF473181B7801
164EA3F04FEC870743195B3F467DE36B3719BAD9BF15A18637A314C887D46673
445BA3C212749B0A33136FEE9FE2C9A13D62E7ACC96378D257FBE0EB06AD4D4E
D41976AB92AC720DFD33B0677062C32E6F5C992A0324FD26E984B5341A58C190
D20EC3F1144697D514D9157340A6C9F82E62AD8CFDEE59F6FF86C6250CE33D6B
BB82DDB4F65BEFC6F6D0E4044F7BF307CC346E2FFD191846E3CA288C6F91CB71
5FDE855FEC5E38816CC635C470BF15263A10A409F0BC4877F7E6D4C223E3564E
E7BB5B320AAA5AAF4F32528F7413BFB97C70FF5E6843E1FE501472129BC9758D
7531BE576C75840CBC4CD3E6D9E5FF52559B68DE6E7827128BB2ED1BAD43F36E
A0CB68C1A147A7093EB02062AC5492DB7EEE08B1BDB187E15339A66269E459BC
67495937B4317AF66A498923322B087ECF47B601C26E253D223A784DB2D204FD
0668BD403A73723848018B7C86B627B9AE0BD9038F567CD5F670CAFC5C4D86FC
ECA211B713ACF8C1370191161CBB6C2592E8B9DBF3471133F2D9A60F15D72F9C
5E5539D59A6A7E124D9A38A6FF6EB7C71990716F88E1888295584F17D49144B2
B57252D7D87CFB7BE009E0E1AF68C57E2041CB837A1F9DA290FC07240D616876
CBA29ED23952F977F27ED97503F6C6CB48DA6611E0ED9D90FA865D099740C6CE
8A5DDBB1D6550B208321C365A5104F9ABD66A9238B8A2106AA74CAC58D1163F1
DC4A62013C0F6DD8A3E8E1A6CC6E553746D570A744863FD8EA705890890AC5BC
2F0A068C740572F045B32289A2AE66CC44A1C13FB8BBD4E1834995731D19B47E
7C2FE360AE79DACB95856B01EE39EB3C7C9EAEB3D47348C47D928BC883B8E760
6724D80DABC4D736411942BBA8CF08157F21D63C18924282193C5C8E44E09048
FDCB8DB2E01C8A496FEE2CFC19A3A0EACA508237C8BD988ED6D33D01EB548B14
61A546886AACDAFB7C8CA69056B1F428D725453ABF05D12104536208331EC782
08FFBB9FABEACD6F20789A84A6571F570169FBE8868418ABE8BA6B4B1109003D
F40432603F183246F03770480FBEF74B79610E2012F15D583CCC8DE431731DE8
3E9913696F306C6FFB84391828F52139E2AF0B05A15243AFDB98092F0B6DE6E7
1F3FC5BB5E0F95951A1214BAEA362C1D6730634615064A7619A369C56F5F6CEC
486B1D8B3468EC364F7B618577D9FF159553174598AFD579ACD9AA9861A85C2E
7E5B4F08327D5B3A1E8379C66A14B734286D4ABD4DFE528130F760C5FC687A88
0869EFDD6B37E96919487D6EA4A5BE920BDDCB2D4BADF43F5E970A75A1D81B6F
BCBD078BF2E498646E83336229F912013C692858352919CE85CB80CD94465F04
49A765F7EC2AFECD05EB6B8AFC110EE4081E99309ABDC421B190455ACBFF3565
C1BD426DE3CC93D06C9B0401477C8B5168E0D567FAD3D02F6CD6B6C3151DD3FF
2E4772D0A979CE9359D45B4979D29BF7F1758E2F7F52F393BD795D3EBBDB5BAD
8F770EE9F951DCCFA35F61825533EB9E4D70A1FF1EEF35962D2B1D6DE0A4862D
B618BEA02E8E5B215E48E914A6496CD9BEEE7EC06AC99702A7EFE135FA3A412C
F1CAE182C74E2541C165D5C503537B60400B0637839294EF47CB5201F74520AD
CEA59EC8520197E8230C9892F2BFA914FE8929E6BFA124A6199902D82B25E4B2
FC8CACB36A643421ED4643D6A2C5EA5783DDE9907229DECF3FDEC659A8A2CA6D
5D4C1C0720459421556F5BD5A981385DF1C5D1849CC8B066404B4F9166DF07A7
3AB769B9231C83F66A78B4BEC68DEE4EE751BDF08E4C140E163EDEDD24FC2AF5
4C6D914962148AA2999C213BDBB1573038621FBDEAE1EB1E9254E03187D9089D
036DF4A8B39333A9F97B8DBFAE17E8DA9B12AB536EDC48CEE8292B7119DFC10A
917A187050F7B86E4E5CFC0015D1F250332E45259A0D8220471DF4106BB8521A
BDF763806BA31F3B501FD76978EE0EB2CD7601BDEF5E1DA197CE1D7590F72B0E
7AF0BA05A54F2D1D12F9D3BB37A165FA0F03CCAB948FB6DF22F24758983997C5
D024792273921B67C752CD3C8432F237A99618E39B16497D823B5D07832DF3BB
89CDD1152BAFA30BB9F5F2F4C8D9D9807ABD274CBE75857829B488F8D594EE3F
0FE17B83C891413238D4789EEF1A46F44F408FCF782E3EF18B625B90D60273D3
A0362FBE4A5296DDFE1391D3C66F9C50A7F58DF16D280E79FF91D76A8C5698DE
2076A57BED419D2CBD4783F054F636F4F83FB801CF88A1A712AEED43363F3C10
D1D994DDA8BAC815709C22C32F40D8CD0C69678E0FF0524724A7647F3484D0EA
0B39783DF07B9BD81EEA641669BFCE19A6A33603D005C6A210375AA06FB8DB6E
0F20A73F1640
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (Mirrors.dvi)
@start /Fa 201[0 54[{}1 66.4176 /CMSY8 rf /Fb 172[62
18[83 44[62 19[{}3 83.022 /LINE10 rf /Fc 167[83 21 19[21
8[83 33[83 21 19[21 3[{}7 83.022 /LINEW10 rf /Fd 141[32
8[24 105[{}2 66.4176 /CMMI8 rf /Fe 237[45 18[{}1 99.6264
/CMMI12 rf /Ff 135[59 81 2[44 44 46 2[56 62 4[31 2[34
51 1[50 1[54 14[84 5[67 6[74 11[56 56 56 56 56 56 56
56 56 56 34[62 13[{}26 99.6264 /CMBX12 rf /Fg 133[43
51 51 70 51 54 38 38 38 51 54 49 54 81 27 51 30 27 54
49 30 43 54 43 54 49 27 8[100 73 73 70 1[72 2[76 73 89
61 2[35 73 1[64 66 75 70 69 73 1[46 1[76 2[27 4[49 49
49 49 49 49 1[27 1[27 2[38 38 27 25[54 54 57 11[{}61
99.6264 /CMR12 rf /Fh 136[117 1[90 63 64 66 1[90 81 90
134 45 2[45 90 1[49 74 90 72 90 78 14[120 1[110 3[97
2[60 20[81 81 81 81 35[90 13[{}27 143.462 /CMBX12 rf
/Fi 134[62 3[65 46 46 46 1[65 1[65 1[33 2[33 65 59 1[52
65 52 65 59 13[65 4[88 2[91 3[92 24[33 46[{}21 119.552
/CMR12 rf /Fj 140[62 61 2[79 5[43 27[146 77[{}5 172.188
/CMR17 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1624 502 a Fj(Mirrors)1458
798 y Fi(N.G.)38 b(Sc)m(h)m(ultheiss)783 947 y(translated)e(and)j
(adapted)e(b)m(y)i(K.)f(Sc)m(haden)m(b)s(erg)0 1358 y
Fh(1)161 b(In)l(tro)t(duction)0 1577 y Fg(This)26 b(mo)s(dule)f
(`Mirrors')g(summarizes)i(and)e(exten)m(ts)h(y)m(our)f(basic)h(kno)m
(wledge)g(ab)s(out)e(mirrors.)41 b(After)0 1698 y(this)36
b(mo)s(dule)g(y)m(ou)f(can)h(pro)s(ceed)g(with)g(the)f(mo)s(dules)i
(`Lenses')g(or)e(`Making)h(a)e(parab)s(olic)h(mirror'.)0
1818 y(When)i(y)m(ou)f(completed)h(all)f(these)h(mo)s(dules)f(y)m(ou)h
(should)f(b)s(e)g(able)g(to)g(mak)m(e)g(y)m(our)h(o)m(wn)f(telescop)s
(e)0 1938 y(with)d(the)g(help)h(of)e(the)h(mo)s(dule)g(`Making)g(y)m
(our)g(o)m(wn)h(telescop)s(e')g(and)e(explain)i(ho)m(w)f(it)g(w)m
(orks.)0 2271 y Fh(2)161 b(La)l(w)53 b(of)h(Re\015ection)0
2490 y Fg(The)26 b(re\015ection)g(b)m(y)g(a)f(smo)s(oth)g(shin)m(y)h
(surface)g(is)g(go)m(v)m(erned)g(b)m(y)g(the)g Ff(La)m(w)j(of)g
(Re\015ection)p Fg(.)41 b(This)26 b(la)m(w)0 2611 y(states)i(that)e
(the)h(direction)h(of)e(incoming)h(ligh)m(t)g(\(the)g(inciden)m(t)i(ra)
m(y\))e(and)f(the)h(direction)h(of)e(outgoing)0 2731
y(ligh)m(t)k(\(the)f(re\015ected)i(ra)m(y\))f(mak)m(e)g(the)g(same)g
(angle)g(with)g(resp)s(ect)g(to)f(the)h(surface)g(normal,)g(or)f(more)0
2851 y(brie\015y)34 b(the)f(angle)f(of)h(incidence)h(equals)g(the)f
(angle)g(of)f(re\015ection,)i Fe(\022)2582 2866 y Fd(i)2638
2851 y Fg(=)28 b Fe(\022)2787 2866 y Fd(r)2825 2851 y
Fg(.)146 2972 y(Figure)e(2.1)g(sho)m(ws)i(ho)m(w)e(a)g(re\015ected)i
(ra)m(y)e(of)g(ligh)m(t)g(can)g(b)s(e)g(constructed.)43
b(The)27 b(normal)f(is)h(alw)m(a)m(ys)0 3092 y(p)s(erp)s(endicular)j
(to)f(the)g(surface.)43 b(The)30 b(angle)f(of)g(incidence)i(is)e
(measured)i(b)s(et)m(w)m(een)g(the)e(ra)m(y)h(of)e(ligh)m(t)0
3213 y(and)36 b(the)h(normal.)55 b(Lik)m(ewise,)39 b(the)e(angle)f(of)g
(re\015ection)i(is)e(measured)i(b)s(et)m(w)m(een)h(the)d(re\015ected)i
(ra)m(y)0 3333 y(of)c(ligh)m(t)h(and)g(the)g(normal.)50
b(It)34 b(is)i(imp)s(ortan)m(t)e(to)h(measure)h(the)f(angle)g(with)g
(the)g(normal,)g(b)s(ecause)0 3453 y(in)e(doing)f(so)h(w)m(e)h(can)f
(apply)g(the)g(same)g(metho)s(d)g(to)f(con)m(v)m(ex)j(and)e(conca)m(v)m
(e)h(surfaces.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
699 4703 2363 4 v 1879 4702 4 1182 v 1880 4702 a Fc(\030)1963
4681 y(\030)2046 4660 y(\030)2129 4640 y(\030)2212 4619
y(\030)2295 4598 y(\030)2378 4577 y(\030)2461 4556 y(\030)2544
4536 y(\030)2628 4515 y(\030)2711 4494 y(\030)2794 4473
y(\030)2877 4453 y(\030)2960 4432 y(\030)2978 4427 y(\030)-83
b(:)1797 4702 y(X)1714 4681 y(X)1631 4660 y(X)1548 4640
y(X)1465 4619 y(X)1382 4598 y(X)1299 4577 y(X)1216 4556
y(X)1133 4536 y(X)1050 4515 y(X)967 4494 y(X)884 4473
y(X)801 4453 y(X)718 4432 y(X)699 4427 y(X)723 4785 y
Fb(@)734 4796 y(@)841 4785 y(@)852 4796 y(@)959 4785
y(@)971 4796 y(@)1077 4785 y(@)1089 4796 y(@)1195 4785
y(@)1207 4796 y(@)1313 4785 y(@)1325 4796 y(@)1431 4785
y(@)1443 4796 y(@)1550 4785 y(@)1561 4796 y(@)1668 4785
y(@)1679 4796 y(@)1786 4785 y(@)1797 4796 y(@)1904 4785
y(@)1915 4796 y(@)2022 4785 y(@)2034 4796 y(@)2140 4785
y(@)2152 4796 y(@)2258 4785 y(@)2270 4796 y(@)2376 4785
y(@)2388 4796 y(@)2494 4785 y(@)2506 4796 y(@)2613 4785
y(@)2624 4796 y(@)2731 4785 y(@)2742 4796 y(@)2849 4785
y(@)2860 4796 y(@)2967 4785 y(@)2978 4796 y(@)p 1531
4591 4 4 v 1532 4589 V 1532 4587 V 1533 4586 V 1533 4584
V 1533 4583 V 1534 4581 V 1534 4579 V 1534 4578 V 1535
4576 V 1535 4575 V 1536 4573 V 1536 4571 V 1536 4570
V 1537 4568 V 1537 4567 V 1538 4565 V 1538 4564 V 1539
4562 V 1539 4561 V 1539 4559 V 1540 4558 V 1540 4556
V 1541 4555 V 1541 4553 V 1542 4552 V 1542 4550 V 1543
4549 V 1543 4547 V 1544 4546 V 1544 4544 V 1544 4543
V 1545 4541 V 1545 4540 V 1546 4538 V 1546 4537 V 1547
4536 V 1547 4534 V 1548 4533 V 1548 4531 V 1549 4530
V 1550 4529 V 1550 4527 V 1551 4526 V 1551 4524 V 1552
4523 V 1552 4522 V 1553 4520 V 1553 4519 V 1554 4517
V 1554 4516 V 1555 4515 V 1556 4513 V 1556 4512 V 1557
4511 V 1557 4509 V 1558 4508 V 1559 4507 V 1559 4505
V 1560 4504 V 1560 4503 V 1561 4502 V 1562 4500 V 1562
4499 V 1563 4498 V 1563 4496 V 1564 4495 V 1565 4494
V 1565 4493 V 1566 4491 V 1567 4490 V 1567 4489 V 1568
4488 V 1569 4486 V 1569 4485 V 1570 4484 V 1571 4483
V 1571 4482 V 1572 4480 V 1573 4479 V 1573 4478 V 1574
4477 V 1575 4476 V 1575 4474 V 1576 4473 V 1577 4472
V 1578 4471 V 1578 4470 V 1579 4469 V 1580 4468 V 1580
4466 V 1581 4465 V 1582 4464 V 1583 4463 V 1583 4462
V 1584 4461 V 1585 4460 V 1586 4459 V 1586 4458 V 1587
4456 V 1588 4455 V 1589 4454 V 1590 4453 V 1590 4452
V 1591 4451 V 1592 4450 V 1593 4449 V 1594 4448 V 1594
4447 V 1595 4446 V 1596 4445 V 1597 4444 V 1598 4443
V 1598 4442 V 1599 4441 V 1600 4440 V 1601 4439 V 1602
4438 V 1603 4437 V 1604 4436 V 1604 4435 V 1605 4434
V 1606 4433 V 1607 4432 V 1608 4431 V 1609 4430 V 1610
4429 V 1611 4428 V 1611 4427 V 1612 4426 V 1613 4425
V 1614 4425 V 1615 4424 V 1616 4423 V 1617 4422 V 1618
4421 V 1619 4420 V 1620 4419 V 1621 4418 V 1622 4417
V 1622 4417 V 1623 4416 V 1624 4415 V 1625 4414 V 1626
4413 V 1627 4412 V 1628 4412 V 1629 4411 V 1630 4410
V 1631 4409 V 1632 4408 V 1633 4407 V 1634 4407 V 1635
4406 V 1636 4405 V 1637 4404 V 1638 4404 V 1639 4403
V 1640 4402 V 1641 4401 V 1642 4400 V 1643 4400 V 1644
4399 V 1645 4398 V 1646 4398 V 1647 4397 V 1649 4396
V 1650 4395 V 1651 4395 V 1652 4394 V 1653 4393 V 1654
4393 V 1655 4392 V 1656 4391 V 1657 4391 V 1658 4390
V 1659 4389 V 1660 4389 V 1661 4388 V 1663 4387 V 1664
4387 V 1665 4386 V 1666 4385 V 1667 4385 V 1668 4384
V 1669 4383 V 1670 4383 V 1672 4382 V 1673 4382 V 1674
4381 V 1675 4380 V 1676 4380 V 1677 4379 V 1679 4379
V 1680 4378 V 1681 4378 V 1682 4377 V 1683 4376 V 1684
4376 V 1686 4375 V 1687 4375 V 1688 4374 V 1689 4374
V 1690 4373 V 1692 4373 V 1693 4372 V 1694 4372 V 1695
4371 V 1697 4371 V 1698 4370 V 1699 4370 V 1700 4369
V 1702 4369 V 1703 4368 V 1704 4368 V 1705 4367 V 1707
4367 V 1708 4367 V 1709 4366 V 1710 4366 V 1712 4365
V 1713 4365 V 1714 4364 V 1715 4364 V 1717 4364 V 1718
4363 V 1719 4363 V 1721 4362 V 1722 4362 V 1723 4362
V 1725 4361 V 1726 4361 V 1727 4361 V 1729 4360 V 1730
4360 V 1731 4360 V 1733 4359 V 1734 4359 V 1735 4359
V 1737 4358 V 1738 4358 V 1739 4358 V 1741 4357 V 1742
4357 V 1744 4357 V 1745 4356 V 1746 4356 V 1748 4356
V 1749 4356 V 1751 4355 V 1752 4355 V 1753 4355 V 1755
4355 V 1756 4354 V 1758 4354 V 1759 4354 V 1761 4354
V 1762 4353 V 1763 4353 V 1765 4353 V 1766 4353 V 1768
4353 V 1769 4352 V 1771 4352 V 1772 4352 V 1774 4352
V 1775 4352 V 1777 4351 V 1778 4351 V 1780 4351 V 1781
4351 V 1783 4351 V 1784 4351 V 1786 4351 V 1787 4350
V 1789 4350 V 1790 4350 V 1792 4350 V 1793 4350 V 1795
4350 V 1796 4350 V 1798 4350 V 1799 4350 V 1801 4349
V 1802 4349 V 1804 4349 V 1805 4349 V 1807 4349 V 1809
4349 V 1810 4349 V 1812 4349 V 1813 4349 V 1815 4349
V 1816 4349 V 1818 4349 V 1820 4349 V 1821 4349 V 1823
4349 V 1825 4349 V 1826 4349 V 1828 4349 V 1829 4349
V 1831 4349 V 1833 4349 V 1834 4349 V 1836 4349 V 1838
4349 V 1839 4349 V 1841 4349 V 1843 4349 V 1844 4349
V 2226 4591 V 2226 4589 V 2225 4587 V 2225 4586 V 2224
4584 V 2224 4583 V 2224 4581 V 2223 4579 V 2223 4578
V 2223 4576 V 2222 4575 V 2222 4573 V 2221 4571 V 2221
4570 V 2221 4568 V 2220 4567 V 2220 4565 V 2219 4564
V 2219 4562 V 2218 4561 V 2218 4559 V 2217 4558 V 2217
4556 V 2217 4555 V 2216 4553 V 2216 4552 V 2215 4550
V 2215 4549 V 2214 4547 V 2214 4546 V 2213 4544 V 2213
4543 V 2212 4541 V 2212 4540 V 2211 4538 V 2211 4537
V 2210 4536 V 2210 4534 V 2209 4533 V 2209 4531 V 2208
4530 V 2208 4529 V 2207 4527 V 2207 4526 V 2206 4524
V 2206 4523 V 2205 4522 V 2205 4520 V 2204 4519 V 2203
4517 V 2203 4516 V 2202 4515 V 2202 4513 V 2201 4512
V 2201 4511 V 2200 4509 V 2199 4508 V 2199 4507 V 2198
4505 V 2198 4504 V 2197 4503 V 2196 4502 V 2196 4500
V 2195 4499 V 2195 4498 V 2194 4496 V 2193 4495 V 2193
4494 V 2192 4493 V 2191 4491 V 2191 4490 V 2190 4489
V 2189 4488 V 2189 4486 V 2188 4485 V 2187 4484 V 2187
4483 V 2186 4482 V 2185 4480 V 2185 4479 V 2184 4478
V 2183 4477 V 2183 4476 V 2182 4474 V 2181 4473 V 2180
4472 V 2180 4471 V 2179 4470 V 2178 4469 V 2178 4468
V 2177 4466 V 2176 4465 V 2175 4464 V 2175 4463 V 2174
4462 V 2173 4461 V 2172 4460 V 2172 4459 V 2171 4458
V 2170 4456 V 2169 4455 V 2168 4454 V 2168 4453 V 2167
4452 V 2166 4451 V 2165 4450 V 2165 4449 V 2164 4448
V 2163 4447 V 2162 4446 V 2161 4445 V 2160 4444 V 2160
4443 V 2159 4442 V 2158 4441 V 2157 4440 V 2156 4439
V 2155 4438 V 2155 4437 V 2154 4436 V 2153 4435 V 2152
4434 V 2151 4433 V 2150 4432 V 2149 4431 V 2149 4430
V 2148 4429 V 2147 4428 V 2146 4427 V 2145 4426 V 2144
4425 V 2143 4425 V 2142 4424 V 2141 4423 V 2140 4422
V 2139 4421 V 2139 4420 V 2138 4419 V 2137 4418 V 2136
4417 V 2135 4417 V 2134 4416 V 2133 4415 V 2132 4414
V 2131 4413 V 2130 4412 V 2129 4412 V 2128 4411 V 2127
4410 V 2126 4409 V 2125 4408 V 2124 4407 V 2123 4407
V 2122 4406 V 2121 4405 V 2120 4404 V 2119 4404 V 2118
4403 V 2117 4402 V 2116 4401 V 2115 4400 V 2114 4400
V 2113 4399 V 2112 4398 V 2111 4398 V 2110 4397 V 2109
4396 V 2108 4395 V 2107 4395 V 2106 4394 V 2105 4393
V 2103 4393 V 2102 4392 V 2101 4391 V 2100 4391 V 2099
4390 V 2098 4389 V 2097 4389 V 2096 4388 V 2095 4387
V 2094 4387 V 2093 4386 V 2091 4385 V 2090 4385 V 2089
4384 V 2088 4383 V 2087 4383 V 2086 4382 V 2085 4382
V 2083 4381 V 2082 4380 V 2081 4380 V 2080 4379 V 2079
4379 V 2078 4378 V 2076 4378 V 2075 4377 V 2074 4376
V 2073 4376 V 2072 4375 V 2071 4375 V 2069 4374 V 2068
4374 V 2067 4373 V 2066 4373 V 2064 4372 V 2063 4372
V 2062 4371 V 2061 4371 V 2060 4370 V 2058 4370 V 2057
4369 V 2056 4369 V 2055 4368 V 2053 4368 V 2052 4367
V 2051 4367 V 2050 4367 V 2048 4366 V 2047 4366 V 2046
4365 V 2044 4365 V 2043 4364 V 2042 4364 V 2041 4364
V 2039 4363 V 2038 4363 V 2037 4362 V 2035 4362 V 2034
4362 V 2033 4361 V 2031 4361 V 2030 4361 V 2029 4360
V 2027 4360 V 2026 4360 V 2025 4359 V 2023 4359 V 2022
4359 V 2021 4358 V 2019 4358 V 2018 4358 V 2016 4357
V 2015 4357 V 2014 4357 V 2012 4356 V 2011 4356 V 2010
4356 V 2008 4356 V 2007 4355 V 2005 4355 V 2004 4355
V 2002 4355 V 2001 4354 V 2000 4354 V 1998 4354 V 1997
4354 V 1995 4353 V 1994 4353 V 1992 4353 V 1991 4353
V 1990 4353 V 1988 4352 V 1987 4352 V 1985 4352 V 1984
4352 V 1982 4352 V 1981 4351 V 1979 4351 V 1978 4351
V 1976 4351 V 1975 4351 V 1973 4351 V 1972 4351 V 1970
4350 V 1969 4350 V 1967 4350 V 1966 4350 V 1964 4350
V 1963 4350 V 1961 4350 V 1960 4350 V 1958 4350 V 1957
4349 V 1955 4349 V 1953 4349 V 1952 4349 V 1950 4349
V 1949 4349 V 1947 4349 V 1946 4349 V 1944 4349 V 1942
4349 V 1941 4349 V 1939 4349 V 1938 4349 V 1936 4349
V 1934 4349 V 1933 4349 V 1931 4349 V 1930 4349 V 1928
4349 V 1926 4349 V 1925 4349 V 1923 4349 V 1921 4349
V 1920 4349 V 1918 4349 V 1916 4349 V 1915 4349 V 1913
4349 V 1739 4867 a Fg(Mirror)1928 3521 y
 gsave currentpoint currentpoint translate -90 neg rotate neg exch
neg exch translate
 1928 3521 a
Fg(Normal)2245 3521 y
 currentpoint grestore moveto
 2245 3521 a 1644 4284 a Fa(6)p
1654 4300 36 3 v 1731 4300 a Fg(i)1998 4284 y Fa(6)p
2008 4300 V 2086 4300 a Fg(r)751 4347 y
 gsave currentpoint currentpoint translate -14 neg rotate neg exch
neg exch translate
 751 4347 a Fg(Inciden)m(t)34
b(ra)m(y)1266 4347 y
 currentpoint grestore moveto
 1266 4347 a 2488 4489 a
 gsave currentpoint currentpoint translate 14 neg rotate neg exch neg
exch translate
 2488 4489
a Fg(Re\015ected)g(ra)m(y)3047 4489 y
 currentpoint grestore moveto
 3047 4489 a 0 TeXcolorgray
507 5105 a Fg(Figure)f(2.1:)43 b(Ra)m(y)33 b(diagram)f(sho)m(wing)i
(re\015ection)f(at)g(a)f(smo)s(oth)h(surface.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1856 5816 a(1)p 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
699 1419 2363 4 v 699 1066 1654 7 v 2353 1063 a Fc(\003)2374
980 y(\003)2394 897 y(\003)2415 814 y(\003)2436 731 y(\003)2457
648 y(\003)2477 565 y(\003)2498 482 y(\003)2519 399 y(\003)2540
316 y(\003)2560 233 y(\003)2581 150 y(\003)2602 67 y(\003)2623
-16 y(\003)2639 -82 y(\003)-21 b(\027)p 2663 947 4 4
v 2661 947 V 2660 947 V 2658 947 V 2656 947 V 2655 947
V 2653 947 V 2651 947 V 2650 947 V 2648 947 V 2646 947
V 2645 947 V 2643 947 V 2641 947 V 2640 947 V 2638 947
V 2637 947 V 2635 947 V 2633 947 V 2632 947 V 2630 948
V 2628 948 V 2627 948 V 2625 948 V 2624 948 V 2622 948
V 2620 948 V 2619 948 V 2617 948 V 2615 949 V 2614 949
V 2612 949 V 2611 949 V 2609 949 V 2607 949 V 2606 950
V 2604 950 V 2603 950 V 2601 950 V 2600 950 V 2598 951
V 2596 951 V 2595 951 V 2593 951 V 2592 951 V 2590 952
V 2588 952 V 2587 952 V 2585 952 V 2584 953 V 2582 953
V 2581 953 V 2579 953 V 2578 954 V 2576 954 V 2574 954
V 2573 954 V 2571 955 V 2570 955 V 2568 955 V 2567 956
V 2565 956 V 2564 956 V 2562 956 V 2561 957 V 2559 957
V 2558 957 V 2556 958 V 2554 958 V 2553 958 V 2551 959
V 2550 959 V 2548 960 V 2547 960 V 2545 960 V 2544 961
V 2542 961 V 2541 961 V 2539 962 V 2538 962 V 2536 963
V 2535 963 V 2533 963 V 2532 964 V 2530 964 V 2529 965
V 2527 965 V 2526 965 V 2524 966 V 2523 966 V 2521 967
V 2520 967 V 2518 968 V 2517 968 V 2516 969 V 2514 969
V 2513 970 V 2511 970 V 2510 971 V 2508 971 V 2507 972
V 2505 972 V 2504 973 V 2502 973 V 2501 974 V 2499 974
V 2498 975 V 2497 975 V 2495 976 V 2494 976 V 2492 977
V 2491 977 V 2489 978 V 2488 979 V 2487 979 V 2485 980
V 2484 980 V 2482 981 V 2481 981 V 2479 982 V 2478 983
V 2477 983 V 2475 984 V 2474 984 V 2472 985 V 2471 986
V 2470 986 V 2468 987 V 2467 988 V 2465 988 V 2464 989
V 2463 990 V 2461 990 V 2460 991 V 2458 992 V 2457 992
V 2456 993 V 2454 994 V 2453 994 V 2451 995 V 2450 996
V 2449 996 V 2447 997 V 2446 998 V 2445 998 V 2443 999
V 2442 1000 V 2441 1001 V 2439 1001 V 2438 1002 V 2436
1003 V 2435 1004 V 2434 1004 V 2432 1005 V 2431 1006
V 2430 1007 V 2428 1008 V 2427 1008 V 2426 1009 V 2424
1010 V 2423 1011 V 2422 1011 V 2420 1012 V 2419 1013
V 2418 1014 V 2416 1015 V 2415 1016 V 2414 1016 V 2412
1017 V 2411 1018 V 2410 1019 V 2408 1020 V 2407 1021
V 2406 1022 V 2405 1022 V 2403 1023 V 2402 1024 V 2401
1025 V 2399 1026 V 2398 1027 V 2397 1028 V 2395 1029
V 2394 1030 V 2393 1030 V 2392 1031 V 2390 1032 V 2389
1033 V 2388 1034 V 2386 1035 V 2385 1036 V 2384 1037
V 2383 1038 V 2381 1039 V 2380 1040 V 2379 1041 V 2378
1042 V 2376 1043 V 2375 1044 V 2374 1045 V 2373 1046
V 2371 1047 V 2370 1048 V 2369 1049 V 2368 1050 V 2366
1051 V 2365 1052 V 2364 1053 V 2363 1054 V 2361 1055
V 2360 1056 V 2359 1057 V 2358 1058 V 2356 1059 V 2355
1060 V 2354 1061 V 2353 1062 V 2352 1063 V 2350 1064
V 2349 1066 V 2348 1067 V 2347 1068 V 2346 1069 V 2344
1070 V 2343 1071 V 2342 1072 V 2341 1073 V 2340 1074
V 2338 1076 V 2337 1077 V 2336 1078 V 2335 1079 V 2334
1080 V 2332 1081 V 2331 1083 V 2330 1084 V 2329 1085
V 2329 1085 V 2328 1086 V 2326 1087 V 2325 1088 V 2324
1090 V 2323 1091 V 2322 1092 V 2321 1093 V 2320 1094
V 2318 1096 V 2317 1097 V 2316 1098 V 2315 1099 V 2314
1100 V 2313 1102 V 2312 1103 V 2311 1104 V 2310 1105
V 2308 1106 V 2307 1108 V 2306 1109 V 2305 1110 V 2304
1111 V 2303 1113 V 2302 1114 V 2301 1115 V 2300 1116
V 2299 1117 V 2298 1119 V 2297 1120 V 2296 1121 V 2295
1122 V 2294 1124 V 2293 1125 V 2292 1126 V 2291 1127
V 2290 1129 V 2289 1130 V 2288 1131 V 2287 1132 V 2286
1134 V 2285 1135 V 2284 1136 V 2283 1137 V 2282 1139
V 2281 1140 V 2280 1141 V 2279 1143 V 2278 1144 V 2277
1145 V 2276 1146 V 2275 1148 V 2274 1149 V 2273 1150
V 2273 1152 V 2272 1153 V 2271 1154 V 2270 1155 V 2269
1157 V 2268 1158 V 2267 1159 V 2266 1161 V 2265 1162
V 2265 1163 V 2264 1165 V 2263 1166 V 2262 1167 V 2261
1168 V 2260 1170 V 2260 1171 V 2259 1172 V 2258 1174
V 2257 1175 V 2256 1176 V 2255 1178 V 2255 1179 V 2254
1180 V 2253 1182 V 2252 1183 V 2251 1184 V 2251 1186
V 2250 1187 V 2249 1188 V 2248 1190 V 2248 1191 V 2247
1193 V 2246 1194 V 2245 1195 V 2245 1197 V 2244 1198
V 2243 1199 V 2242 1201 V 2242 1202 V 2241 1203 V 2240
1205 V 2240 1206 V 2239 1208 V 2238 1209 V 2238 1210
V 2237 1212 V 2236 1213 V 2235 1214 V 2235 1216 V 2234
1217 V 2233 1219 V 2233 1220 V 2232 1221 V 2232 1223
V 2231 1224 V 2230 1226 V 2230 1227 V 2229 1228 V 2228
1230 V 2228 1231 V 2227 1233 V 2227 1234 V 2226 1235
V 2225 1237 V 2225 1238 V 2224 1240 V 2224 1241 V 2223
1243 V 2222 1244 V 2222 1245 V 2221 1247 V 2221 1248
V 2220 1250 V 2220 1251 V 2219 1253 V 2219 1254 V 2218
1256 V 2218 1257 V 2217 1258 V 2217 1260 V 2216 1261
V 2216 1263 V 2215 1264 V 2215 1266 V 2214 1267 V 2214
1269 V 2213 1270 V 2213 1272 V 2212 1273 V 2212 1275
V 2211 1276 V 2211 1277 V 2210 1279 V 2210 1280 V 2209
1282 V 2209 1283 V 2209 1285 V 2208 1286 V 2208 1288
V 2207 1289 V 2207 1291 V 2207 1292 V 2206 1294 V 2206
1295 V 2205 1297 V 2205 1298 V 2205 1300 V 2204 1301
V 2204 1303 V 2203 1304 V 2203 1306 V 2203 1307 V 2202
1309 V 2202 1311 V 2202 1312 V 2201 1314 V 2201 1315
V 2201 1317 V 2200 1318 V 2200 1320 V 2200 1321 V 2200
1323 V 2199 1324 V 2199 1326 V 2199 1327 V 2198 1329
V 2198 1330 V 2198 1332 V 2198 1334 V 2197 1335 V 2197
1337 V 2197 1338 V 2196 1340 V 2196 1341 V 2196 1343
V 2196 1345 V 2196 1346 V 2195 1348 V 2195 1349 V 2195
1351 V 2195 1352 V 2194 1354 V 2194 1356 V 2194 1357
V 2194 1359 V 2194 1360 V 2194 1362 V 2193 1364 V 2193
1365 V 2193 1367 V 2193 1368 V 2193 1370 V 2193 1372
V 2192 1373 V 2192 1375 V 2192 1376 V 2192 1378 V 2192
1380 V 2192 1381 V 2192 1383 V 2192 1384 V 2191 1386
V 2191 1388 V 2191 1389 V 2191 1391 V 2191 1393 V 2191
1394 V 2191 1396 V 2191 1397 V 2191 1399 V 2191 1401
V 2191 1402 V 2191 1404 V 2191 1406 V 2191 1407 V 2191
1409 V 2191 1411 V 2191 1412 V 2190 1414 V 2190 1416
V 2190 1417 V 2190 1419 V 2190 1419 V 2190 1421 V 2190
1422 V 2190 1424 V 2191 1426 V 2191 1427 V 2191 1429
V 2191 1431 V 2191 1432 V 2191 1434 V 2191 1436 V 2191
1437 V 2191 1439 V 2191 1440 V 2191 1442 V 2191 1444
V 2191 1445 V 2191 1447 V 2191 1449 V 2191 1450 V 2191
1452 V 2192 1453 V 2192 1455 V 2192 1457 V 2192 1458
V 2192 1460 V 2192 1462 V 2192 1463 V 2192 1465 V 2193
1466 V 2193 1468 V 2193 1470 V 2193 1471 V 2193 1473
V 2193 1474 V 2194 1476 V 2194 1478 V 2194 1479 V 2194
1481 V 2194 1482 V 2194 1484 V 2195 1486 V 2195 1487
V 2195 1489 V 2195 1490 V 2196 1492 V 2196 1493 V 2196
1495 V 2196 1497 V 2196 1498 V 2197 1500 V 2197 1501
V 2197 1503 V 2198 1504 V 2198 1506 V 2198 1507 V 2198
1509 V 2199 1511 V 2199 1512 V 2199 1514 V 2199 1515
V 2200 1517 V 2200 1518 V 2200 1520 V 2201 1521 V 2201
1523 V 2201 1524 V 2202 1526 V 2202 1527 V 2202 1529
V 2203 1530 V 2203 1532 V 2203 1534 V 2204 1535 V 2204
1537 V 2205 1538 V 2205 1540 V 2205 1541 V 2206 1543
V 2206 1544 V 2206 1546 V 2207 1547 V 2207 1549 V 2208
1550 V 2208 1552 V 2209 1553 V 2209 1555 V 2209 1556
V 2210 1557 V 2210 1559 V 2211 1560 V 2211 1562 V 2212
1563 V 2212 1565 V 2213 1566 V 2213 1568 V 2214 1569
V 2214 1571 V 2215 1572 V 2215 1574 V 2216 1575 V 2216
1577 V 2217 1578 V 2217 1580 V 2218 1581 V 2218 1582
V 2219 1584 V 2219 1585 V 2220 1587 V 2220 1588 V 2221
1590 V 2221 1591 V 2222 1592 V 2222 1594 V 2223 1595
V 2224 1597 V 2224 1598 V 2225 1600 V 2225 1601 V 2226
1602 V 2227 1604 V 2227 1605 V 2228 1607 V 2228 1608
V 2229 1610 V 2230 1611 V 2230 1612 V 2231 1614 V 2232
1615 V 2232 1617 V 2233 1618 V 2233 1619 V 2234 1621
V 2235 1622 V 2235 1624 V 2236 1625 V 2237 1626 V 2237
1628 V 2238 1629 V 2239 1630 V 2240 1632 V 2240 1633
V 2241 1635 V 2242 1636 V 2242 1637 V 2243 1639 V 2244
1640 V 2245 1641 V 2245 1643 V 2246 1644 V 2247 1645
V 2248 1647 V 2248 1648 V 2249 1649 V 2250 1651 V 2251
1652 V 2251 1654 V 2252 1655 V 2253 1656 V 2254 1658
V 2255 1659 V 2255 1660 V 2256 1662 V 2257 1663 V 2258
1664 V 2259 1666 V 2260 1667 V 2260 1668 V 2261 1669
V 2262 1671 V 2263 1672 V 2264 1673 V 2265 1675 V 2265
1676 V 2266 1677 V 2267 1679 V 2268 1680 V 2269 1681
V 2270 1683 V 2271 1684 V 2272 1685 V 2273 1686 V 2273
1688 V 2274 1689 V 2275 1690 V 2276 1692 V 2277 1693
V 2278 1694 V 2279 1695 V 2280 1697 V 2281 1698 V 2282
1699 V 2283 1700 V 2284 1702 V 2285 1703 V 2286 1704
V 2287 1706 V 2288 1707 V 2289 1708 V 2290 1709 V 2291
1711 V 2292 1712 V 2293 1713 V 2294 1714 V 2295 1716
V 2296 1717 V 2297 1718 V 2298 1719 V 2299 1720 V 2300
1722 V 2301 1723 V 2302 1724 V 2303 1725 V 2304 1727
V 2305 1728 V 2306 1729 V 2307 1730 V 2308 1732 V 2310
1733 V 2311 1734 V 2312 1735 V 2313 1736 V 2314 1738
V 2315 1739 V 2316 1740 V 2317 1741 V 2318 1742 V 2320
1744 V 2321 1745 V 2322 1746 V 2323 1747 V 2324 1748
V 2325 1749 V 2326 1751 V 2328 1752 V 2329 1753 V 2562
1417 a Fb(S)2500 1334 y(S)2438 1251 y(S)2375 1168 y(S)2313
1085 y(S)2251 1002 y(S)2189 919 y(S)2126 836 y(S)2064
753 y(S)2002 670 y(S)1939 587 y(S)1877 504 y(S)1815 421
y(S)1753 338 y(S)1690 255 y(S)1628 172 y(S)1566 89 y(S)1561
83 y(S)p 1997 1046 V 1997 1044 V 1997 1042 V 1997 1041
V 1997 1039 V 1997 1037 V 1997 1036 V 1997 1034 V 1997
1032 V 1997 1031 V 1997 1029 V 1997 1027 V 1997 1026
V 1997 1024 V 1997 1023 V 1997 1021 V 1997 1019 V 1997
1018 V 1998 1016 V 1998 1015 V 1998 1013 V 1998 1011
V 1998 1010 V 1998 1008 V 1998 1007 V 1998 1005 V 1999
1004 V 1999 1002 V 1999 1000 V 1999 999 V 1999 997 V
1999 996 V 2000 994 V 2000 993 V 2000 991 V 2000 990
V 2001 988 V 2001 986 V 2001 985 V 2001 983 V 2002 982
V 2002 980 V 2002 979 V 2002 977 V 2003 976 V 2003 974
V 2003 973 V 2004 971 V 2004 970 V 2004 968 V 2004 967
V 2005 965 V 2005 964 V 2006 962 V 2006 961 V 2006 960
V 2007 958 V 2007 957 V 2007 955 V 2008 954 V 2008 952
V 2009 951 V 2009 949 V 2009 948 V 2010 947 V 2010 945
V 2011 944 V 2011 942 V 2012 941 V 2012 939 V 2013 938
V 2013 937 V 2013 935 V 2014 934 V 2014 932 V 2015 931
V 2016 930 V 2016 928 V 2017 927 V 2017 925 V 2018 924
V 2018 923 V 2019 921 V 2019 920 V 2020 919 V 2020 917
V 2021 916 V 2022 915 V 2022 913 V 2023 912 V 2023 910
V 2024 909 V 2025 908 V 2025 906 V 2026 905 V 2027 904
V 2027 903 V 2028 901 V 2029 900 V 2029 899 V 2030 897
V 2031 896 V 2031 895 V 2032 893 V 2033 892 V 2033 891
V 2034 890 V 2035 888 V 2036 887 V 2036 886 V 2037 884
V 2038 883 V 2039 882 V 2039 881 V 2040 879 V 2041 878
V 2042 877 V 2043 876 V 2043 874 V 2044 873 V 2045 872
V 2046 871 V 2047 869 V 2048 868 V 2049 867 V 2049 866
V 2050 865 V 2051 863 V 2052 862 V 2053 861 V 2054 860
V 2055 859 V 2056 857 V 2057 856 V 2057 855 V 2058 854
V 2059 853 V 2060 852 V 2061 850 V 2062 849 V 2063 848
V 2064 847 V 2065 846 V 2066 845 V 2067 843 V 2068 842
V 2069 841 V 2070 840 V 2071 839 V 2072 838 V 2073 837
V 2074 835 V 2075 834 V 2076 833 V 2077 832 V 2079 831
V 2080 830 V 2081 829 V 2082 828 V 2083 827 V 2084 826
V 2085 824 V 2086 823 V 2087 822 V 2089 821 V 2090 820
V 2091 819 V 2092 818 V 2093 817 V 2094 816 V 2096 815
V 2097 814 V 2098 813 V 2099 812 V 2100 811 V 2102 810
V 2103 809 V 2104 808 V 2105 807 V 2107 806 V 2108 804
V 2109 803 V 2110 802 V 2112 801 V 2113 800 V 2114 799
V 2115 798 V 2117 797 V 2118 796 V 2119 795 V 2121 794
V 2122 794 V 2123 793 V 2125 792 V 2161 776 V 2162 775
V 2164 774 V 2165 773 V 2166 772 V 2168 771 V 2169 770
V 2170 769 V 2172 768 V 2173 767 V 2174 766 V 2176 765
V 2177 764 V 2178 763 V 2180 762 V 2181 761 V 2183 760
V 2184 760 V 2185 759 V 2187 758 V 2188 757 V 2190 756
V 2191 755 V 2192 754 V 2194 753 V 2195 752 V 2196 752
V 2198 751 V 2199 750 V 2201 749 V 2202 748 V 2203 747
V 2205 747 V 2206 746 V 2208 745 V 2209 744 V 2210 744
V 2212 743 V 2213 742 V 2215 741 V 2216 741 V 2218 740
V 2219 739 V 2220 738 V 2222 738 V 2223 737 V 2225 736
V 2226 736 V 2228 735 V 2229 734 V 2230 734 V 2232 733
V 2233 732 V 2235 732 V 2236 731 V 2238 731 V 2239 730
V 2241 729 V 2242 729 V 2243 728 V 2245 728 V 2246 727
V 2248 727 V 2249 726 V 2251 726 V 2252 725 V 2254 724
V 2255 724 V 2257 723 V 2258 723 V 2260 723 V 2261 722
V 2262 722 V 2264 721 V 2265 721 V 2267 720 V 2268 720
V 2270 719 V 2271 719 V 2273 719 V 2274 718 V 2276 718
V 2277 717 V 2279 717 V 2280 717 V 2282 716 V 2283 716
V 2285 716 V 2286 715 V 2288 715 V 2289 715 V 2291 714
V 2292 714 V 2294 714 V 2295 714 V 2297 713 V 2298 713
V 2300 713 V 2301 713 V 2303 712 V 2305 712 V 2306 712
V 2308 712 V 2309 711 V 2311 711 V 2312 711 V 2314 711
V 2315 711 V 2317 711 V 2318 710 V 2320 710 V 2321 710
V 2323 710 V 2325 710 V 2326 710 V 2328 710 V 2329 710
V 2331 710 V 2332 709 V 2334 709 V 2335 709 V 2337 709
V 2339 709 V 2340 709 V 2342 709 V 2343 709 V 2345 709
V 2346 709 V 2348 709 V 2350 709 V 2351 709 V 2353 709
V 2354 709 V 2356 709 V 2357 709 V 2359 709 V 2361 710
V 2362 710 V 2364 710 V 2365 710 V 2367 710 V 2369 710
V 2370 710 V 2372 710 V 2373 710 V 2375 711 V 2377 711
V 2378 711 V 2380 711 V 2381 711 V 2383 711 V 2385 712
V 2386 712 V 2388 712 V 2390 712 V 2391 713 V 2393 713
V 2394 713 V 2396 713 V 2398 714 V 2399 714 V 2401 714
V 2403 714 V 2404 715 V 2406 715 V 2407 715 V 2409 716
V 2411 716 V 2412 716 V 2414 717 V 2416 717 V 2417 718
V 2419 718 V 2421 718 V 2422 719 V 2424 719 V 2426 720
V 2427 720 V 699 1535 a Fg(Main)33 b(axis)1355 b(Cen)m(tre)p
2623 1453 4 71 v 1526 1772 a(Re\015ecting)34 b(sphere)699
1016 y(Inciden)m(t)h(ra)m(y)2467 472 y
 gsave currentpoint currentpoint translate 76 neg rotate neg exch neg
exch translate
 2467 472 a Fg(Re\015ected)f(ra)m
(y)3027 472 y
 currentpoint grestore moveto
 3027 472 a 1597 0 a
 gsave currentpoint currentpoint translate -53 neg rotate neg exch
neg exch translate
 1597 0 a Fg(Normal)1914
0 y
 currentpoint grestore moveto
 1914 0 a 1880 811 a Fa(6)p 1890 827 36 3 v 1968 827
a Fg(i)2164 646 y Fa(6)p 2174 661 V 2251 661 a Fg(r)p
0 TeXcolorgray 650 2293 a(Figure)e(3.1:)43 b(Ra)m(y)33
b(diagram)g(of)f(re\015ection)i(at)e(a)g(con)m(v)m(ex)j(surface.)p
0 TeXcolorgray 0 TeXcolorgray 0.9 TeXcolorgray 0.9 TeXcolorgray
-75 2891 3911 238 v 0.9 TeXcolorgray 0 TeXcolorgray 146
2797 a Ff(Exercise)j(1)32 b Fg(:)44 b(Measure)34 b(the)f(angle)f(of)g
(incidence)j(in)e(\014gure)g(2.1.)p 0.9 TeXcolorgray
0 TeXcolorgray 0 3224 a Fh(3)161 b(Re\015ection)52 b(at)i(spherical)e
(mirrors)0 3443 y Fg(In)36 b(a)f(con)m(v)m(ex)i(surface,)g(suc)m(h)g
(as)e(the)h(bac)m(kside)h(of)e(a)g(sp)s(o)s(on,)h(y)m(ou)g(see)g(the)g
(w)m(orld)g(reduced)h(in)e(size.)0 3563 y(On)c(the)h(inside)g(of)f(the)
h(sp)s(o)s(on)e(ho)m(w)m(ev)m(er,)k(y)m(ou)e(see)h(the)e(w)m(orld)h
(enlarged.)44 b(This)32 b(surface)g(is)g(conca)m(v)m(e.)0
3684 y(Because)j(a)d(sp)s(o)s(on)h(is)h(not)e(a)h(p)s(erfect)h(sphere)g
(the)g(image)f(of)f(the)i(w)m(orld)f(is)h(distorted.)46
b(W)-8 b(e)33 b(will)h(use)0 3804 y(the)f(la)m(w)g(of)f(re\015ection)i
(to)e(predict)i(ho)m(w)f(ligh)m(t)g(ra)m(ys)g(are)g(re\015ected)h(of)e
(a)h(con)m(v)m(ex)h(surface.)p 0.9 TeXcolorgray 0.9 TeXcolorgray
-75 4316 3911 359 v 0.9 TeXcolorgray 0 TeXcolorgray 146
4102 a Ff(Exercise)53 b(2)46 b Fg(:)70 b(In)47 b(\014gure)f(3.1)g(the)g
(normal)g(to)g(the)g(re\015ectiv)m(e)j(surface)e(is)f(already)h(dra)m
(wn.)0 4222 y(Explain)34 b(wh)m(y)g(the)f(normal)f(go)s(es)h(through)f
(the)h(cen)m(tre)h(of)e(the)h(sphere.)p 0.9 TeXcolorgray
0 TeXcolorgray 0.9 TeXcolorgray 0.9 TeXcolorgray -75
4828 V 0.9 TeXcolorgray 0 TeXcolorgray 146 4614 a Ff(Exercise)41
b(3)36 b Fg(:)49 b(A)36 b(b)s(eam)g(of)f(ligh)m(t)h(en)m(ters)h(y)m
(our)g(ey)m(e.)54 b(What)36 b(shap)s(e)g(do)s(es)g(this)g(b)s(eam)g
(need)h(to)0 4734 y(b)s(e)c(for)f(y)m(ou)h(to)f(see)i(a)e(clear)h
(image?)p 0.9 TeXcolorgray 0 TeXcolorgray 0.9 TeXcolorgray
0.9 TeXcolorgray -75 5460 3911 479 v 0.9 TeXcolorgray
0 TeXcolorgray 146 5126 a Ff(Exercise)43 b(4)37 b Fg(:)53
b(When)38 b(a)f(parallel)g(b)s(eam)h(is)g(re\015ected)h(b)m(y)f(a)f
(spherical)h(surface)g(the)g(re\015ected)0 5246 y(b)s(eam)33
b(will)h(ha)m(v)m(e)g(a)f(certain)h(shap)s(e.)45 b(Describ)s(e)34
b(this)g(shap)s(e.)45 b(Can)34 b(y)m(ou)f(see)i(the)e(ligh)m(t)g
(source)h(when)0 5366 y(y)m(ou)f(lo)s(ok)g(at)f(the)h(re\015ected)h(b)s
(eam?)p 0.9 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1856 5816 a(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
699 592 1654 4 v 699 240 1323 7 v 2022 319 a Fc(C)2043
402 y(C)2064 485 y(C)2084 568 y(C)2105 651 y(C)2119 709
y(C)-21 b(W)p 2190 592 4 4 v 2190 591 V 2190 589 V 2190
587 V 2190 586 V 2190 584 V 2190 582 V 2190 581 V 2190
579 V 2190 577 V 2190 576 V 2190 574 V 2190 572 V 2190
571 V 2190 569 V 2190 567 V 2190 566 V 2190 564 V 2190
563 V 2190 561 V 2189 559 V 2189 558 V 2189 556 V 2189
554 V 2189 553 V 2189 551 V 2189 550 V 2189 548 V 2189
546 V 2188 545 V 2188 543 V 2188 542 V 2188 540 V 2188
538 V 2188 537 V 2187 535 V 2187 534 V 2187 532 V 2187
530 V 2187 529 V 2186 527 V 2186 526 V 2186 524 V 2186
523 V 2186 521 V 2185 519 V 2185 518 V 2185 516 V 2185
515 V 2184 513 V 2184 512 V 2184 510 V 2184 508 V 2183
507 V 2183 505 V 2183 504 V 2183 502 V 2182 501 V 2182
499 V 2182 498 V 2181 496 V 2181 494 V 2181 493 V 2181
491 V 2180 490 V 2180 488 V 2180 487 V 2179 485 V 2179
484 V 2179 482 V 2178 481 V 2178 479 V 2177 478 V 2177
476 V 2177 475 V 2176 473 V 2176 472 V 2176 470 V 2175
469 V 2175 467 V 2174 466 V 2174 464 V 2174 463 V 2173
461 V 2173 460 V 2172 458 V 2172 457 V 2172 455 V 2171
454 V 2171 452 V 2170 451 V 2170 449 V 2169 448 V 2169
446 V 2168 445 V 2168 443 V 2167 442 V 2167 440 V 2166
439 V 2166 438 V 2165 436 V 2165 435 V 2164 433 V 2164
432 V 2163 430 V 2163 429 V 2162 427 V 2162 426 V 2161
424 V 2161 423 V 2160 422 V 2160 420 V 2159 419 V 2158
417 V 2158 416 V 2157 414 V 2157 413 V 2156 412 V 2156
410 V 2155 409 V 2154 407 V 2154 406 V 2153 404 V 2153
403 V 2152 402 V 2151 400 V 2151 399 V 2150 397 V 2149
396 V 2149 395 V 2148 393 V 2147 392 V 2147 390 V 2146
389 V 2145 388 V 2145 386 V 2144 385 V 2143 384 V 2143
382 V 2142 381 V 2141 379 V 2141 378 V 2140 377 V 2139
375 V 2139 374 V 2138 373 V 2137 371 V 2136 370 V 2136
368 V 2135 367 V 2134 366 V 2133 364 V 2133 363 V 2132
362 V 2131 360 V 2130 359 V 2129 358 V 2129 356 V 2128
355 V 2127 354 V 2126 352 V 2126 351 V 2125 350 V 2124
348 V 2123 347 V 2122 346 V 2121 344 V 2121 343 V 2120
342 V 2119 340 V 2118 339 V 2117 338 V 2116 336 V 2115
335 V 2115 334 V 2114 333 V 2113 331 V 2112 330 V 2111
329 V 2110 327 V 2109 326 V 2108 325 V 2107 323 V 2107
322 V 2106 321 V 2105 320 V 2104 318 V 2103 317 V 2102
316 V 2101 315 V 2100 313 V 2099 312 V 2098 311 V 2097
309 V 2096 308 V 2095 307 V 2094 306 V 2093 304 V 2092
303 V 2091 302 V 2090 301 V 2089 299 V 2088 298 V 2087
297 V 2086 296 V 2085 294 V 2084 293 V 2083 292 V 2082
291 V 2081 289 V 2080 288 V 2079 287 V 2078 286 V 2077
285 V 2076 283 V 2075 282 V 2074 281 V 2073 280 V 2071
278 V 2070 277 V 2069 276 V 2068 275 V 2067 274 V 2066
272 V 2065 271 V 2064 270 V 2063 269 V 2061 268 V 2060
266 V 2059 265 V 2058 264 V 2057 263 V 2056 262 V 2054
260 V 2053 259 V 2052 258 V 2052 258 V 2051 257 V 2050
256 V 2049 255 V 2047 253 V 2046 252 V 2045 251 V 2044
250 V 2043 249 V 2041 248 V 2040 247 V 2039 245 V 2038
244 V 2037 243 V 2035 242 V 2034 241 V 2033 240 V 2032
239 V 2031 238 V 2029 237 V 2028 236 V 2027 235 V 2026
233 V 2024 232 V 2023 231 V 2022 230 V 2021 229 V 2020
228 V 2018 227 V 2017 226 V 2016 225 V 2015 224 V 2013
223 V 2012 222 V 2011 221 V 2010 220 V 2008 219 V 2007
218 V 2006 217 V 2005 216 V 2003 215 V 2002 214 V 2001
213 V 2000 212 V 1998 211 V 1997 210 V 1996 209 V 1994
208 V 1993 207 V 1992 206 V 1991 206 V 1989 205 V 1988
204 V 1987 203 V 1985 202 V 1984 201 V 1983 200 V 1982
199 V 1980 198 V 1979 197 V 1978 197 V 1976 196 V 1975
195 V 1974 194 V 1972 193 V 1971 192 V 1970 191 V 1969
190 V 1967 190 V 1966 189 V 1965 188 V 1963 187 V 1962
186 V 1961 186 V 1959 185 V 1958 184 V 1957 183 V 1955
182 V 1954 182 V 1953 181 V 1951 180 V 1950 179 V 1949
178 V 1947 178 V 1946 177 V 1944 176 V 1943 175 V 1942
175 V 1940 174 V 1939 173 V 1938 172 V 1936 172 V 1935
171 V 1934 170 V 1932 170 V 1931 169 V 1929 168 V 1928
167 V 1927 167 V 1925 166 V 1924 165 V 1923 165 V 1921
164 V 1920 163 V 1918 163 V 1917 162 V 1916 161 V 1914
161 V 1913 160 V 1911 160 V 1910 159 V 1909 158 V 1907
158 V 1906 157 V 1904 156 V 1903 156 V 1902 155 V 1900
155 V 1899 154 V 1897 153 V 1896 153 V 1894 152 V 1893
152 V 1892 151 V 1890 151 V 1889 150 V 1887 150 V 1886
149 V 1884 148 V 1883 148 V 1881 147 V 1880 147 V 1879
146 V 1877 146 V 1876 145 V 1874 145 V 1873 144 V 1871
144 V 1870 143 V 1868 143 V 1867 142 V 1865 142 V 1864
141 V 1862 141 V 1861 141 V 1860 140 V 1858 140 V 1857
139 V 1855 139 V 1854 138 V 1852 138 V 1851 137 V 1849
137 V 1848 137 V 1846 136 V 1845 136 V 1843 135 V 1842
135 V 1840 135 V 1839 134 V 1837 134 V 1836 134 V 1834
133 V 1833 133 V 1831 132 V 1830 132 V 1828 132 V 1826
131 V 1825 131 V 1823 131 V 1822 130 V 1820 130 V 1819
130 V 1817 129 V 1816 129 V 1814 129 V 1813 128 V 1811
128 V 1810 128 V 1808 128 V 1807 127 V 1805 127 V 1803
127 V 1802 127 V 1800 126 V 1799 126 V 1797 126 V 1796
126 V 1794 125 V 1792 125 V 1791 125 V 1789 125 V 1788
124 V 1786 124 V 1785 124 V 1783 124 V 1781 124 V 1780
123 V 1778 123 V 1777 123 V 1775 123 V 1773 123 V 1772
123 V 1770 122 V 1769 122 V 1767 122 V 1765 122 V 1764
122 V 1762 122 V 1761 121 V 1759 121 V 1757 121 V 1756
121 V 1754 121 V 1753 121 V 1751 121 V 1749 121 V 1748
121 V 1746 121 V 1744 120 V 1743 120 V 1741 120 V 1740
120 V 1738 120 V 1736 120 V 1735 120 V 1733 120 V 1731
120 V 1730 120 V 1728 120 V 1726 120 V 1725 120 V 1723
120 V 1721 120 V 1720 120 V 1718 120 V 1718 1065 V 1720
1065 V 1721 1065 V 1723 1065 V 1725 1065 V 1726 1065
V 1728 1065 V 1730 1065 V 1731 1064 V 1733 1064 V 1735
1064 V 1736 1064 V 1738 1064 V 1740 1064 V 1741 1064
V 1743 1064 V 1744 1064 V 1746 1064 V 1748 1064 V 1749
1064 V 1751 1064 V 1753 1064 V 1754 1063 V 1756 1063
V 1757 1063 V 1759 1063 V 1761 1063 V 1762 1063 V 1764
1063 V 1765 1063 V 1767 1062 V 1769 1062 V 1770 1062
V 1772 1062 V 1773 1062 V 1775 1062 V 1777 1061 V 1778
1061 V 1780 1061 V 1781 1061 V 1783 1061 V 1785 1060
V 1786 1060 V 1788 1060 V 1789 1060 V 1791 1060 V 1792
1059 V 1794 1059 V 1796 1059 V 1797 1059 V 1799 1058
V 1800 1058 V 1802 1058 V 1803 1058 V 1805 1057 V 1806
1057 V 1808 1057 V 1810 1057 V 1811 1056 V 1813 1056
V 1814 1056 V 1816 1055 V 1817 1055 V 1819 1055 V 1820
1054 V 1822 1054 V 1823 1054 V 1825 1053 V 1826 1053
V 1828 1053 V 1830 1052 V 1831 1052 V 1833 1052 V 1834
1051 V 1836 1051 V 1837 1051 V 1839 1050 V 1840 1050
V 1842 1049 V 1843 1049 V 1845 1049 V 1846 1048 V 1848
1048 V 1849 1047 V 1851 1047 V 1852 1047 V 1854 1046
V 1855 1046 V 1857 1045 V 1858 1045 V 1860 1044 V 1861
1044 V 1862 1043 V 1864 1043 V 1865 1043 V 1867 1042
V 1868 1042 V 1870 1041 V 1871 1041 V 1873 1040 V 1874
1040 V 1876 1039 V 1877 1039 V 1879 1038 V 1880 1038
V 1881 1037 V 1883 1037 V 1884 1036 V 1886 1035 V 1887
1035 V 1889 1034 V 1890 1034 V 1892 1033 V 1893 1033
V 1894 1032 V 1896 1032 V 1897 1031 V 1899 1030 V 1900
1030 V 1902 1029 V 1903 1029 V 1904 1028 V 1906 1027
V 1907 1027 V 1909 1026 V 1910 1026 V 1911 1025 V 1913
1024 V 1914 1024 V 1916 1023 V 1917 1022 V 1918 1022
V 1920 1021 V 1921 1020 V 1923 1020 V 1924 1019 V 1925
1018 V 1927 1018 V 1928 1017 V 1929 1016 V 1931 1016
V 1932 1015 V 1934 1014 V 1935 1013 V 1936 1013 V 1938
1012 V 1939 1011 V 1940 1011 V 1942 1010 V 1943 1009
V 1944 1008 V 1946 1008 V 1947 1007 V 1949 1006 V 1950
1005 V 1951 1004 V 1953 1004 V 1954 1003 V 1955 1002
V 1957 1001 V 1958 1001 V 1959 1000 V 1961 999 V 1962
998 V 1963 997 V 1965 996 V 1966 996 V 1967 995 V 1969
994 V 1970 993 V 1971 992 V 1972 991 V 1974 991 V 1975
990 V 1976 989 V 1978 988 V 1979 987 V 1980 986 V 1982
985 V 1983 984 V 1984 983 V 1985 983 V 1987 982 V 1988
981 V 1989 980 V 1991 979 V 1992 978 V 1993 977 V 1994
976 V 1996 975 V 1997 974 V 1998 973 V 2000 972 V 2001
971 V 2002 970 V 2003 969 V 2005 968 V 2006 967 V 2007
966 V 2008 965 V 2010 964 V 2011 963 V 2012 962 V 2013
961 V 2015 960 V 2016 959 V 2017 958 V 2018 957 V 2020
956 V 2021 955 V 2022 954 V 2023 953 V 2024 952 V 2026
951 V 2027 950 V 2028 949 V 2029 948 V 2031 947 V 2032
946 V 2033 944 V 2034 943 V 2035 942 V 2037 941 V 2038
940 V 2039 939 V 2040 938 V 2041 937 V 2043 936 V 2044
934 V 2045 933 V 2046 932 V 2047 931 V 2049 930 V 2050
929 V 2051 927 V 2052 926 V 2052 926 V 2053 925 V 2054
924 V 2056 923 V 2057 922 V 2058 920 V 2059 919 V 2060
918 V 2061 917 V 2062 916 V 2064 914 V 2065 913 V 2066
912 V 2067 911 V 2068 910 V 2069 908 V 2070 907 V 2071
906 V 2072 905 V 2074 904 V 2075 902 V 2076 901 V 2077
900 V 2078 899 V 2079 897 V 2080 896 V 2081 895 V 2082
894 V 2083 892 V 2084 891 V 2085 890 V 2086 889 V 2087
888 V 2088 886 V 2089 885 V 2090 884 V 2091 883 V 2092
881 V 2093 880 V 2094 879 V 2095 878 V 2096 876 V 2097
875 V 2098 874 V 2099 872 V 2100 871 V 2101 870 V 2102
869 V 2103 867 V 2104 866 V 2105 865 V 2106 864 V 2107
862 V 2107 861 V 2108 860 V 2109 858 V 2110 857 V 2111
856 V 2112 854 V 2113 853 V 2114 852 V 2115 851 V 2115
849 V 2116 848 V 2117 847 V 2118 845 V 2119 844 V 2120
843 V 2121 841 V 2121 840 V 2122 839 V 2123 837 V 2124
836 V 2125 835 V 2126 833 V 2126 832 V 2127 831 V 2128
829 V 2129 828 V 2129 827 V 2130 825 V 2131 824 V 2132
823 V 2133 821 V 2133 820 V 2134 819 V 2135 817 V 2136
816 V 2136 815 V 2137 813 V 2138 812 V 2139 811 V 2139
809 V 2140 808 V 2141 806 V 2141 805 V 2142 804 V 2143
802 V 2143 801 V 2144 800 V 2145 798 V 2145 797 V 2146
795 V 2147 794 V 2147 793 V 2148 791 V 2149 790 V 2149
788 V 2150 787 V 2151 786 V 2151 784 V 2152 783 V 2153
781 V 2153 780 V 2154 779 V 2154 777 V 2155 776 V 2156
774 V 2156 773 V 2157 771 V 2157 770 V 2158 769 V 2158
767 V 2159 766 V 2160 764 V 2160 763 V 2161 761 V 2161
760 V 2162 759 V 2162 757 V 2163 756 V 2163 754 V 2164
753 V 2164 751 V 2165 750 V 2165 748 V 2166 747 V 2166
745 V 2167 744 V 2167 743 V 2168 741 V 2168 740 V 2169
738 V 2169 737 V 2170 735 V 2170 734 V 2171 732 V 2171
731 V 2171 729 V 2172 728 V 2172 726 V 2173 725 V 2173
723 V 2174 722 V 2174 720 V 2174 719 V 2175 717 V 2175
716 V 2176 714 V 2176 713 V 2176 711 V 2177 710 V 2177
708 V 2177 707 V 2178 705 V 2178 704 V 2179 702 V 2179
701 V 2179 699 V 2180 698 V 2180 696 V 2180 695 V 2181
693 V 2181 691 V 2181 690 V 2181 688 V 2182 687 V 2182
685 V 2182 684 V 2183 682 V 2183 681 V 2183 679 V 2183
678 V 2184 676 V 2184 674 V 2184 673 V 2184 671 V 2185
670 V 2185 668 V 2185 667 V 2185 665 V 2186 664 V 2186
662 V 2186 660 V 2186 659 V 2186 657 V 2187 656 V 2187
654 V 2187 652 V 2187 651 V 2187 649 V 2188 648 V 2188
646 V 2188 644 V 2188 643 V 2188 641 V 2188 640 V 2189
638 V 2189 636 V 2189 635 V 2189 633 V 2189 632 V 2189
630 V 2189 628 V 2189 627 V 2189 625 V 2190 623 V 2190
622 V 2190 620 V 2190 619 V 2190 617 V 2190 615 V 2190
614 V 2190 612 V 2190 610 V 2190 609 V 2190 607 V 2190
605 V 2190 604 V 2190 602 V 2190 601 V 2190 599 V 2190
597 V 2190 596 V 2190 594 V 2190 592 V 1750 591 a Fb(\023)1813
508 y(\023)1875 425 y(\023)1937 341 y(\023)1999 258 y(\023)2062
175 y(\023)2124 92 y(\023)2186 9 y(\023)2249 -74 y(\023)2279
-114 y(\023)p 1784 238 V 1784 240 V 1784 241 V 1784 243
V 1784 244 V 1784 246 V 1784 248 V 1784 249 V 1784 251
V 1784 253 V 1784 254 V 1784 256 V 1784 257 V 1785 259
V 1785 261 V 1785 262 V 1785 264 V 1785 265 V 1785 267
V 1785 268 V 1785 270 V 1785 272 V 1785 273 V 1785 275
V 1785 276 V 1786 278 V 1786 279 V 1786 281 V 1786 282
V 1786 284 V 1786 285 V 1786 287 V 1786 288 V 1787 290
V 1787 291 V 1787 293 V 1787 294 V 1787 295 V 1787 297
V 1788 298 V 1788 300 V 1788 301 V 1788 303 V 1788 304
V 1788 306 V 1789 307 V 1789 308 V 1789 310 V 1789 311
V 1789 313 V 1790 314 V 1790 315 V 1790 317 V 1790 318
V 1791 319 V 1791 321 V 1791 322 V 1791 323 V 1792 325
V 1792 326 V 1792 327 V 1792 329 V 1793 330 V 1793 331
V 1793 333 V 1794 334 V 1794 335 V 1794 337 V 1794 338
V 1795 339 V 1795 340 V 1795 342 V 1796 343 V 1796 344
V 1796 345 V 1797 347 V 1797 348 V 1797 349 V 1798 350
V 1798 351 V 1798 353 V 1799 354 V 1799 355 V 1799 356
V 1800 357 V 1800 359 V 1801 360 V 1801 361 V 1801 362
V 1802 363 V 1802 365 V 1803 366 V 1803 367 V 1803 368
V 1804 369 V 1804 370 V 1805 371 V 1805 372 V 1805 374
V 1806 375 V 1806 376 V 1807 377 V 1807 378 V 1808 379
V 1808 380 V 1809 381 V 1809 382 V 1810 383 V 1810 384
V 1810 385 V 1811 386 V 1811 387 V 1812 388 V 1812 389
V 1813 391 V 1813 392 V 1814 393 V 1814 394 V 1815 395
V 1816 396 V 1816 396 V 1817 397 V 1817 398 V 1818 399
V 1818 400 V 1819 401 V 1819 402 V 1820 403 V 1820 404
V 1821 405 V 1822 406 V 1822 407 V 1823 408 V 1823 409
V 1824 410 V 1825 411 V 1825 411 V 1826 412 V 1826 413
V 1827 414 V 1828 415 V 1828 416 V 1829 417 V 1829 418
V 1830 418 V 1831 419 V 1831 420 V 1832 421 V 1833 422
V 1833 423 V 1834 423 V 1835 424 V 1835 425 V 1836 426
V 1837 427 V 1837 427 V 1838 428 V 1839 429 V 1839 430
V 1840 430 V 1841 431 V 1842 432 V 1842 433 V 1843 433
V 1844 434 V 1844 435 V 1845 436 V 1846 436 V 1847 437
V 1847 438 V 1848 438 V 1849 439 V 1850 440 V 1850 441
V 1851 441 V 1852 442 V 1853 443 V 1854 443 V 1854 444
V 1855 445 V 1856 445 V 1857 446 V 1858 446 V 1858 447
V 1859 448 V 1860 448 V 1861 449 V 1862 450 V 1862 450
V 1863 451 V 1864 451 V 1865 452 V 1866 452 V 1867 453
V 1868 454 V 1868 454 V 1869 455 V 1870 455 V 1871 456
V 1872 456 V 1873 457 V 1874 457 V 1875 458 V 1875 458
V 1876 459 V 1877 459 V 1878 460 V 1879 460 V 1880 461
V 1881 461 V 1882 462 V 1883 462 V 1884 463 V 1885 463
V 1886 464 V 1887 464 V 1888 465 V 1888 465 V 1889 465
V 1890 466 V 1891 466 V 1892 467 V 1893 467 V 1894 467
V 1895 468 V 1896 468 V 1897 469 V 1898 469 V 1899 469
V 1900 470 V 1901 470 V 1902 470 V 1903 471 V 1904 471
V 1905 471 V 1906 472 V 1908 472 V 1909 472 V 1910 473
V 1911 473 V 1912 473 V 1913 474 V 1914 474 V 1915 474
V 1916 475 V 1917 475 V 1918 475 V 1919 475 V 1920 476
V 1922 476 V 1923 476 V 1924 476 V 1925 477 V 1926 477
V 1927 477 V 1928 477 V 1929 477 V 1930 478 V 1932 478
V 1933 478 V 1934 478 V 1935 478 V 1936 479 V 1937 479
V 1939 479 V 1940 479 V 1941 479 V 1942 479 V 1943 480
V 1944 480 V 1946 480 V 1947 480 V 1948 480 V 1949 480
V 1950 480 V 1952 480 V 1953 481 V 1954 481 V 1955 481
V 1957 481 V 1958 481 V 1959 481 V 1960 481 V 1962 481
V 1963 481 V 1964 481 V 1965 481 V 1967 481 V 1968 481
V 1969 481 V 1970 481 V 1972 481 V 1973 481 V 1974 481
V 1976 481 V 1977 481 V 1978 481 V 1980 481 V 1981 481
V 1982 481 V 1984 481 V 1985 481 V 1986 481 V 1988 481
V 1989 481 V 1990 481 V 1992 481 V 1993 481 V 1994 481
V 1996 481 V 1997 481 V 1998 480 V 2000 480 V 2001 480
V 2003 480 V 2004 480 V 2005 480 V 2007 480 V 2008 480
V 2010 479 V 2011 479 V 2012 479 V 2014 479 V 2015 479
V 2017 479 V 2018 478 V 2020 478 V 2021 478 V 2022 478
V 2024 478 V 2025 477 V 2027 477 V 2028 477 V 2030 477
V 2031 477 V 2033 476 V 2034 476 V 2036 476 V 2037 476
V 2039 475 V 2040 475 V 2042 475 V 2043 475 V 2045 474
V 2046 474 V 2048 474 V 2049 473 V 2051 473 V 2052 473
V 2054 472 V 2056 472 V 2057 472 V 2059 471 V 2060 471
V 2062 471 V 2063 470 V 2065 470 V 2066 470 V 2068 469
V 2070 469 V 2071 469 V 2073 468 V 2074 468 V 2076 467
V 2078 467 V 699 709 a Fg(Main)33 b(axis)410 b(Cen)m(tre)p
1737 626 4 71 v 2235 945 a(Re\015ecting)33 b(sphere)699
189 y(Inciden)m(t)i(ra)m(y)2235 472 y(Re\015ected)f(ra)m(y)2054
118 y
 gsave currentpoint currentpoint translate 53 neg rotate neg exch neg
exch translate
 2054 118 a Fg(Normal)2371 118 y
 currentpoint grestore moveto
 2371 118 a 1644
433 a Fa(6)p 1654 449 36 3 v 1731 449 a Fg(i)1880 551
y Fa(6)p 1890 567 V 1968 567 a Fg(r)p 0 TeXcolorgray
630 1466 a(Figure)e(3.2:)43 b(Ra)m(y)33 b(diagram)f(of)g(re\015ection)i
(at)e(a)h(conca)m(v)m(e)h(surface.)p 0 TeXcolorgray 0
TeXcolorgray 146 1876 a(When)29 b(w)m(e)h(w)m(an)m(t)f(to)e(magnify)i
(images,)h(conca)m(v)m(e)g(re\015ecting)f(surfaces)g(can)g(b)s(e)f(v)m
(ery)i(useful.)43 b(The)0 1997 y(b)s(eam)33 b(path)f(inside)i(a)f
(spherical)h(re\015ectiv)m(e)h(surface)e(is)g(sho)m(wn)h(in)f(\014gure)
g(3.2.)146 2117 y(An)f(image)f(is)g(considered)i(sharp)f(when)g(ev)m
(ery)h(p)s(oin)m(t)e(of)g(an)g(ob)5 b(ject)31 b(is)h(depicted)h(as)e(a)
f(p)s(oin)m(t)i(on)0 2237 y(the)h(image.)44 b(If)32 b(not)h(the)g(p)s
(oin)m(ts)g(b)s(ecome)g(\(large\))g(blobs)g(and)g(the)g(image)g(is)g
(unsharp.)p 0.9 TeXcolorgray 0.9 TeXcolorgray -75 2990
3911 600 v 0.9 TeXcolorgray 0 TeXcolorgray 146 2535 a
Ff(Exercise)h(5)c Fg(:)42 b(T)-8 b(ak)m(e)31 b(a)f(piece)h(of)e(pap)s
(er)h(and)g(dra)m(w)h(a)e(hollo)m(w)i(re\015ecting)g(sphere)g(with)f(a)
g(radius)0 2655 y(of)37 b(5.0)h(cm.)60 b(Dra)m(w)37 b(a)h(parallel)g(b)
s(eam)g(with)g(4)g(ra)m(ys)h(placed)f(1.0,)h(2.0,)g(3.0,)g(and)f(4.0)f
(cm)i(from)e(the)0 2776 y(main)31 b(axis.)43 b(Construct)32
b(the)f(re\015ection)h(of)e(these)i(b)s(eams)f(using)g(the)g(La)m(w)g
(of)f(Re\015ection.)44 b(Explain,)0 2896 y(using)33 b(y)m(our)g(dra)m
(wing,)h(if)e(a)g(spherical)i(mirror)f(can)g(b)s(e)g(used)g(to)g(mak)m
(e)g(sharp)g(images.)p 0.9 TeXcolorgray 0 TeXcolorgray
0 3323 a Fh(4)161 b(P)l(arab)t(olic)54 b(and)f(elliptic)f(mirrors)0
3542 y Fg(In)47 b(the)h(previous)g(section)g(w)m(e)g(sa)m(w)g(that)f(a)
f(spherical)j(mirror,)h(con)m(v)m(ex)f(or)e(conca)m(v)m(e,)52
b(do)s(es)c(not)0 3662 y(pro)s(duce)42 b(a)f(neat)h(fo)s(cal)e(p)s(oin)
m(t.)70 b(T)-8 b(o)42 b(build)g(a)f(telescop)s(e,)k(or)c(to)g
(otherwise)i(magnify)e(images,)k(w)m(e)0 3783 y(need)36
b(a)g(di\013eren)m(tly)h(shap)s(ed)f(mirror.)52 b(In)36
b(this)g(section)g(w)m(e)h(will)f(try)g(and)f(\014nd)h(out)f(what)h
(shap)s(e)g(is)0 3903 y(suitable.)146 4023 y(W)-8 b(e)49
b(can)g(use)g(the)g(Huygens)g(principle)h(\(or)e(Huygens)i(F)-8
b(resnel)49 b(principle\))h(to)e(predict)h(ho)m(w)0 4144
y(ligh)m(t)37 b(propagates)g(as)g(a)g(w)m(a)m(v)m(e.)58
b(Huygens)39 b(describ)s(ed)g(ligh)m(t)e(as)g(a)g(w)m(a)m(v)m(e,)j(not)
c(as)i(a)e(particle)i(as)f(his)0 4264 y(con)m(temp)s(orary)31
b(Newton)f(did.)43 b(His)30 b(w)m(a)m(v)m(es)i(had)e(t)m(w)m(o)g(imp)s
(ortan)m(t)g(prop)s(erties:)43 b(the)30 b(w)m(a)m(v)m(e)i(b)s(eam)d
(and)0 4385 y(the)i(w)m(a)m(v)m(e)i(fron)m(t.)42 b(The)32
b(w)m(a)m(v)m(e)h(b)s(eam)e(is)g(similar)g(to)f(the)i(ligh)m(t)f(ra)m
(y)g(and)f(indicates)i(the)g(direction)f(the)0 4505 y(ligh)m(t)j(tra)m
(v)m(els)i(in.)48 b(The)35 b(w)m(a)m(v)m(e)g(fron)m(t)f(is)h(a)f(p)s
(eak)g(\(crest\))h(or)e(trough)h(of)g(the)g(ligh)m(t)g(w)m(a)m(v)m(e.)
50 b(According)0 4625 y(to)27 b(the)h(Huygens)h(principle)g(the)f(next)
g(w)m(a)m(v)m(e)h(fron)m(t)e(can)h(b)s(e)g(found)f(b)m(y)h(dra)m(wing)h
(circles)g(on)e(the)h(w)m(a)m(v)m(e)0 4746 y(fron)m(t)36
b(with)h(a)f(radius)g(equal)h(to)f(the)g(w)m(a)m(v)m(e)i(length.)55
b(The)37 b(next)g(w)m(a)m(v)m(e)h(fron)m(t)e(can)g(b)s(e)h(sk)m(etc)m
(hed)i(out)0 4866 y(b)m(y)33 b(dra)m(wing)h(the)f(tangen)m(t)g(\(or)f
(tangen)m(t)h(curv)m(e\))h(to)e(all)h(the)g(circles,)h(see)g(\014gure)f
(4.1.)p 0.9 TeXcolorgray 0.9 TeXcolorgray -75 5359 3911
340 v 0.9 TeXcolorgray 0 TeXcolorgray 146 5164 a Ff(Exercise)45
b(6)39 b Fg(:)56 b(Lo)s(ok)38 b(at)g(\014gure)i(4.1,)g(explain)g(that)e
(the)i(previous)g(w)m(a)m(v)m(e)g(fron)m(t)f(also)g(touc)m(hes)0
5284 y(the)33 b(dra)m(wn)g(circles.)p 0.9 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1856 5816 a(3)p 0 TeXcolorgray
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
699 1654 a
 tx@Dict begin CM STV CP T newpath /a 0.0 def /w 284.52606 a add def
/d 0.0 a add neg def /h 199.16824 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 699 1654 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   0.0 99.58412 142.26303
.5 CLW mul sub 0 360 arc closepath  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   0.0 99.58412 170.71564
.5 CLW mul sub 0 360 arc closepath  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   118.07831 179.25142
28.4526 .5 CLW mul sub 0 360 arc closepath  gsave 0.8 SLW 0  setgray
 1. .setopacityalpha  3.0 4 DotLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   130.88199 153.64407
28.4526 .5 CLW mul sub 0 360 arc closepath  gsave 0.8 SLW 0  setgray
 1. .setopacityalpha  3.0 4 DotLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   139.41777 128.03673
28.4526 .5 CLW mul sub 0 360 arc closepath  gsave 0.8 SLW 0  setgray
 1. .setopacityalpha  3.0 4 DotLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   142.26303 99.58412
28.4526 .5 CLW mul sub 0 360 arc closepath  gsave 0.8 SLW 0  setgray
 1. .setopacityalpha  3.0 4 DotLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   139.41777 71.13152
28.4526 .5 CLW mul sub 0 360 arc closepath  gsave 0.8 SLW 0  setgray
 1. .setopacityalpha  3.0 4 DotLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   130.88199 45.52417
28.4526 .5 CLW mul sub 0 360 arc closepath  gsave 0.8 SLW 0  setgray
 1. .setopacityalpha  3.0 4 DotLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   118.07831 19.91682
28.4526 .5 CLW mul sub 0 360 arc closepath  gsave 0.8 SLW 0  setgray
 1. .setopacityalpha  3.0 4 DotLine  grestore end
 
@endspecial 2117 236 a Fg(Next)33 b(w)m(a)m(v)m(e)h(fron)m
(t)-1864 b(W)-8 b(a)m(v)m(e)34 b(fron)m(t)935 709 y(Auxiliary)g
(circles)699 827 y(\(Radius)f(=)g(w)m(a)m(v)m(e)h(length\))3061
1654 y
 currentpoint initclip moveto
 3061 1654 a 0 TeXcolorgray 1133 1821 a Fg(Figure)e(4.1:)44
b(The)33 b(Huygens)h(principle.)p 0 TeXcolorgray 0 TeXcolorgray
0.9 TeXcolorgray 0.9 TeXcolorgray -75 2419 3911 238 v
0.9 TeXcolorgray 0 TeXcolorgray 146 2325 a Ff(Exercise)j(7)31
b Fg(:)43 b(Explain)33 b(wh)m(y)g(the)f(w)m(a)m(v)m(e)i(fron)m(t)e(is)g
(alw)m(a)m(ys)h(p)s(erp)s(endicular)g(to)e(the)i(w)m(a)m(v)m(e)g(b)s
(eam.)p 0.9 TeXcolorgray 0 TeXcolorgray 146 2622 a(A)39
b(mirror)f(that)g(can)h(b)s(e)f(used)i(in)e(a)g(telescop)s(e)i(m)m(ust)
g(b)s(e)e(able)h(to)f(image)h(a)f(parallel)g(b)s(eam)h(of)0
2743 y(ligh)m(t)31 b(in)m(to)g(a)f(single)i(p)s(oin)m(t.)43
b(A)30 b(parallel)h(b)s(eam)g(of)f(ligh)m(t)h(according)g(to)f(the)h
(Huygens)h(principle)g(can)0 2863 y(b)s(e)f(seen)g(as)g(a)f(sheet)i(of)
e(\(squared\))h(graph)f(pap)s(er.)43 b(The)32 b(horizon)m(tal)e(lines)i
(are)e(the)h(ligh)m(t)g(b)s(eam,)g(the)0 2983 y(v)m(ertical)37
b(lines)f(are)f(the)h(w)m(a)m(v)m(e)h(fron)m(ts.)52 b(Figure)36
b(4.2)f(sho)m(ws)h(that)g(a)f(parab)s(olic)g(mirror)g(has)h(a)f(single)
0 3104 y(fo)s(cal)d(p)s(oin)m(t.)p 0.9 TeXcolorgray 0.9
TeXcolorgray -75 3616 3911 359 v 0.9 TeXcolorgray 0 TeXcolorgray
146 3401 a Ff(Exercise)27 b(8)d Fg(:)39 b(Use)25 b(the)f(Huygens)h
(principle)h(to)d(sho)m(w)i(that)e(the)i(w)m(a)m(v)m(e)g(fron)m(ts)f(b)
s(ecome)h(spherical)0 3522 y(when)34 b(ligh)m(t)f(con)m(v)m(erges)h(to)
m(w)m(ards)g(or)e(originates)h(from)g(a)f(single)h(p)s(oin)m(t.)p
0.9 TeXcolorgray 0 TeXcolorgray 0.9 TeXcolorgray 0.9
TeXcolorgray -75 4489 3911 720 v 0.9 TeXcolorgray 0 TeXcolorgray
146 3913 a Ff(Exercise)39 b(9)34 b Fg(:)45 b(T)-8 b(ak)m(e)35
b(a)e(lo)s(ok)h(at)f(\014gure)h(4.2.)46 b(Explain)35
b(ho)m(w)g(y)m(ou)f(can)g(construct)h(the)f(shap)s(e)g(of)0
4033 y(the)f(mirror)f(b)m(y)h(connecting)g(the)g(p)s(oin)m(ts)g(of)e
(in)m(tersection)j(of)e(the)h(w)m(a)m(v)m(e)h(fron)m(ts.)43
b(What)33 b(happ)s(ens)g(to)0 4154 y(the)c(w)m(a)m(v)m(e)i(fron)m(t)e
(at)f(the)i(surface)g(of)e(the)h(mirror?)42 b(Ho)m(w)30
b(man)m(y)g(w)m(a)m(v)m(e)h(lengths)f(do)s(es)f(the)g(ligh)m(t)g(tra)m
(v)m(el)0 4274 y(\(from)36 b(the)i(left\))e(to)h(reac)m(h)h(the)f(fo)s
(cal)f(p)s(oin)m(t?)56 b(Do)s(es)37 b(this)g(distance)h(di\013er)f(b)s
(et)m(w)m(een)i(the)e(di\013eren)m(t)0 4395 y(ra)m(ys?)p
0.9 TeXcolorgray 0 TeXcolorgray 0.9 TeXcolorgray 0.9
TeXcolorgray -75 4880 3911 238 v 0.9 TeXcolorgray 0 TeXcolorgray
146 4786 a Ff(Exercise)h(10)32 b Fg(:)44 b(V)-8 b(erify)33
b(that)f(the)h(mirror)g(in)g(\014gure)f(4.2)h(is)g(parab)s(olic.)p
0.9 TeXcolorgray 0 TeXcolorgray 146 5084 a(A)g(mirror)f(can)g(b)s(e)h
(used)g(to)f(image)h(a)f(single)h(p)s(oin)m(t)f(on)m(to)g(a)g(single)i
(p)s(oin)m(t.)43 b(The)33 b(inciden)m(t)h(b)s(eam)0 5204
y(of)27 b(ligh)m(t)g(is)h(in)g(this)g(case)g(div)m(ergen)m(t)h(instead)
f(of)f(parallel.)42 b(If)27 b(this)h(div)m(ergen)m(t)h(b)s(eam)e
(originated)h(from)0 5324 y(a)k(single)i(p)s(oin)m(t)f(the)g(w)m(a)m(v)
m(e)h(fron)m(ts)f(can)g(b)s(e)g(dra)m(wn)g(as)g(circles.)p
0 TeXcolorgray 1856 5816 a(4)p 0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
110 2060 a @beginspecial 0 @llx 0 @lly 354 @urx 206 @ury
4248 @rwi @setspecial
%%BeginDocument: ./images/plane_wave.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: parabool.fig
%%Creator: fig2dev Version 3.2 Patchlevel 5a
%%CreationDate: Fri Oct 19 15:39:56 2012
%%BoundingBox: 0 0 354 206
%Magnification: 1.0000
%%EndComments
%%BeginProlog
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

/pageheader {
save
newpath 0 206 moveto 0 0 lineto 354 0 lineto 354 206 lineto closepath clip newpath
114.1 210.5 translate
1 -1 scale
$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06299 0.06299 sc
} bind def
/pagefooter {
$F2psEnd
restore
} bind def
%%EndProlog
pageheader
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Arc
15.000 slw
0 slc
n -1498.8 4456.6 5294.8 -53.8713 -48.9266 arc
gs col0 s gr

% Arc
n -975.7 3756.3 4423.7 -48.0749 -41.4496 arc
gs col0 s gr

% Arc
n 1195.2 1813.1 1508.3 -40.6253 -3.9184 arc
gs col0 s gr

% Arc
n 1224.0 1626.6 1478.2 3.1170 40.6202 arc
gs col0 s gr

% Arc
n -1025.6 -392.0 4500.4 41.4811 48.0474 arc
gs col0 s gr

% Arc
n -116215.5 -148819.5 192370.4 52.0894 52.2263 arc
gs col0 s gr

% Ellipse
7.500 slw
n 2153 1705 360 360 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 2163 1716 720 720 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 2167 1713 1080 1080 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 2160 1710 540 540 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 2160 1710 900 900 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 2160 1710 1260 1260 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 2160 1710 1620 1620 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 2160 1710 180 180 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 2160 1710 1440 1440 0 360 DrawEllipse gs col0 s gr

% Polyline
0 slj
n -1440 90 m
 -1440 3330 l gs col0 s gr 
% Polyline
n -1080 90 m
 -1080 3330 l gs col0 s gr 
% Polyline
n -720 90 m
 -720 3330 l gs col0 s gr 
% Polyline
n -360 90 m
 -360 3330 l gs col0 s gr 
% Polyline
n 0 90 m
 0 3330 l gs col0 s gr 
% Polyline
n 360 90 m
 360 3330 l gs col0 s gr 
% Polyline
n 720 90 m
 720 3330 l gs col0 s gr 
% Polyline
n 1080 90 m
 1080 3330 l gs col0 s gr 
% Polyline
n 1440 90 m
 1440 3330 l gs col0 s gr 
% Polyline
n 1800 90 m
 1800 3330 l gs col0 s gr 
% Polyline
n 2160 90 m
 2160 3330 l gs col0 s gr 
% Polyline
n 2520 90 m
 2520 3330 l gs col0 s gr 
% Polyline
n 2880 90 m
 2880 3330 l gs col0 s gr 
% Polyline
n 3240 90 m
 3240 3330 l gs col0 s gr 
% Polyline
n 3600 90 m
 3600 3330 l gs col0 s gr 
% Polyline
n -1620 90 m
 -1620 3330 l gs col0 s gr 
% Polyline
n -1800 90 m
 -1800 3330 l gs col0 s gr 
% Polyline
n -1260 90 m
 -1260 3330 l gs col0 s gr 
% Polyline
n -900 90 m
 -900 3330 l gs col0 s gr 
% Polyline
n -540 90 m
 -540 3330 l gs col0 s gr 
% Polyline
n -180 90 m
 -180 3330 l gs col0 s gr 
% Polyline
n 180 90 m
 180 3330 l gs col0 s gr 
% Polyline
n 540 90 m
 540 3330 l gs col0 s gr 
% Polyline
n 900 90 m
 900 3330 l gs col0 s gr 
% Polyline
n 1260 90 m
 1260 3330 l gs col0 s gr 
% Polyline
n 1620 90 m
 1620 3330 l gs col0 s gr 
% Polyline
n 1980 90 m
 1980 3330 l gs col0 s gr 
% Polyline
n 2340 90 m
 2340 3330 l gs col0 s gr 
% Polyline
n 2700 90 m
 2700 3330 l gs col0 s gr 
% Polyline
n 3060 90 m
 3060 3330 l gs col0 s gr 
% Polyline
n 3420 90 m
 3420 3330 l gs col0 s gr 
% Polyline
n 3780 90 m
 3780 3330 l gs col0 s gr 
% Polyline
 [60] 0 sd
n -1800 90 m
 3780 90 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n -1800 270 m
 3780 270 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n -1800 450 m
 3780 450 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n -1800 630 m
 3780 630 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n -1800 810 m
 3780 810 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n -1800 990 m
 3780 990 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n -1800 1170 m
 3780 1170 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n -1800 1350 m
 3780 1350 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n -1800 1530 m
 3780 1530 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n -1800 1710 m
 3780 1710 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n -1800 1890 m
 3780 1890 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n -1800 2070 m
 3780 2070 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n -1800 2250 m
 3780 2250 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 3780 2430 m
 -1800 2430 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 3780 2610 m
 -1800 2610 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 3780 2790 m
 -1800 2790 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 3780 2970 m
 -1800 2970 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 3780 3150 m
 -1800 3150 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 3780 3330 m
 -1800 3330 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 1732 266 m
 2152 1710 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 1957 446 m
 2152 1702 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2321 810 m
 2152 1706 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2452 990 m
 2152 1706 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2561 1166 m
 2152 1710 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2632 1346 m
 2152 1710 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2677 1530 m
 2152 1706 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2681 1891 m
 2152 1707 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2632 2067 m
 2156 1703 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2561 2251 m
 2156 1707 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2464 2431 m
 2152 1703 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2317 2614 m
 2156 1707 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 1950 2969 m
 2152 1705 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 1717 3156 m
 2152 1704 l gs col0 s gr  [] 0 sd
% here ends figure;
pagefooter
showpage
%%Trailer
%EOF

%%EndDocument
 @endspecial 0 TeXcolorgray 1214 2227 a Fg(Figure)33
b(4.2:)43 b(A)33 b(parab)s(olic)f(mirror.)p 0 TeXcolorgray
0 TeXcolorgray 0.9 TeXcolorgray 0.9 TeXcolorgray -75
3071 3911 485 v 0.9 TeXcolorgray 0 TeXcolorgray 146 2737
a Ff(Exercise)h(11)28 b Fg(:)41 b(Dra)m(w)29 b(a)f(p)s(oin)m(t)g(of)g
(ligh)m(t)h(and)f(a)g(fo)s(cal)g(p)s(oin)m(t)g(with)h(the)g
(appropriate)f(\(p)s(ossible\))0 2857 y(w)m(a)m(v)m(e)h(fron)m(ts.)42
b(Construct)29 b(the)f(mirror)f(needed)i(to)e(image)h(the)f(p)s(oin)m
(t)h(of)f(ligh)m(t)g(on)m(to)h(the)g(fo)s(cal)e(p)s(oin)m(t.)0
2977 y(Its)33 b(shap)s(e)g(should)h(b)s(e)f(elliptical.)p
0.9 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1856 5816
a(5)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
